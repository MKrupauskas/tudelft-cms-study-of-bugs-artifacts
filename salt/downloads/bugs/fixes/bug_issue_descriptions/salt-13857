passing a partial sha as a `rev` to `git.latest` results in an unnecessary checkout on each run after the full sha at `HEAD` is compared to the `rev` argument. if it is determined that `rev` is not a branch or tag name, it should be expanded for comparison against the full sha at `head`. i'm not setup for local salt development (yet) but i thought i would throw this up in the event it needed to be patched before helium. here's the patch i threw in to make sure that the error was fixable:

``` diff
diff --git a/salt/states/git.py b/salt/states/git.py
index d0029ee..22f854b 100644
--- a/salt/states/git.py
+++ b/salt/states/git.py
@@ -174,10 +174,13 @@ def latest(name,
             if len(branch) > 0 and branch == rev:
                 remote_rev = __salt__['git.ls_remote'](target,
                                                        repository=name,
                                                        branch=branch, user=user,
                                                        identity=identity)
+            # expand partial sha's
+            elif len(rev) < 40:
+              rev = __salt__['git.revision'](target, rev=rev, user=user)

             # only do something, if the specified rev differs from the
             # current_rev and remote_rev
             if current_rev in [rev, remote_rev]:
                 new_rev = current_rev
```

i'll open a proper pull request whenever i get a chance to setup a working development environment locally.
