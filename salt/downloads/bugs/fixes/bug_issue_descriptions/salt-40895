### Description of Issue

I installed salt with salt-bootstrap on kde neon and cannot apply a simple state that ensures that the package vim is installed.


### Setup

```yaml
top.sls 
base:
  '*':
    - vim

vim.sls 
vim:
  pkg:
    - installed
```


### Steps to Reproduce Issue

1. Install latest salt via salt-boostrap with fix for neon to be recognized as debian based.
1. Set-Up as masterless.
1. Set-Up state tree as outlined above.
1. Execute the following command: `sudo salt-call --local state.apply -l debug`.


### Versions Report

```yaml
$ salt-call --versions-report
Salt Version:
           Salt: 2015.8.8
 
Dependency Versions:
         Jinja2: 2.9.6
       M2Crypto: Not Installed
           Mako: Not Installed
         PyYAML: 3.12
          PyZMQ: 16.0.2
         Python: 2.7.12 (default, Nov 19 2016, 06:48:10)
           RAET: Not Installed
        Tornado: 4.5.1
            ZMQ: 4.1.6
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.4.2
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
        libgit2: Not Installed
        libnacl: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
   python-gnupg: Not Installed
          smmap: Not Installed
        timelib: Not Installed
 
System Versions:
           dist: neon 16.04 xenial
        machine: x86_64
        release: 4.8.0-49-generic
         system: neon 16.04 xenial

$ lsb_release -a
No LSB modules are available.
Distributor ID: neon
Description:    KDE neon User Edition 5.9
Release:        16.04
Codename:       xenial

$ python --version
Python 2.7.12

$ salt-call --version
salt-call 2015.8.8 (Beryllium)

$ salt-minion --version
salt-minion 2015.8.8 (Beryllium)
```


### Error message with debug info

```
$ sudo salt-call --local state.apply -l debug
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: nauru
[DEBUG   ] Configuration file path: /etc/salt/minion
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[DEBUG   ] Reading configuration from /etc/salt/minion
[INFO    ] Determining pillar cache
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] LazyLoaded state.apply
[DEBUG   ] LazyLoaded grains.get
[DEBUG   ] LazyLoaded saltutil.is_running
[DEBUG   ] LazyLoaded roots.envs
[DEBUG   ] Could not LazyLoad roots.init
[DEBUG   ] Updating roots fileserver cache
[INFO    ] Determining pillar cache
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[INFO    ] Loading fresh modules for state activity
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] In saltenv 'base', looking at rel_path u'top.sls' to resolve u'salt://top.sls'
[DEBUG   ] In saltenv 'base', ** considering ** path u'/var/cache/salt/minion/files/base/top.sls' to resolve u'salt://top.sls'
[INFO    ] Fetching file from saltenv 'base', ** skipped ** latest already in cache u'salt://top.sls'
[DEBUG   ] compile template: /var/cache/salt/minion/files/base/top.sls
[DEBUG   ] Jinja search path: ['/var/cache/salt/minion/files/base']
[PROFILE ] Time (in seconds) to render '/var/cache/salt/minion/files/base/top.sls' using 'jinja' renderer: 0.00217294692993
[DEBUG   ] Rendered data from file: /var/cache/salt/minion/files/base/top.sls:
base:
  '*':
    - vim

[DEBUG   ] LazyLoaded config.get
[DEBUG   ] Results of YAML rendering: 
OrderedDict([('base', OrderedDict([('*', ['vim'])]))])
[PROFILE ] Time (in seconds) to render '/var/cache/salt/minion/files/base/top.sls' using 'yaml' renderer: 0.00353217124939
[DEBUG   ] compound_match: nauru ? *
[DEBUG   ] compound_match nauru ? "*" => "True"
[DEBUG   ] LazyLoaded saltutil.sync_all
[DEBUG   ] Syncing all
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/beacons'
[INFO    ] Syncing beacons for environment 'base'
[INFO    ] Loading cache from salt://_beacons, for base)
[DEBUG   ] LazyLoaded cp.cache_dir
[DEBUG   ] LazyLoaded roots.envs
[DEBUG   ] Could not LazyLoad roots.init
[DEBUG   ] Updating roots fileserver cache
[INFO    ] Caching directory u'_beacons/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_beacons'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/modules'
[INFO    ] Syncing modules for environment 'base'
[INFO    ] Loading cache from salt://_modules, for base)
[INFO    ] Caching directory u'_modules/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_modules'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/states'
[INFO    ] Syncing states for environment 'base'
[INFO    ] Loading cache from salt://_states, for base)
[INFO    ] Caching directory u'_states/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_states'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/sdb'
[INFO    ] Syncing sdb for environment 'base'
[INFO    ] Loading cache from salt://_sdb, for base)
[INFO    ] Caching directory u'_sdb/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_sdb'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/grains'
[INFO    ] Syncing grains for environment 'base'
[INFO    ] Loading cache from salt://_grains, for base)
[INFO    ] Caching directory u'_grains/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_grains'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/renderers'
[INFO    ] Syncing renderers for environment 'base'
[INFO    ] Loading cache from salt://_renderers, for base)
[INFO    ] Caching directory u'_renderers/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_renderers'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/returners'
[INFO    ] Syncing returners for environment 'base'
[INFO    ] Loading cache from salt://_returners, for base)
[INFO    ] Caching directory u'_returners/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_returners'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/output'
[INFO    ] Syncing output for environment 'base'
[INFO    ] Loading cache from salt://_output, for base)
[INFO    ] Caching directory u'_output/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_output'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/utils'
[INFO    ] Syncing utils for environment 'base'
[INFO    ] Loading cache from salt://_utils, for base)
[INFO    ] Caching directory u'_utils/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_utils'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/log_handlers'
[INFO    ] Syncing log_handlers for environment 'base'
[INFO    ] Loading cache from salt://_log_handlers, for base)
[INFO    ] Caching directory u'_log_handlers/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_log_handlers'
[INFO    ] Creating module dir '/var/cache/salt/minion/extmods/proxy'
[INFO    ] Syncing proxy for environment 'base'
[INFO    ] Loading cache from salt://_proxy, for base)
[INFO    ] Caching directory u'_proxy/' for environment 'base'
[DEBUG   ] Local cache dir: '/var/cache/salt/minion/files/base/_proxy'
[DEBUG   ] Refreshing modules...
[INFO    ] Loading fresh modules for state activity
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] In saltenv 'base', looking at rel_path u'vim.sls' to resolve u'salt://vim.sls'
[DEBUG   ] In saltenv 'base', ** considering ** path u'/var/cache/salt/minion/files/base/vim.sls' to resolve u'salt://vim.sls'
[INFO    ] Fetching file from saltenv 'base', ** skipped ** latest already in cache u'salt://vim.sls'
[DEBUG   ] compile template: /var/cache/salt/minion/files/base/vim.sls
[DEBUG   ] Jinja search path: ['/var/cache/salt/minion/files/base']
[PROFILE ] Time (in seconds) to render '/var/cache/salt/minion/files/base/vim.sls' using 'jinja' renderer: 0.000722885131836
[DEBUG   ] Rendered data from file: /var/cache/salt/minion/files/base/vim.sls:
vim:
  pkg:
    - installed

[DEBUG   ] LazyLoaded config.get
[DEBUG   ] Results of YAML rendering: 
OrderedDict([('vim', OrderedDict([('pkg', ['installed'])]))])
[PROFILE ] Time (in seconds) to render '/var/cache/salt/minion/files/base/vim.sls' using 'yaml' renderer: 0.00166010856628
[DEBUG   ] Error loading module.victorops: No VictorOps api key found.
[DEBUG   ] Error loading module.win_status: Cannot load win_status module on non-windows
[DEBUG   ] Error loading module.ssh_service: The ssh_service execution module failed to load: only works on an ssh_sample proxy minion.
[DEBUG   ] Error loading module.win_servermanager: Failed to load win_servermanager module:
Only available on Windows systems.
[DEBUG   ] Error loading module.rh_service: Cannot load rh_service module: OS not in set(['SUSE  Enterprise Server', 'SUSE', 'RedHat', 'CentOS', 'CloudLinux', 'McAfee  OS Server', 'XenServer', 'Amazon', 'OEL', 'ScientificLinux', 'ALT', 'Fedora'])
[DEBUG   ] Error loading module.rest_service: The rest_service execution module failed to load: only works on a rest_sample proxy minion.
[DEBUG   ] Error loading module.ifttt: IFTTT Secret Key Unavailable, not loading.
[DEBUG   ] Error loading module.rest_package: The rest_package execution module failed to load: only works on a rest_sample proxy minion.
[DEBUG   ] Error loading module.glusterfs: glusterfs server is not installed
[DEBUG   ] Error loading module.vsphere: Missing dependency: The vSphere module requires the pyVmomi Python module.
[DEBUG   ] Error loading module.nacl: libnacl import error, perhaps missing python libnacl package
[DEBUG   ] Error loading module.ssh_package: The ssh_package execution module failed to load: only works on an ssh_sample proxy minion.
[DEBUG   ] Error loading module.boto_cloudwatch: The boto_cloudwatch module cannot be loaded: boto libraries are unavailable.
[DEBUG   ] File doesn't exist
[DEBUG   ] "GET /version HTTP/1.1" 200 225
[DEBUG   ] "GET /v1.28/version HTTP/1.1" 200 225
[DEBUG   ] Error loading module.ipmi: No module named pyghmi.ipmi
[DEBUG   ] Error loading module.npm: npm execution module could not be loaded because the npm binary could not be located
[DEBUG   ] Error loading module.x509: Could not load x509 module, m2crypto unavailable
[DEBUG   ] Could not LazyLoad pkg.install
[DEBUG   ] Could not LazyLoad pkg.get_selections
[DEBUG   ] Could not LazyLoad pkg.mod_repo
[DEBUG   ] LazyLoaded xmpp.send_msg
[DEBUG   ] LazyLoaded lvs.get_rules
[DEBUG   ] LazyLoaded portage_config.get_missing_flags
[DEBUG   ] LazyLoaded boto_sns.exists
[DEBUG   ] LazyLoaded layman.add
[DEBUG   ] LazyLoaded selinux.getenforce
[DEBUG   ] LazyLoaded win_servermanager.install
[DEBUG   ] LazyLoaded boto_iam.role_exists
[DEBUG   ] LazyLoaded ipset.version
[DEBUG   ] lzma module is not available
[DEBUG   ] Registered VCS backend: git
[DEBUG   ] Registered VCS backend: hg
[DEBUG   ] Registered VCS backend: svn
[DEBUG   ] Registered VCS backend: bzr
[DEBUG   ] LazyLoaded boto_cfn.exists
[DEBUG   ] Error loading states.boto_cfn: Cannot load boto_cfn state: boto_cfn module unavailable
[DEBUG   ] LazyLoaded ifttt.trigger_event
[DEBUG   ] LazyLoaded victorops.create_event
[DEBUG   ] LazyLoaded boto_asg.exists
[DEBUG   ] LazyLoaded boto_elb.exists
[DEBUG   ] LazyLoaded win_dns_client.add_dns
[DEBUG   ] LazyLoaded npm.list
[DEBUG   ] Error loading states.npm: 'npm' binary not found on system
[DEBUG   ] Could not LazyLoad augeas.execute
[DEBUG   ] LazyLoaded glusterfs.list_volumes
[DEBUG   ] LazyLoaded makeconf.get_var
[DEBUG   ] Could not LazyLoad ip.get_interface
[DEBUG   ] LazyLoaded stormpath.create_account
[DEBUG   ] LazyLoaded boto_cloudwatch.get_alarm
[DEBUG   ] Could not LazyLoad elasticsearch.exists
[DEBUG   ] LazyLoaded boto_route53.get_record
[DEBUG   ] LazyLoaded win_path.rehash
[DEBUG   ] LazyLoaded win_dacl.add_ace
[DEBUG   ] LazyLoaded memcached.status
[DEBUG   ] Could not LazyLoad influxdb.db_exists
[DEBUG   ] LazyLoaded mongodb.user_exists
[DEBUG   ] LazyLoaded splunk_search.get
[DEBUG   ] LazyLoaded boto_secgroup.exists
[DEBUG   ] LazyLoaded lvs.get_rules
[DEBUG   ] LazyLoaded boto_vpc.exists
[DEBUG   ] LazyLoaded boto_ec2.get_key
[DEBUG   ] LazyLoaded apache.a2enmod
[DEBUG   ] LazyLoaded postgres.user_exists
[DEBUG   ] LazyLoaded postgres.schema_exists
[DEBUG   ] LazyLoaded reg.read_key
[DEBUG   ] Could not LazyLoad firewall.get_config
[DEBUG   ] LazyLoaded chassis.cmd
[DEBUG   ] Could not LazyLoad bigip.exec_action
[DEBUG   ] LazyLoaded apache.config
[INFO    ] Executing command ['git', '--version'] in directory '/home/eike'
[DEBUG   ] stdout: git version 2.7.4
[DEBUG   ] LazyLoaded boto_asg.exists
[DEBUG   ] LazyLoaded eselect.exec_action
[DEBUG   ] LazyLoaded nftables.version
[DEBUG   ] LazyLoaded trafficserver.set_var
[DEBUG   ] LazyLoaded boto_dynamodb.exists
[DEBUG   ] LazyLoaded boto_sqs.exists
[DEBUG   ] LazyLoaded bower.list
[DEBUG   ] LazyLoaded postgres.group_create
[DEBUG   ] LazyLoaded pecl.list
[DEBUG   ] LazyLoaded rdp.enable
[DEBUG   ] LazyLoaded chef.client
[DEBUG   ] LazyLoaded boto_elasticache.exists
[DEBUG   ] LazyLoaded esxi.cmd
[DEBUG   ] Could not LazyLoad influxdb.db_exists
[DEBUG   ] LazyLoaded zk_concurrency.lock
[DEBUG   ] LazyLoaded at.at
[DEBUG   ] LazyLoaded keystone.auth
[DEBUG   ] Error loading states.ipmi: No module named pyghmi.ipmi
[DEBUG   ] Error loading states.x509: Could not load x509 state: m2crypto unavailable
[DEBUG   ] Error loading states.boto_iam: Cannot load boto_iam state: boto_iam module unavailable
[DEBUG   ] Could not LazyLoad pkg.installed
[INFO    ] Running state [vim] at time 09:23:02.565121
[DEBUG   ] LazyLoaded pkg.installed
[ERROR   ] State 'pkg.installed' was not found in SLS 'vim'
Reason: 'pkg' __virtual__ returned False

[DEBUG   ] File /var/cache/salt/minion/accumulator/139827585653520 does not exist, no need to cleanup.
[DEBUG   ] LazyLoaded highstate.output
local:
----------
          ID: vim
    Function: pkg.installed
      Result: False
     Comment: State 'pkg.installed' was not found in SLS 'vim'
              Reason: 'pkg' __virtual__ returned False
     Started: 
    Duration: 
     Changes:   

Summary for local
------------
Succeeded: 0
Failed:    1
------------
Total states run:     1
```

### Linked Issues

- https://github.com/saltstack/salt/issues/32198
- https://github.com/saltstack/salt-bootstrap/issues/1050

---

Thank you very much for your efforts! Do you need any additional information?