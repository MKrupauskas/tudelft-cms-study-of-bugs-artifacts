So I noticed when upgrading to 0.16.0 that my custom django module was not being used anymore, and instead salt was using the builtin django module.

While I can easily work around this by namespacing my custom module to something else, I still think this should work differently.

To reproduce:

1) Create a custom command module in your _modules directory with the same module name and function as an existing module (ie: test.py  def ping())
2) Run saltutil.sync_all on the minion
3) Try to run your custom version of a default module. Salt will run the builtin version of the module.

I often override the default modules in salt, especially when debugging or testing new functionality in state modules. As it's more convenient than installing salt in a development environment.
