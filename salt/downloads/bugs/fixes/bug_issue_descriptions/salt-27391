When you use schedule.present, it invokes build_schedule_item() to create a proper schedule dict to compare against the currently live schedules on the minion.  The problem seems to be that build_schedule_item does not honor or default with an enabled option, but the live schedule contains one.

This means schedule.present will see the results from build_schedule_item differing from the live schedule, which causes it to invoke schedule.modify.  Since the schedule being written ultimately results in enabled being present, they eternally fight with each other adding and removing the enabled option.  I'm running on 2015.8.0, but this same behavior can be seen on 2014.7 and 2015.5.

You see this on every schedule on highstate for example:

```
          ID: manage_keys
    Function: schedule.present
      Result: True
     Comment: Modifying job manage_keys in schedule
     Started: 17:31:15.404923
    Duration: 217.805 ms
     Changes:
              ----------
              diff:
                  ---
                  +++
                  @@ -1,4 +1,3 @@
                  -enabled:True
                   function:edkeys.sync
                   jid_include:True
                   maxrunning:1
```

Based on past scheduler issues/commits, @garethgreenaway seems the right person to pester to see how much fail I've cooked up.
