### Description of Issue/Question
The `file.managed` state function often returns an empty `changes` dict when run with `test=true`. In fact, the only time a non-empty `changes` dict is returned is when there will be a change to the file content. All other managed changes (e.g. owner, group, mode) will return an empty `changes` dict, which causes several requisites to misbehave, including `wait`, `listen`, `prereq`, and `onchanges`

This error was introduced with PR #26134 when the `changes` dict was renamed to `pchanges`, resulting in and empty `changes` dict in all cases.
It was _partially_ fixed with PR #26982, which populated the `changes` dict for file content differences, which is probably why this has gone unnoticed for so long.

The real problem seems to be the original change from `changes` to `pchanges` introduced by @thatch45. No other state modules use `pchanges`, and I don't see any other code that makes use of a `pchanges` key in the returned dictionary. It seems to me that the changes made in PR #26134 should be reverted entirely.
