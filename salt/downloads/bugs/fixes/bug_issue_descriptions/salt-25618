The current reg.py thinks of registry keys as if they were python keys in a dictionary which is not the case. The windows registry is broken down into the following components:
### Hives

This is the top level of the registry. They all begin with HKEY.
- HKEY_CLASSES_ROOT (HKCR)
- HKEY_CURRENT_USER(HKCU)
- HKEY_LOCAL MACHINE (HKLM)
- HKEY_USER (HKU)
- HKEY_CURRENT_CONFIG
### Keys

Hives contain keys. These are basically the folders beneath the hives. They can contain subkeys.
### Values

Values are the name/data pairs beneath the keys and subkeys.

The following example is taken from the windows startup portion of the registry:

```
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run]
"RTHDVCPL"="\"C:\\Program Files\\Realtek\\Audio\\HDA\\RtkNGUI64.exe\" -s"
"NvBackend"="\"C:\\Program Files (x86)\\NVIDIA Corporation\\Update Core\\NvBackend.exe\""
"BTMTrayAgent"="rundll32.exe \"C:\\Program Files (x86)\\Intel\\Bluetooth\\btmshellex.dll\",TrayApp"
```

In this example these are the values for each:
Hive: `HKEY_LOCAL_MACHINE`
Key and subkeys: `SOFTWARE\Microsoft\Windows\CurrentVersion\Run`
Value: There are 3 values: `RTHDVCPL`, `NvBackend`, and `BTMTrayAgent`

The way reg.py works right now it does not differentiate between values and keys. It sees everything as a value.
