Solaris 11 system with tunnel network interface enabled has following 'ifconfig -a' output:

```
vpn0: flags=1000011008d1<UP,POINTOPOINT,RUNNING,NOARP,MULTICAST,ROUTER,IPv4,PHYSRUNNING> mtu 1480 index 5
        inet tunnel src 10.10.10.12 tunnel dst 10.10.10.16
        tunnel hop limit 64 
        inet 10.6.0.14 --> 10.6.0.15 netmask ff000000 
vpn0: flags=120002200850<POINTOPOINT,RUNNING,MULTICAST,NONUD,IPv6,PHYSRUNNING> mtu 1480 index 5
        inet tunnel src 10.10.10.12 tunnel dst 10.10.10.16
        tunnel hop limit 64 
        inet6 ::/0 --> fe80::b2d6:7c10
```

salt-minion, upon start, tries to parse network information to fill grains data. Before 2014.7.0, Solaris minions just contained wrong information in network.interfaces module. But starting from 2014.7.0 salt-minions fails to start with following error:

```
[TRACE   ] 'ip' could not be found in the following search path: ['/bin', '/sbin', '/usr/bin', '/usr/sbin']
[ERROR   ] An un-handled exception was caught by salt's global exception handler:
ValueError: invalid literal for int() with base 10: 'tunnel'
Traceback (most recent call last):
  File "/bin/salt-minion", line 14, in <module>
    salt_minion()
  File "/usr/lib/python2.6/vendor-packages/salt/scripts.py", line 56, in salt_minion
    minion.start()
  File "/usr/lib/python2.6/vendor-packages/salt/__init__.py", line 262, in start
    self.prepare()
  File "/usr/lib/python2.6/vendor-packages/salt/__init__.py", line 241, in prepare
    self.minion = salt.minion.Minion(self.config)
  File "/usr/lib/python2.6/vendor-packages/salt/minion.py", line 592, in __init__
    opts['grains'] = salt.loader.grains(opts)
  File "/usr/lib/python2.6/vendor-packages/salt/loader.py", line 381, in grains
    grains_info = load.gen_grains(force_refresh)
  File "/usr/lib/python2.6/vendor-packages/salt/loader.py", line 1221, in gen_grains
    ret = fun()
  File "/usr/lib/python2.6/vendor-packages/salt/grains/core.py", line 1169, in ip4
    return {'ipv4': salt.utils.network.ip_addrs(include_loopback=True)}
  File "/usr/lib/python2.6/vendor-packages/salt/utils/network.py", line 793, in ip_addrs
    loopback = in_subnet('127.0.0.0/8', [ipv4.get('address')]) or ipv4.get('label') == 'lo'
  File "/usr/lib/python2.6/vendor-packages/salt/utils/network.py", line 770, in in_subnet
    ip_leftbits = _ipv4_to_bits(ip_addr)[0:netsize]
  File "/usr/lib/python2.6/vendor-packages/salt/utils/network.py", line 702, in _ipv4_to_bits
    return ''.join([bin(int(x))[2:].rjust(8, '0') for x in ipaddr.split('.')])
ValueError: invalid literal for int() with base 10: 'tunnel'
Traceback (most recent call last):
  File "/bin/salt-minion", line 14, in <module>
    salt_minion()
  File "/usr/lib/python2.6/vendor-packages/salt/scripts.py", line 56, in salt_minion
    minion.start()
  File "/usr/lib/python2.6/vendor-packages/salt/__init__.py", line 262, in start
    self.prepare()
  File "/usr/lib/python2.6/vendor-packages/salt/__init__.py", line 241, in prepare
    self.minion = salt.minion.Minion(self.config)
  File "/usr/lib/python2.6/vendor-packages/salt/minion.py", line 592, in __init__
    opts['grains'] = salt.loader.grains(opts)
  File "/usr/lib/python2.6/vendor-packages/salt/loader.py", line 381, in grains
    grains_info = load.gen_grains(force_refresh)
  File "/usr/lib/python2.6/vendor-packages/salt/loader.py", line 1221, in gen_grains
    ret = fun()
  File "/usr/lib/python2.6/vendor-packages/salt/grains/core.py", line 1169, in ip4
    return {'ipv4': salt.utils.network.ip_addrs(include_loopback=True)}
  File "/usr/lib/python2.6/vendor-packages/salt/utils/network.py", line 793, in ip_addrs
    loopback = in_subnet('127.0.0.0/8', [ipv4.get('address')]) or ipv4.get('label') == 'lo'
  File "/usr/lib/python2.6/vendor-packages/salt/utils/network.py", line 770, in in_subnet
    ip_leftbits = _ipv4_to_bits(ip_addr)[0:netsize]
  File "/usr/lib/python2.6/vendor-packages/salt/utils/network.py", line 702, in _ipv4_to_bits
    return ''.join([bin(int(x))[2:].rjust(8, '0') for x in ipaddr.split('.')])
ValueError: invalid literal for int() with base 10: 'tunnel'
```
