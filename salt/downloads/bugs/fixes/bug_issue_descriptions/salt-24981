If iptables hasn't been "initialized" on the target server, for example by "iptables -L", the _parse_conf() function tries to save iptables state and parse its output expecting the `iptables-save` to return valid rules:

https://github.com/saltstack/salt/blob/develop/salt/modules/iptables.py#L892

``` python
rules = ''
    if conf_file:
        with salt.utils.fopen(conf_file, 'r') as ifile:
            rules = ifile.read()
    elif in_mem:
        cmd = '{0}-save' . format(_iptables_cmd(family))
        rules = __salt__['cmd.run'](cmd)
    else:
        raise SaltException('A file was not found to parse')
```

However, `iptables-save` prints nothing when executed before any manipulation with `iptables`, as described in not-a-bug https://bugzilla.redhat.com/show_bug.cgi?id=849573 .

A solid test (on Debian-based systems at least) of a table module been loaded is `lsmod`. If the output conains the lines `iptable_filter`, `iptable_nat` or `iptable_mangle`, getting policy for the respective table will succeed. It should be sufficient to `modprobe` these before the first time iptables functions are run.
