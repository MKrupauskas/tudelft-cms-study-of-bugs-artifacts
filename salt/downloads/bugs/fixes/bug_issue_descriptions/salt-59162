**Description**
There is retry option implemented for ZeroMQ transport PubChannel send method (https://github.com/saltstack/salt/blob/master/salt/transport/zeromq.py#L1369 and https://github.com/saltstack/salt/blob/master/salt/transport/zeromq.py#L1358 ), however the same logic isn't implemented in TCP transport. This results in lost events in case master is overloaded when on TCP transport.

**Setup**
Regular minion&master with TCP transport configured

**Steps to Reproduce the behavior**
1. Run some job (such as `salt --async '*' test.sleep 20`)
2. Shut down master and wait for 21 seconds
3. Start the master again
4. Job results are now lost

Minions will respond with `The minion failed to return the job information for job %s. This is often due to the master being shut down or overloaded. If the master is running, consider increasing the worker_threads value.` (see https://github.com/saltstack/salt/blob/master/salt/minion.py#L2201 ).

However when on ZeroMQ transport, there will be `SaltReqTimeoutError, retrying.` message visible in debug logs and job results will be eventially delivered (if the master is not down for too long as the default retry count is quite low).

**Expected behavior**
TCP transport will try to deliver the result multiple times.

**Versions Report**
Current master branch & all previous versions.

