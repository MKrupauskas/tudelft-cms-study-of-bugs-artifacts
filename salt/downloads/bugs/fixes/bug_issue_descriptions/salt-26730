__opts__['user'] defaults to 'root' if not specified, even though on Windows the installer has it running as 'Local System' or something.

This causes a minor issue when creating symlinks on Windows because (according to the docs) the user/owner defaults to the user that is running the minion. As file.symlink uses __opts__['user'] to figure that out, by default Windows will try to create symlinks as 'root' and fail which doesn't match the behaviour in the docs. The docs say that the user arg will default to the user running the minion.

The workaround for file.symlink is to always specify the user on Windows.

But this could also be a problem for other modules and states that assume __opts__['user'] is the actual user running the minion rather than the default from the config file.

Should the minion actually test which user it is running under to populate __opts__['user']? Even if that contradicts the config file? Maybe only test if user is not specified in the config file?

Or should all the states and modules be more careful about whether they really want the actual running user or the value/fallback from the config file?
