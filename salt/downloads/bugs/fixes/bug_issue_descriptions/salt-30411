While running minion in debug log level I've noticed the connection cache never seems to fire for live commands or beacons. I see it Re-Use auth during minion startup, but once its up, all live commands from the master, and outbound events from beacons kick off new connections and SAuth.

Log from minion of two sys.list_modules commands run from master:

``` bash
[salt.minion      ][INFO    ][851] User sudo_vagrant Executing command sys..list_modules with jid 20160116211821959998
2016-01-16 21:18:21,966 [salt.minion      ][DEBUG   ][851] Command details {'tgt_type': 'glob', 'jid': '20160116211821959998', 'tgt': 'Node1', 'ret': '', 'user': 'sudo_vagrant', 'arg': [], 'fun': 'sys.list_modules'}
2016-01-16 21:18:21,976 [salt.minion      ][INFO    ][1553] Starting a new job with PID 1553
2016-01-16 21:18:21,979 [salt.utils.lazy  ][DEBUG   ][1553] LazyLoaded direct_call.get
2016-01-16 21:18:21,981 [salt.minion      ][DEBUG   ][1553] Minion return retry timer set to 6 seconds (randomized)
2016-01-16 21:18:21,981 [salt.minion      ][INFO    ][1553] Returning information for job: 20160116211821959998
2016-01-16 21:18:21,982 [salt.transport.zeromq][DEBUG   ][1553] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'Node1', 'tcp://10.0.3.129:4506', 'aes')
2016-01-16 21:18:21,982 [salt.crypt       ][DEBUG   ][1553] Initializing new SAuth for ('/etc/salt/pki/minion', 'Node1', 'tcp://10.0.3.129:4506')
2016-01-16 21:18:24,029 [salt.minion      ][INFO    ][851] User sudo_vagrant Executing command sys.list_modules with jid 20160116211824023460
2016-01-16 21:18:24,029 [salt.minion      ][DEBUG   ][851] Command details {'tgt_type': 'glob', 'jid': '20160116211824023460', 'tgt': 'Node1', 'ret': '', 'user': 'sudo_vagrant', 'arg': [], 'fun': 'sys.list_modules'}
2016-01-16 21:18:24,037 [salt.minion      ][INFO    ][1558] Starting a new job with PID 1558
2016-01-16 21:18:24,040 [salt.utils.lazy  ][DEBUG   ][1558] LazyLoaded direct_call.get
2016-01-16 21:18:24,041 [salt.minion      ][DEBUG   ][1558] Minion return retry timer set to 9 seconds (randomized)
2016-01-16 21:18:24,042 [salt.minion      ][INFO    ][1558] Returning information for job: 20160116211824023460
2016-01-16 21:18:24,043 [salt.transport.zeromq][DEBUG   ][1558] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'Node1', 'tcp://10.0.3.129:4506', 'aes')
2016-01-16 21:18:24,043 [salt.crypt       ][DEBUG   ][1558] Initializing new SAuth for ('/etc/salt/pki/minion', 'Node1', 'tcp://10.0.3.129:4506')
2016-01-16 21:18:31,027 [salt.utils.process][DEBUG   ][851] Process manager iteration
2016-01-16 21:18:41,028 [salt.utils.process][DEBUG   ][851] Process manager iteration
```

Relevant line that never seems to fire:
https://github.com/distil/plt_priv_salt/blob/develop/salt/transport/zeromq.py#L86

I've traced it down to what I think is going on but Im still learning the salt infrastructure. If I log.debug the io_loop - it appears to be a new ID for each command which would explain why its not caching. Im going to continue to debug, but Id love to know if this is expected design, or if someone more knowledgeable with the code base may have a suggestion.

Thank you!
