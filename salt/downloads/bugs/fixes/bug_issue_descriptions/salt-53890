### Description of Issue

We compared Windows CPU consumption of several salt-minions with 2016.11.3 (Python 2) and noted a very strong (up to 10-fold) performance detoriation for Python3.

This is to publically collect Windows CPU consumption of several salt-minions.

### Test  command

The test command `test.version` is intentionally simple 

### Test procedure

To observe CPU, open Windows Task Manager, selected Details, sort by Name.  

 Installer ______________________________ | Observations of `test.version` in the Windows Task Manager
 ---------------------|---------------
3000.1-Py3-64bit   | One python.exe process above 25% runs for 60 seconds, a second python.exe process above 10% runs for 60 seconds.
3000-Py3-64bit.msi   | One python.exe process above 20% runs for 4 seconds, a second python.exe process is quiet. Fan starts.
 2018.3 Git 1255 Py3 AMD64  | One python.exe process above 20% runs for 8 seconds. (zmq_filtering)
 2018.3.4-Py3-AMD64 |	 Two python.exe processes above 20%, each, run for 15 seconds at the same time, resulting in a combined CPU consumption of 50% for 15 seconds. (zmq_filtering: False)
2018.3.4-Py2-AMD64  | As 2016.11.3-AMD64
 2018.3.3-Py2-AMD64  | As 2016.11.3-AMD64
 2017.7.8-Py3-x86 |	 One python.exe processe above 20% runs for 6 seconds, after the salt-master got the return, a second python.exe processe above 20% runs for another 6 seconds, sometimes a third python.exe above 20% runs for another 4 seconds. (zmq_filtering: False)
 2016.11.3-AMD64 | One python.exe process above 20% runs for 3 seconds. (any zmq_filtering)


