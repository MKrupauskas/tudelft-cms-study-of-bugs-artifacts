### Description of Issue/Question
In 2017.7.* I was able to store gpg encrypted binary data in pillars. This was useful for distributing docker credentials as described here: https://mesosphere.github.io/marathon/docs/native-docker-private-registry.html#registry--20---docker-16-and-up
This no longer works in 2018.3.0.

### Setup
Encrypt a binary file with data unencodable as unicode with gpg and add it to a pillar. See this script that encodes a single byte 0x8b:
https://gist.github.com/d601/1e3e968a60aef9687158da413f2f446d

### Steps to Reproduce Issue
Run the above script on a fresh Ubuntu 16.04 host and then try to run any command that accesses pillar data, e.g. pillar.items or state.apply. You will end up with an error message like this:

```
poopface@saltbug:~$ sudo salt '*' state.apply
saltbug.c.rl-us-bi-test.internal:
    Data failed to compile:
----------
    Pillar failed to render with the following messages:
----------
    Rendering SLS 'foo' failed. Please see master log for details.
```
The master log contains the message `'ascii' codec can't decode byte 0x8b in position 0: ordinal not in range(128)`, as expected.

### Versions Report
```
Salt Version:
           Salt: 2018.3.0
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.4.2
      docker-py: Not Installed
          gitdb: 0.6.4
      gitpython: 1.0.1
          ioflo: Not Installed
         Jinja2: 2.8
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: 1.0.3
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.12 (default, Dec  4 2017, 14:50:18)
   python-gnupg: Not Installed
         PyYAML: 3.11
          PyZMQ: 15.2.0
           RAET: Not Installed
          smmap: 0.9.0
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.1.4
 
System Versions:
           dist: Ubuntu 16.04 xenial
         locale: UTF-8
        machine: x86_64
        release: 4.13.0-1012-gcp
         system: Linux
        version: Ubuntu 16.04 xenial
```

It's good that you guys are doing work on supporting unicode but it's convenient to be able to store occasional non-unicode data. I can think of some workarounds, like just storing the data as base64 in the pillar, but this format that worked in 2017.7 was cleaner.