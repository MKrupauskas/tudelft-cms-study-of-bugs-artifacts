### Description of Issue/Question

```
Traceback (most recent call last):
  File "/tmp/.root_483e1e_salt/salt-call", line 15, in <module>
    salt_call()
  File "/tmp/.root_483e1e_salt/py2/salt/scripts.py", line 339, in salt_call
    client.run()
  File "/tmp/.root_483e1e_salt/py2/salt/cli/call.py", line 58, in run
    caller.run()
  File "/tmp/.root_483e1e_salt/py2/salt/cli/caller.py", line 148, in run
    self.opts)
  File "/tmp/.root_483e1e_salt/py2/salt/output/__init__.py", line 86, in display_output
    display_data = try_printout(data, out, opts)
  File "/tmp/.root_483e1e_salt/py2/salt/output/__init__.py", line 39, in try_printout
    return get_printout(out, opts)(data).rstrip()
  File "/tmp/.root_483e1e_salt/py2/salt/output/json_out.py", line 57, in output
    return json.dumps(data, default=repr, indent=4)
  File "/usr/lib64/python2.7/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib64/python2.7/json/encoder.py", line 203, in encode
    chunks = list(chunks)
  File "/usr/lib64/python2.7/json/encoder.py", line 428, in _iterencode
    for chunk in _iterencode_dict(o, _current_indent_level):
  File "/usr/lib64/python2.7/json/encoder.py", line 402, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib64/python2.7/json/encoder.py", line 402, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib64/python2.7/json/encoder.py", line 402, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib64/python2.7/json/encoder.py", line 402, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib64/python2.7/json/encoder.py", line 384, in _iterencode_dict
    yield _encoder(value)
UnicodeDecodeError: 'utf8' codec can't decode byte 0xfc in position 477: invalid start byte
[ERROR   ] No JSON object could be decoded
```
### Setup

monitioring.sls (Snippet)

```

monitoring__bashrc:
  file.managed:
    - name: {{ pillar['monitoring']['home'] }}/.bashrc
    - source: salt://monitoring/files/.bashrc
```
### Steps to Reproduce Issue

```
salt-ssh w123 state.sls monitoring test=True

```

Since I use `test=True` the problem is reproducible. Otherwise it would disappear after the first call. 
### Versions Report

current develop branch af7593ae53b3f7902cad2e14aee0850dc57c2966
### UnicodeError

The old .bashrc contained a latin1 Umlaut. I guess this is the reason.
### repr(data) attached

I attached the repr(data) which I created by modifying json_out.py on the remote host.
