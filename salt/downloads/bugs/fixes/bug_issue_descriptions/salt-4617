Running: `__salt__['event.fire_master']({...}, 'newpackage')` on one of my minions hangs indefinitely, and the only way to recover is to:
- kill -9 process sending event
- stop minion and kill all stray salt-minion processes
- restart master
- start minion

This only happens when one of the machines listed in the salt master's key listing has gone away (ec2 instance died).  Strangely, after doing the procedure above, events work again, regardless of whether the key for the gone minion is deleted or not.

What this means in practice for me is that, every time EC2 flushes one of my machines down the drain, I can reliably predict that the build that sends the event will become wedged forever, until it fails because I kill the event sender -9.

I am using 

ii  libzmq3                 3.2.2+dfsg-1precise     lightweight messaging kernel (shared library)
ii  salt-minion             0.13.1-3precise         This package represents the client package for salt

Thanks in advance.
