Master info:

```
root@boucha:/var/cache/salt/master/minions/boucha/files/tmp/davetest# salt-master --versions-report
           Salt: 2014.7.0rc3
         Python: 2.7.3 (default, Feb 27 2014, 19:58:35)
         Jinja2: 2.7.2
       M2Crypto: 0.22
 msgpack-python: 0.4.2
   msgpack-pure: Not Installed
       pycrypto: 2.6.1
        libnacl: Not Installed
         PyYAML: 3.11
          ioflo: Not Installed
          PyZMQ: 14.3.1
           RAET: Not Installed
            ZMQ: 4.0.4
           Mako: Not Installed
```

Minion info:

```
root@boucha:/var/cache/salt/master/minions/boucha/files/tmp/davetest# salt boucha test.versions_report
boucha:
               Salt: 2014.7.0rc3
             Python: 2.7.3 (default, Feb 27 2014, 19:58:35)
             Jinja2: 2.7.2
           M2Crypto: 0.22
     msgpack-python: 0.4.2
       msgpack-pure: Not Installed
           pycrypto: 2.6.1
            libnacl: Not Installed
             PyYAML: 3.11
              ioflo: Not Installed
              PyZMQ: 14.3.1
               RAET: Not Installed
                ZMQ: 4.0.4
               Mako: Not Installed
```

With a Linux minion cp.push_dir will upload files to the minion file cache and recreate the directory structure of the original location of the file.

With a Windows minion cp.push_dir will upload the file and create a file whose name is the full path, instead of creating the directory structure.

For example the filename would be something like this:
`c:\repos\salt\pkg\windows\installer\Salt-Minion-2014.7.0-633-g239cb00-AMD64-Setup.exe`

That's the actual filename, not the path.
We should probably drop the `:` and use os.path.sep or os.path.split() to create the correct directory structure.

The the above file, the actual full path on the master should look like this at the end:
`/var/cache/salt/master/minions/Win64Builder/files/c/repos/salt/pkg/windows/installer/Salt-Minion-2014.7.0-633-g239cb00-AMD64-Setup.exe`
