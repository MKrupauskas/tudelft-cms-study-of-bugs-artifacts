I have a hard time getting our environment to a stable and useful state. This issue is a question issue of what I should expect and not a bug or feature issue. What is actually errors and what is me misunderstanding things.

The characteristics of our environment are the following:

**Our environment**
- We run on azure
- We mostly run windows machines
- From a fresh start, when a minion get the first command it takes a long time (10-20s) before it even starts to work on the command
- From a fresh start the master responds quite well, eventually it gets slower and slower and I'm starting to get saltreqtimeout errors
- Whenever minions actually start working on commands they work quite quick, but there is always a lag before it happens, and thats IF they ever start.
- salt master denies some minions automatically (puts them in /etc/salt/pki/master/minions_denied) 
- Previously I had trouble with substaining connectivity but that seems better now
- All minions seems to be in some loop with findjob calls

**Problems**
Something is publishing saltutil.find_job jobs every second, and from what I can see in #18729 there could be some kind of infinite loop or spamming behaviour that brings everything to it's knees.

So my questions are:
- In a healthy setup, what would you say that the response time for a minion is before it starts to work on a command? Ie the time it takes to publish a message, then for the minion to get it, decrypt it and start working
- How many minions can a master typically handle before you have to start thinking about syndicate?
- Is the spamming of find_job normal operation or should an idle salt system not publish anything to the job queue?
- What is the criteria for the master to move a minion key to /etc/salt/pki/master/minions_denied even if I haven't rejected the key?
- If I send a test.ping to a minion, what exactly happens then. I have a "feeling" that there is some authentication process that is quite heavy taking place, am I correct?

**What I've tried**
- I've looked in to cron jobs with test.ping for keeping connections alive over azure (they are now turned of)
- I've looked into increasing file limit on master and increasing worker threads
- I've experimented with different instance sizes to get a feeling of response times

salt-master version

```
root@saltmaster:~# salt-master --versions-report
           Salt: 2014.7.0
         Python: 2.7.6 (default, Mar 22 2014, 22:59:56)
         Jinja2: 2.7.2
       M2Crypto: 0.21.1
 msgpack-python: 0.3.0
   msgpack-pure: Not Installed
       pycrypto: 2.6.1
        libnacl: Not Installed
         PyYAML: 3.10
          ioflo: Not Installed
          PyZMQ: 14.0.1
           RAET: Not Installed
            ZMQ: 4.0.4
           Mako: 0.9.1
```

salt-minons versions

```
prd-na-monitor:
               Salt: 2014.1.7
             Python: 2.7.5 (default, May 15 2013, 22:44:16) [MSC v.1500 64 bit (AMD64)]
             Jinja2: 2.7.1
           M2Crypto: 0.21.1
     msgpack-python: 0.4.2
       msgpack-pure: Not Installed
           pycrypto: 2.6
             PyYAML: 3.11
              PyZMQ: 14.1.1
                ZMQ: 4.0.4
hbg-andrej-st:
               Salt: 2014.7.0
             Python: 2.7.5 (default, May 15 2013, 22:44:16) [MSC v.1500 64 bit (AMD64)]
             Jinja2: 2.7.1
           M2Crypto: 0.21.1
     msgpack-python: 0.4.2
       msgpack-pure: Not Installed
           pycrypto: 2.6
            libnacl: Not Installed
             PyYAML: 3.11
              ioflo: Not Installed
              PyZMQ: 14.1.1
               RAET: Not Installed
                ZMQ: 4.0.4
               Mako: Not Installed
```
