### Description of Issue/Question
The below **artifactory.downloaded** state fails when running with `test=True`:

```
install_package:
  artifactory.downloaded:
   - artifact:
       artifactory_url: https://ARTIFACTORY_URL/artifactory
       repository: 'REPO'
       artifact_id: 'ARTIFACTORY_ID'
       group_id: 'PATH.TO.ARTEFACT'
       packaging: 'zip'
       #classifier: 'sources'
       version: 'ARTEFACT_VERSION'
       username: ARTIFACTORY_USERNAME
       password: ARTIFACTORY_USERNAME_PASSWORD
   - target_dir: /PATH/TO/TARGET_DIR
```

There is no response from the minion. All I see in the master is a message saying:

`MINION_ID:
    Minion did not return. [No response]`

Check the minion's logs, I can see an error like:

```
[salt.state                                                     ][ERROR   ][24667] [Errno 2] No such file or directory: '/PATH/TO/TARGET_DIR/ARTIFACTORY_ID-ARTEFACT_VERSION.zip'
2017-11-06 14:42:52,589 [salt.utils.process                                             ][ERROR   ][24667] An un-handled exception from the multiprocessing process 'SignalHandlingMultiprocessingProcess-1:230' was caught:
Traceback (most recent call last):
  File "/usr/lib/python2.6/site-packages/salt/utils/process.py", line 644, in _run
    return self._original_run()
  File "/usr/lib64/python2.6/multiprocessing/process.py", line 88, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python2.6/site-packages/salt/minion.py", line 1344, in _target
    Minion._thread_return(minion_instance, opts, data)
  File "/usr/lib/python2.6/site-packages/salt/minion.py", line 1500, in _thread_return
    timeout=minion_instance._return_retry_timer()
  File "/usr/lib/python2.6/site-packages/salt/minion.py", line 1666, in _return_pub
    ret_val = self._send_req_sync(load, timeout=timeout)
  File "/usr/lib/python2.6/site-packages/salt/minion.py", line 1190, in _send_req_sync
    return channel.send(load, timeout=timeout)
  File "/usr/lib/python2.6/site-packages/salt/utils/async.py", line 75, in wrap
    ret = self._block_future(ret)
  File "/usr/lib/python2.6/site-packages/salt/utils/async.py", line 85, in _block_future
    return future.result()
  File "/usr/lib64/python2.6/site-packages/tornado/concurrent.py", line 214, in result
    raise_exc_info(self._exc_info)
  File "/usr/lib64/python2.6/site-packages/tornado/gen.py", line 876, in run
    yielded = self.gen.throw(*exc_info)
  File "/usr/lib/python2.6/site-packages/salt/transport/zeromq.py", line 276, in send
    ret = yield self._crypted_transfer(load, tries=tries, timeout=timeout, raw=raw)
  File "/usr/lib64/python2.6/site-packages/tornado/gen.py", line 870, in run
    value = future.result()
  File "/usr/lib64/python2.6/site-packages/tornado/concurrent.py", line 214, in result
    raise_exc_info(self._exc_info)
  File "/usr/lib64/python2.6/site-packages/tornado/gen.py", line 876, in run
    yielded = self.gen.throw(*exc_info)
  File "/usr/lib/python2.6/site-packages/salt/transport/zeromq.py", line 244, in _crypted_transfer
    ret = yield _do_transfer()
File "/usr/lib64/python2.6/site-packages/tornado/gen.py", line 870, in run
    value = future.result()
  File "/usr/lib64/python2.6/site-packages/tornado/concurrent.py", line 214, in result
    raise_exc_info(self._exc_info)
  File "/usr/lib64/python2.6/site-packages/tornado/gen.py", line 230, in wrapper
    yielded = next(result)
  File "/usr/lib/python2.6/site-packages/salt/transport/zeromq.py", line 226, in _do_transfer
    self._package_load(self.auth.crypticle.dumps(load)),
  File "/usr/lib/python2.6/site-packages/salt/crypt.py", line 1257, in dumps
    return self.encrypt(self.PICKLE_PAD + self.serial.dumps(obj))
  File "/usr/lib/python2.6/site-packages/salt/payload.py", line 181, in dumps
    return msgpack.dumps(msg, use_bin_type=use_bin_type)
  File "/usr/lib64/python2.6/site-packages/msgpack/__init__.py", line 47, in packb
    return Packer(**kwargs).pack(o)
  File "msgpack/_packer.pyx", line 223, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:223)
  File "msgpack/_packer.pyx", line 225, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:225)
  File "msgpack/_packer.pyx", line 184, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:184)
  File "msgpack/_packer.pyx", line 184, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:184)
  File "msgpack/_packer.pyx", line 184, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:184)
  File "msgpack/_packer.pyx", line 220, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:220)
TypeError: can't serialize IOError(2, 'No such file or directory'
```


If  I use `- target_file` instead of `- target_dir` I get the same error.
Seems like when running the state with `test=True`, both `- target_file` and `- target_dir` need to preexist ??

As written above, the issue is only when running the state with `test=True`. If I remove that and execute it normally, it will succeed without issues. Any idea how to fix or bypass this issue?


I am running:
Master: salt-master 2016.11.1 (Carbon)
Minion:  salt-minion 2016.11.1 (Carbon)
OS: RedHat 6

Thanks,