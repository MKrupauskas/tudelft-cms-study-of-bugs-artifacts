**OS:** Ubuntu 14.04.1 amd64
**Salt Master:**

```
               Salt: 2014.7.1
             Python: 2.7.6 (default, Mar 22 2014, 22:59:56)
             Jinja2: 2.7.2
           M2Crypto: 0.21.1
     msgpack-python: 0.3.0
       msgpack-pure: Not Installed
           pycrypto: 2.6.1
            libnacl: Not Installed
             PyYAML: 3.10
              ioflo: Not Installed
              PyZMQ: 14.0.1
               RAET: Not Installed
                ZMQ: 4.0.4
               Mako: 0.9.1
```

**GitPython:** 0.3.2 RC1

Running the `winrepo.update_git_repos` runner should always ensure the local clone/checkout of the repos represents 100% the state of the remote.

**Relevant Master Config:**

``` YAML
win_repo: /media/volumes/salt/master/fileserver/win/repo
win_gitrepos:
    - git@scm.institution.tld:salt-winrepo.git
```

The following steps show, that's not the case:
1. `salt-run winrepo.update_git_repos`
2. `find /media/volumes/salt/master/fileserver/win/repo -name "*.sls" -delete`
3. `salt-run winrepo.update_git_repos`
4. `find /media/volumes/salt/master/fileserver/win/repo -name "*.sls" | wc -l`  result: `0`

Only deleting the clone completely + `winrepo.update_git_repos` or manually doing a `git reset --hard origin/master` in the clone restores it to it's proper state.

Every run of `salt-run winrepo.update_git_repos` should ensure the clone is a 1:1 representation of the remote.

Besides that, I wonder whether it wouldn't make more sense to cache the `win_gitrepo` the same way all GitFS repos are cached instead of simply cloning it to the `win_repo` dir. This would possibly avoid quite a lot of code duplication and make for a more streamlined/unified user experience, when this could be simply hooked into `fileserver.update`.
