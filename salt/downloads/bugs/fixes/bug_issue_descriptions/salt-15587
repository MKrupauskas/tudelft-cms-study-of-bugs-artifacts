The `saltutil.running` module suffers from a race condition which can cause it to return an exception to the caller if a jobfile disappears between enumeration and access:

This was exposed by having multiple saltutil.running jobs at the same time:

```
win7-client7.storagelab.netdirect.ca:
'The minion function caused an exception: Traceback (most recent call last):
File "salt/minion.py", line 797, in _thread_return
File "salt/modules/saltutil.py", line 456, in running
File "salt/modules/saltutil.py", line 448, in _read_proc_file
WindowsError: [Error 2] The system cannot find the file specified: \'c:\\\\salt\\\\var\\\\cache\\\\salt\\\\minion\\\\proc\\\\20140908114307801804\'\n'
```

The job in question that completed in between enumeration and opening is:

```
 sudo salt-run jobs.list_job 20140908114307801804
Arguments: []
Function: saltutil.running
Minions:
- win7-client5.storagelab.netdirect.ca
- win7-client7.storagelab.netdirect.ca
- win7-client4.storagelab.netdirect.ca
- win7-client1.storagelab.netdirect.ca
- win7-client2.storagelab.netdirect.ca
- win7-client3.storagelab.netdirect.ca
- win7-client6.storagelab.netdirect.ca
StartTime: 2014, Sep 08 11:43:07.801804
Target: '*'
Target-type: glob
User: sudo_michael
jid: '20140908114307801804'
```
