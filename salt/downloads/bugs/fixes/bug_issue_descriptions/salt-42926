### Description of Issue/Question
I'm currently using https://docs.saltstack.com/en/latest/ref/states/all/salt.states.network.html to set the hostname of my instance with
```
system:
  network.system:
    - enabled: True # only neccessary as a bypass for https://github.com/saltstack/salt/issues/6922
    - hostname: 'sample-hostname'
    - apply_hostname: True
    - retain_settings: True
```

This does modify my `/etc/hostname` correctly, but it does not set the hostname in `/etc/hosts`, instead, there it is the same as before the salt state was ran, so now there's a mismatch. Granted, I'm aware that https://docs.saltstack.com/en/latest/ref/states/all/salt.states.host.html exists, which allows for further modifications of `/etc/hosts`, but I assumed the network state call would completely set my hostname, across the whole system. Is it not supposed to? For me with the hostname mismatch, I couldn't use sudo.  See https://askubuntu.com/questions/59458/error-message-when-i-run-sudo-unable-to-resolve-host-none as to why sudo stops working in this case. I'm sure many other things would break too.

I'm unclear. I want to call this a bug, because I don't know why you'd want to change the hostname in only one place. I would have expected it to wipe out all remnants of the previous hostname. Perhaps it is meant to be this way though, in which case a documentation change should really happen to explain more precisely what this state is supposed to do.

### Setup
Debian 8 with
```
system:
  network.system:
    - enabled: True # only necessary as a bypass for https://github.com/saltstack/salt/issues/6922
    - hostname: 'sample-hostname'
    - apply_hostname: True
    - retain_settings: True
```

### Steps to Reproduce Issue
Provision an Debian 8 instance with the above state.

### Versions Report
Salt: 2017.7.0