I'm running the salt minion locally (version 2015.5.3) and have a winrepo set up.  If a package in the winrepo has an uninstaller set to the URI of the .msi then the pkg.removed state or pkg.remove module will fail with an error message about being unable to open the installer file with the URI.  This is true even if the file from that URI has been cached locally by running a pkg.installed state on it.  The only way to get this to work is to have the installer cached somewhere manually.  It seems like the correct functionality for uninstall should be the same as for installation in that if the uninstaller is specified and is cached locally, it will use it and if not it will download and cache the file.  

On windows though what would be a lot nicer is if the UninstallString value from the registries were used to uninstall a package if the uninstaller property in the wiinrepo state were not present.  I noted in the code for win_pkg.py that the list_pkgs() function is going through the correct registry keys via _get_reg_software() and those same keys iterated in _get_reg_software() also _may_ contain a value called "UninstallString" that is a command that (usually) will uninstall that package (this is how add/remove programs works).  What I'd ideally like to see the functionality be for pkg.remove is as follows:

If a package is in the winrepo and has a specified uninstaller, it uses that uninstaller.  (this usually works if the uninstaller is a file under salt://path/to/uninstaller or an absolute file path)
If a package is in the winrepo and has an uninstaller that is a URI and matches the cached file from the installer, it uses the cached file.  (this doesn't work and it doesn't try to download the file)
if a package is in the winrepo and has no uninstaller specified, it tries to use the UninstallString in the registry (this is a feature request).
if a package is NOT in the winrepo and the UninstallString value is present in the registry, it uses the UninstallString to attempt to uninstall the package (this is a feature request)
If none of that is true, you get some sort of error.  

It looks like probably only the win_pkg module would need to be fixed since the state just calls that module. 
