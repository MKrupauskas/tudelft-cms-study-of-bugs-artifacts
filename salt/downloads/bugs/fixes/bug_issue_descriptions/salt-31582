When I call `cmd.run` function with `shell` parameter set to a specific shell, e.g. `tcsh`, on a Linux minion, then, the passed command is interpreted by that shell:

```
salt-call cmd.run 'echo $version' shell=/bin/tcsh
local:
    tcsh 6.17.00 (Astron) 2009-07-10 (x86_64-unknown-linux) options wide,nls,dl,al,kan,sm,rh,color,filec
```

When I try the same on Windows, e.g. with `bash` interpreter installed by `cygwin`, it does not work. It still uses the default `cmd` interpreter:

```
c:\salt\\salt-call.exe cmd.run uname shell='c:\cygwin\bin\bash.exe'
local:
    'uname' is not recognized as an internal or external command,
    operable program or batch file.
```

Does the `cmd` execution module (and also state module derived from it) on Windows platform supports any other interpreters apart from `cmd` or `powershell'?

This was tested locally on Linux/Windows minion of version 2015.5.3 and 2016.3.0.
