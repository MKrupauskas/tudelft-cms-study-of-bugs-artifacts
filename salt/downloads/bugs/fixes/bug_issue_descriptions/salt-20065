We have some orchestrate jobs that are triggered by Salt's scheduler. They previously worked on 2014.1. We are now testing 2015.2 and they are failing with some interesting tracebacks that I think are related.

```
2015-01-26 17:13:03,288 [salt.utils.schedule                        ][ERROR   ][14175] Unhandled exception running state.orchestrate
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/salt/utils/schedule.py", line 502, in handle_func
    ret['return'] = self.functions[func](*args)
  File "/usr/lib/python2.7/dist-packages/salt/runners/state.py", line 116, in orchestrate
    __jid_event__.fire_event({'data': ret, 'outputter': 'highstate'}, 'progress')
NameError: global name '__jid_event__' is not defined
2015-01-26 17:13:03,288 [salt.utils.schedule                        ][ERROR   ][14172] Unhandled exception running state.orchestrate
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/salt/utils/schedule.py", line 502, in handle_func
    ret['return'] = self.functions[func](*args)
  File "/usr/lib/python2.7/dist-packages/salt/runners/state.py", line 116, in orchestrate
    __jid_event__.fire_event({'data': ret, 'outputter': 'highstate'}, 'progress')
NameError: global name '__jid_event__' is not defined
```

and 

```
2015-01-26 19:27:36,701 [salt.utils.schedule                        ][ERROR   ][20041] Unhandled exception running state.orchestrate
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/salt/utils/schedule.py", line 502, in handle_func
    ret['return'] = self.functions[func](*args)
  File "/usr/lib/python2.7/dist-packages/salt/runners/state.py", line 114, in orchestrate
    pillar=pillar)
  File "/usr/lib/python2.7/dist-packages/salt/modules/state.py", line 593, in sls
    opts = _get_opts(kwargs.get('localconfig'))
  File "/usr/lib/python2.7/dist-packages/salt/modules/state.py", line 152, in _get_opts
    opts = copy.deepcopy(__opts__)
  File "/usr/lib/python2.7/copy.py", line 163, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python2.7/copy.py", line 257, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/usr/lib/python2.7/copy.py", line 182, in deepcopy
    rv = reductor(2)
  File "/usr/lib/python2.7/multiprocessing/sharedctypes.py", line 213, in __reduce__
    assert_spawning(self)
  File "/usr/lib/python2.7/multiprocessing/forking.py", line 51, in assert_spawning
    ' through inheritance' % type(self).__name__
RuntimeError: SynchronizedString objects should only be shared between processes through inheritance
```

```
bjackson@dev-salt01:~$ salt-master --versions
           Salt: 2015.2.0-1345-gd7a0405
         Python: 2.7.3 (default, Mar 13 2014, 11:03:55)
         Jinja2: 2.6
       M2Crypto: 0.21.1
 msgpack-python: 0.1.10
   msgpack-pure: Not Installed
       pycrypto: 2.6
        libnacl: Not Installed
         PyYAML: 3.10
          ioflo: Not Installed
          PyZMQ: 13.1.0
           RAET: Not Installed
            ZMQ: 3.2.3
           Mako: Not Installed
```

Let me know if you need any more info.
