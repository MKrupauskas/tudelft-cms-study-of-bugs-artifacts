### Description of Issue/Question

The `dockerng.image_absent` state, nor the associated `dockerng.rmi` module, supports a client_timeout (like  `dockerng.create` and others do). This is needed because the default timeout is 60 seconds, so any operation that may take more than that will need to have the timeout overwritten.

### Setup

Here is an SLS that will show the issue on a lower-powered hardware system (e.g. an AWS t2.medium system, chose any linux OS you'd like that runs docker).

```
ossec-image-pulled:
  dockerng.image_present:
    - name: "xetusoss/ossec-server:2.8.2"

ossec-image-deleted:
  dockerng.image_absent:
    - require:
      - dockerng: ossec-image-pulled
    - name: "xetusoss/ossec-server:2.8.2"
```

### Steps to Reproduce Issue
Run the above SLS. You'll see the ossec-image-deleted state always reports a failure due to a timeout.

### Versions Report
The minion version report
```
Salt Version:
           Salt: 2016.11.0-n/a-3416e9e
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: Not Installed
      docker-py: 1.7.2
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.7.2
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: 1.2.3
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.6 (default, Oct 26 2016, 20:30:19)
   python-gnupg: Not Installed
         PyYAML: 3.10
          PyZMQ: 14.0.1
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.5
 
System Versions:
           dist: Ubuntu 14.04 trusty
        machine: x86_64
        release: 3.13.0-110-generic
         system: Linux
        version: Ubuntu 14.04 trusty

```

### Suggested fix

I think the fix here is to allow all the DockerClient calling modules/states to specify a timeout. Since we need it for a few of the modules/states, we'll be sending along a pull request later for the ones we've ran into.