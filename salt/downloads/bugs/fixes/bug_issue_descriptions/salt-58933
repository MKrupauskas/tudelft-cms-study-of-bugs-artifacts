**Description**

On MySQL 8.0, the `mysql_grants.present` state always fails when the desired grants is already present when using `all privileges` grant.

**Setup**

```
mysql_test_user
  mysql_user.present:
    - host: "%"
    - name: test
    - password: test

mysql_test_user_grants:
  mysql_grants.present:
    - grant: all privileges
    - database: "*.*"
    - host : "%"
    - user: test
```

**Steps to Reproduce the behavior**

Setup a local MySQL 8.0 server and run the above states twice. First time to create the user and grants (which will be successsful), the second run, the grants state will fail due to a string mismatch as indicated below in the logs.

<details><summary>Relevant Parts of the log:</summary>

```
Grant does not exist, or is perhaps not ordered properly?
[DEBUG   ] Grant Query generated: GRANT ALL PRIVILEGES ON *.* TO %(user)s@%(host)s args {u'host': u'%', u'user': u'tp-geospatial'}
[DEBUG   ] Doing query: SELECT plugin FROM mysql.user WHERE User=%(user)s and Host=%(host)s args: {u'host': u'%', u'user': u'tp-geospatial'} 
[DEBUG   ] ({'plugin': u'mysql_native_password'},)
[DEBUG   ] Doing query: SELECT User,Host FROM mysql.user WHERE User = %(user)s AND Host = %(host)s args: {u'host': u'%', u'user': u'tp-geospatial'} 
[DEBUG   ] Doing query: SHOW GRANTS FOR %(user)s@%(host)s args: {u'host': u'%', u'user': u'tp-geospatial'} 
[DEBUG   ] [u'GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE, REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE, CREATE ROLE, DROP ROLE ON *.* TO `tp-geospatial`@`%`', u'GRANT APPLICATION_PASSWORD_ADMIN,AUDIT_ADMIN,BACKUP_ADMIN,BINLOG_ADMIN,BINLOG_ENCRYPTION_ADMIN,CLONE_ADMIN,CONNECTION_ADMIN,ENCRYPTION_KEY_ADMIN,GROUP_REPLICATION_ADMIN,INNODB_REDO_LOG_ARCHIVE,INNODB_REDO_LOG_ENABLE,PERSIST_RO_VARIABLES_ADMIN,REPLICATION_APPLIER,REPLICATION_SLAVE_ADMIN,RESOURCE_GROUP_ADMIN,RESOURCE_GROUP_USER,ROLE_ADMIN,SERVICE_CONNECTION_ADMIN,SESSION_VARIABLES_ADMIN,SET_USER_ID,SHOW_ROUTINE,SYSTEM_USER,SYSTEM_VARIABLES_ADMIN,TABLE_ENCRYPTION_ADMIN,XA_RECOVER_ADMIN ON *.* TO `tp-geospatial`@`%`']
[DEBUG   ] _grant_to_tokens entry 'GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE, REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE, CREATE ROLE, DROP ROLE ON *.* TO `tp-geospatial`@`%`'
[DEBUG   ] grant to token '`tp-geospatial`'::'`%`'::'['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'CREATE', 'DROP', 'RELOAD', 'SHUTDOWN', 'PROCESS', 'FILE', 'REFERENCES', 'INDEX', 'ALTER', u'SHOW DATABASES', 'SUPER', u'CREATE TEMPORARY TABLES', u'LOCK TABLES', 'EXECUTE', u'REPLICATION SLAVE', u'REPLICATION CLIENT', u'CREATE VIEW', u'SHOW VIEW', u'CREATE ROUTINE', u'ALTER ROUTINE', u'CREATE USER', 'EVENT', 'TRIGGER', u'CREATE TABLESPACE', u'CREATE ROLE', u'DROP ROLE']'::'*.*'
[DEBUG   ] _grant_to_tokens entry 'GRANT APPLICATION_PASSWORD_ADMIN,AUDIT_ADMIN,BACKUP_ADMIN,BINLOG_ADMIN,BINLOG_ENCRYPTION_ADMIN,CLONE_ADMIN,CONNECTION_ADMIN,ENCRYPTION_KEY_ADMIN,GROUP_REPLICATION_ADMIN,INNODB_REDO_LOG_ARCHIVE,INNODB_REDO_LOG_ENABLE,PERSIST_RO_VARIABLES_ADMIN,REPLICATION_APPLIER,REPLICATION_SLAVE_ADMIN,RESOURCE_GROUP_ADMIN,RESOURCE_GROUP_USER,ROLE_ADMIN,SERVICE_CONNECTION_ADMIN,SESSION_VARIABLES_ADMIN,SET_USER_ID,SHOW_ROUTINE,SYSTEM_USER,SYSTEM_VARIABLES_ADMIN,TABLE_ENCRYPTION_ADMIN,XA_RECOVER_ADMIN ON *.* TO `tp-geospatial`@`%`'
[DEBUG   ] grant to token '`tp-geospatial`'::'`%`'::'['APPLICATION_PASSWORD_ADMIN', 'AUDIT_ADMIN', 'BACKUP_ADMIN', 'BINLOG_ADMIN', 'BINLOG_ENCRYPTION_ADMIN', 'CLONE_ADMIN', 'CONNECTION_ADMIN', 'ENCRYPTION_KEY_ADMIN', 'GROUP_REPLICATION_ADMIN', 'INNODB_REDO_LOG_ARCHIVE', 'INNODB_REDO_LOG_ENABLE', 'PERSIST_RO_VARIABLES_ADMIN', 'REPLICATION_APPLIER', 'REPLICATION_SLAVE_ADMIN', 'RESOURCE_GROUP_ADMIN', 'RESOURCE_GROUP_USER', 'ROLE_ADMIN', 'SERVICE_CONNECTION_ADMIN', 'SESSION_VARIABLES_ADMIN', 'SET_USER_ID', 'SHOW_ROUTINE', 'SYSTEM_USER', 'SYSTEM_VARIABLES_ADMIN', 'TABLE_ENCRYPTION_ADMIN', 'XA_RECOVER_ADMIN']'::'*.*'
[DEBUG   ] _grant_to_tokens entry '{u'qry': u'GRANT ALL PRIVILEGES ON *.* TO %(user)s@%(host)s', u'args': {u'host': u'%', u'user': u'tp-geospatial'}}'
[DEBUG   ] grant to token 'tp-geospatial'::'%'::'[u'ALL PRIVILEGES']'::'*.*'
[DEBUG   ] grants mismatch '{u'host': u'`%`', u'grant': ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'CREATE', 'DROP', 'RELOAD', 'SHUTDOWN', 'PROCESS', 'FILE', 'REFERENCES', 'INDEX', 'ALTER', u'SHOW DATABASES', 'SUPER', u'CREATE TEMPORARY TABLES', u'LOCK TABLES', 'EXECUTE', u'REPLICATION SLAVE', u'REPLICATION CLIENT', u'CREATE VIEW', u'SHOW VIEW', u'CREATE ROUTINE', u'ALTER ROUTINE', u'CREATE USER', 'EVENT', 'TRIGGER', u'CREATE TABLESPACE', u'CREATE ROLE', u'DROP ROLE', 'APPLICATION_PASSWORD_ADMIN', 'AUDIT_ADMIN', 'BACKUP_ADMIN', 'BINLOG_ADMIN', 'BINLOG_ENCRYPTION_ADMIN', 'CLONE_ADMIN', 'CONNECTION_ADMIN', 'ENCRYPTION_KEY_ADMIN', 'GROUP_REPLICATION_ADMIN', 'INNODB_REDO_LOG_ARCHIVE', 'INNODB_REDO_LOG_ENABLE', 'PERSIST_RO_VARIABLES_ADMIN', 'REPLICATION_APPLIER', 'REPLICATION_SLAVE_ADMIN', 'RESOURCE_GROUP_ADMIN', 'RESOURCE_GROUP_USER', 'ROLE_ADMIN', 'SERVICE_CONNECTION_ADMIN', 'SESSION_VARIABLES_ADMIN', 'SET_USER_ID', 'SHOW_ROUTINE', 'SYSTEM_USER', 'SYSTEM_VARIABLES_ADMIN', 'TABLE_ENCRYPTION_ADMIN', 'XA_RECOVER_ADMIN'], u'user': u'`tp-geospatial`', u'database': u'*.*'}'<>'{'host': u'%', 'database': u'*.*', 'user': u'tp-geospatial', 'grant': [u'ALL PRIVILEGES']}'
[DEBUG   ] Grant does not exist, or is perhaps not ordered properly?
[INFO    ] Grant 'all privileges' on '*.*' for user 'tp-geospatial' has NOT been added
[ERROR   ] Failed to execute: "GRANT all privileges ON *.* TO tp-geospatial@%"
[INFO    ] Completed state [mysql_geospatial_grants_slave_001] at time 22:59:28.206872 (duration_in_ms=36.372)
```
</details>

It appears the state expects `SHOW GRANTS` query result to equal to `ALL PRIVILEGES`
I suspect this is the cause of failure because according to [MySQL 8.0 Docs](https://dev.mysql.com/doc/refman/8.0/en/show-grants.html) it states...

> In MySQL 8.0 compared to previous series, SHOW GRANTS no longer displays ALL PRIVILEGES in its global-privileges output because the meaning of ALL PRIVILEGES at the global level varies depending on which dynamic privileges are defined. Instead, SHOW GRANTS explictly lists each granted global privilege:

**Expected behavior**

I expect `mysql_grants.present` to ensure that the mysql user presently has the defined grants without erroring.

**Versions Report**
<details><summary>salt --versions-report</summary>

### Salt Master

```
Salt Version:
           Salt: 3000.5
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: unknown
       dateutil: 2.6.1
      docker-py: Not Installed
          gitdb: 2.0.3
      gitpython: 2.1.8
         Jinja2: 2.10
        libgit2: 0.26.0
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: 1.3.10
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: 0.26.2
         Python: 2.7.17 (default, Sep 30 2020, 13:38:04)
   python-gnupg: 0.4.1
         PyYAML: 3.12
          PyZMQ: 16.0.2
          smmap: 2.0.3
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.2.5
 
System Versions:
           dist: Ubuntu 18.04 bionic
         locale: UTF-8
        machine: x86_64
        release: 4.15.0-123-generic
         system: Linux
        version: Ubuntu 18.04 bionic
```

### Salt Minion

```
salt-minion 3000.5
```
</details>

**Additional context**

I've also tested `salt-minion 3002.1`