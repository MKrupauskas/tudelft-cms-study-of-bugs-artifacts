Hi,

when you are running salt-cloud using a map file, it is supposed to detect what instance is already running by querying the cloud api. This query results in a dict with key=<instance name> and value=<instance detail>.

The problem is, that in ec2 the name of the instance is not a unique value, and so, when there is many instance with the same name, the instance put in the dict is unpredictible.

A simple use cas showing this problem :
- create a map with only one instance definition
- run that map
- destroy that instance in aws console (without renaming it) (wait for it to be marked as terminated)
- rerun the map -> the instance will be created again since, the one existing with that instance named is marked as terminated
- rerun the map -> the result will then depend on the order to the libcloud query result, it will either be marked already created or it will be proposed to be created

I think the proper way to handle this issue should be to use the instance id instead of the name as the key of the result dict. But, as I don't know the properties of the other cloud providers, I am not sure of the consequences of such a change.

I have forked the project and commited a simple but yet functionning solution : the result dict key will be either an <instance name> or <instance name-instance id> if the dict already contains that instance name.

Then, when the map is executed, the name will be compared to the dict key as a regexp (specific to ec2 instance id format).

If this solution is acceptable, I will do a pull request from my forked repo.

Regards
