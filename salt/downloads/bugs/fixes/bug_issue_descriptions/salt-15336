We currently use v2014.1.x. In this older version, you'd have to explicitly pass mdadm opts, which required you to explicitly state the number of raid disks but allowed you to pass a glob pattern for all the device names (e.g. `/dev/xvd[fghijk]1`).

Ever since the mdadm create code was simplified and the module and state were abstracted away from the mdadm CLI tool, salt requires an array of strings for the device names and determines the `raid-disks` option (that is, the number of disks in the RAID) based on the length of this array. As a result, it's incompatible with passing the devices in glob form since salt can't know how to expand the glob to get the right value for `-n` (as far as I know). Explicitly passing the `raid-disks` option in the sls doesn't work as the CLI `mdadm` can't resolve two instances of the same option.

Would it work to allow `raid-disks` to be an optional param in raid.create to allow users to take advantage of mdadm's glob syntax, or is this too backporty? (Not sure what salt's opinion on that is.) I'm currently working on a pull request that implements mdadm assemble, but I could put in a quick PR for this, too.
