**Description**
I want to use salt.state `mount.fstab_present` with option mount=True to ensure that a newly created directory is mounted.
Hence the vfstype is NFS I use systemd-automount option.
To ensure that this newly created directory is really mounted I run salt.state `service.running` for the relevant service with a verification before, means if the newly created directory does not include a subdirectory, mount is not successfull and salt.state `service.running` must be executed.
But this if clause is always true.

**Setup**
```yaml
stc-lve-automnt-usr-local_all_mountpoint-usr-local_all_/etc/fstab:
  mount.fstab_present:
    - name: uxlocal:/vol/aggr1_local_shares/q_usrlocal_all_sun
    - fs_file: /usr/local_all
    - fs_vfstype: nfs
    - fs_mntops:
      - ro
      - nfsvers=3
      - rsize=65535
      - wsize=65535
      - relatime
      - noauto
      - x-systemd.automount
      - x-systemd.mount-timeout=30,_netdev
      - x-systemd.idle-timeout=30
    - mount: True

stc-lve-automnt-usr-local_all_systemctl_daemon-reload:
  cmd.run:
    - name: systemctl daemon-reload

{% if not salt['file.directory_exists' ]('/usr/local_all/tools') %}
usr-local_all.automount:
  service.running
{% endif %}
```

Please be as specific as possible and give set-up details.

- [ X ] on-prem machine
- [ X ] VM (Virtualbox, KVM, etc. please specify)
- [ ] VM running on a cloud service, please be explicit and add details
- [ ] container (Kubernetes, Docker, containerd, etc. please specify)
- [ ] or a combination, please be explicit
- [ ] jails if it is FreeBSD


**Expected behavior**
`{% if not salt['file.directory_exists' ]('/usr/local_all/tools') %}` is not always true, means if  a subdirectory exists salt.state `service.running` must not be executed.

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```yaml
Salt Version:                                                                                                                                                            
          Salt: 3002.2

Dependency Versions:
          cffi: 1.13.2
      cherrypy: Not Installed
      dateutil: Not Installed
     docker-py: Not Installed
         gitdb: Not Installed
     gitpython: Not Installed
        Jinja2: 2.10.1
       libgit2: Not Installed
      M2Crypto: 0.35.2
          Mako: Not Installed
       msgpack: 0.5.6
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: 2.17
      pycrypto: Not Installed
  pycryptodome: Not Installed
        pygit2: Not Installed
        Python: 3.6.15 (default, Sep 15 2021, 14:20:42) [GCC]
  python-gnupg: Not Installed
        PyYAML: 5.3.1
         PyZMQ: 17.1.2
         smmap: Not Installed
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.2.3

System Versions:
          dist: sles 15.2 n/a
        locale: UTF-8
       machine: x86_64
       release: 5.3.18-24.102-default
        system: Linux
       version: SLES 15.2 n/a
```
</details>

**Additional context**
My understanding is that Salt runs all steps included in a state file sequentially and identifies if conditions are fulfilled.
If a condition changes during the state execution and a follow-up step is depending on this condition, the change is not reflected correctly.
How could I define the state to work as expected?
