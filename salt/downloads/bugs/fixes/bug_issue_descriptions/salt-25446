Found strange message about an exception occured somewhere during debugging salt-run. Looked around this and discovered the following. `mixins.low()` deep copying `self.functions` that is an object of `LazyLoader` class. Deepcopy function creates non-initialized `LazyLoader` object with `__newobj__` and checks does it has attr `__setstate__`. Hasattr calls overloaded `LazyLoader.__getattr__()` method that uses `self.loaded_modules`, `self.loaded` and `self.loaded_files`. These fields are initialized in constructor, but in this case they aren't exist in the self object that produces infinity recursion in `LazyLoader.__getattr__('loaded_modules')`.

This doesn't change behavior as a result because hasattr call treats the error as no attribute result. But logically this is wrong.

To reproduce this add conditional breakpoint `mod_name == 'loaded_modules'` to `LazyLoader.__getattr__()` and execute `salt-run jobs.list_jobs` in debugger.
