In https://github.com/saltstack/salt/blob/develop/salt/modules/file.py#L962-964 usage of inplace editing have two unpleasant consequences
-  the file is **always modified** (except in dry_run mode), even if no difference is detected and the state reports no modifications. The modification timestamp for example is altered. This would, for example, mark this file as needed in an rsync process. This is a minor problem,but at least it should be documented.
- while the loop is running the **file is empty**, at least in backup mode. File content is back only after the end of the loop (tested with a sleep in the loop). Any process accessing the file while salt is editing may load an empty content.
- line-by-line reads prevent usage of MULTILINE regex as stated in #7999. Maybe `salt.utils.filebuffer.BufferedReader` should be used instead.

In #8048 I made some tests with `salt.utils.atomicfile.atomic_open` to avoid this parallel access problem. That may be a solution (or not).
