Running the official Salt 2014.7.0 release on a Windows 7 Enterprise 64bit Minion.
The minion is running for 3 days and was only occasionally connected to the salt-master.
When connected, I have issued only testing commands (like test.version).

In Sysinternals Process Explorer I searched for "salt-minion" and found 400 `salt-minion.exe` threads, spawned of `crss.exe` (Microsoft client server runtime process). 20 were created in the last 2 hours, when I was connected to the master for 1 hour and 40 during writing this report (and offline).
This means the number of threads is rapidly rising.

I don't get where the answer is in "Explain the number of master procs and worker_threads"   https://github.com/saltstack/salt/pull/14907  

At which number of threads Python is supposed to reclaim threads?
Is this a thread leak?
