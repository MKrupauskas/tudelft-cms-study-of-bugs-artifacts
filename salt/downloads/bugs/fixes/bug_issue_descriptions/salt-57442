**Description**
The spacewalk runner does not properly parse the method namespaces. It assumes that a simple .split('.') will result in a two element list [ namespace, method ]. This works in simple cases such as 'system.listSystems' but fails for namespaces such as 'channel.software.listChildren' which results in three elements and causes the following exception:
```
Exception occurred in runner spacewalk.api: Traceback (most recent call last):
  File "/usr/lib/python3.6/site-packages/salt/client/mixins.py", line 377, in low
    data['return'] = func(*args, **kwargs)
  File "/usr/lib/python3.6/site-packages/salt/runners/spacewalk.py", line 175, in api
    namespace, method = command.split('.')
ValueError: too many values to unpack (expected 2)
```

**Setup**
N/A

**Steps to Reproduce the behavior**
salt-run $spacewalkserver spacewalk.api channel.software.listChildren $basechannel

**Expected behavior**
Should not cause a stack trace

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Versions Report**
Irrelevant. Bug has been present since runner was initially committed.
I'm running a 2019.2 branch and it's still present in Salt 3000.1

**Proposed Fix**

```
salt/runners/spacewalk.py
168c168,169
<     namespace, method = command.split(".")
---
>     namespace = ".".join(command.split('.')[:-1])
>     method = command.split('.')[-1]
```