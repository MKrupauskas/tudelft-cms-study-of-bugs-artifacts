I have a test state that looks as follows:

```
/var/cache/webapps:
  mount.mounted:
    - device: /var/cache/webapps.img
    - fstype: ext4
    - mkmnt: True
    - opts: loop,rw,nosuid,nodev,noexec
    - pass_num: 2
    - remount: True
    - persist: True
```

When it runs the first time, it successfully executes as expected:

```
[INFO    ] Executing command 'umount /var/cache/webapps' in directory '/root'
[INFO    ] Executing command 'mount -o loop,rw,nosuid,nodev,noexec -t ext4 /var/cache/webapps.img /var/cache/webapps ' in directory '/root'
[INFO    ] {'mount': True}
local:
----------
    State: - mount
    Name:      /var/cache/webapps
    Function:  mounted
        Result:    True
        Comment:   Target was successfully mounted
        Changes:   mount: True
```

However when it runs a second time, it unnecessarily unmounts the mountpoint, and then remounts it again. This happens regardless of the remount option, and makes the state unusable for me in its current form.

```
[INFO    ] Executing state mount.mounted for /var/cache/webapps
[INFO    ] Executing command 'umount /var/cache/webapps' in directory '/root'
[INFO    ] Executing command 'mount -o loop,rw,nosuid,nodev,noexec -t ext4 /var/cache/webapps.img /var/cache/webapps ' in directory '/root'
[INFO    ] {'mount': True}
local:
----------
    State: - mount
    Name:      /var/cache/webapps
    Function:  mounted
        Result:    True
        Comment:   Target was successfully mounted
        Changes:   mount: True
```

Next, I tried simplifying my setup as much as possible. I unmounted, removed the entry in /etc/fstab, and used the following state:

```
/var/cache/webapps:
  mount.mounted:
    - device: /var/cache/webapps.img
    - fstype: ext4
```

No difference. Still unmounts and mounts again on a second execution. I would use an onlyif or unless statement to work around this, but they don't seem supported here.

```
$ salt-call --versions-report
           Salt: 0.17.2-78-g204fbf6
         Python: 2.7.3 (default, Jan  2 2013, 13:56:14)
         Jinja2: 2.6
       M2Crypto: 0.21.1
 msgpack-python: 0.1.10
   msgpack-pure: Not Installed
       pycrypto: 2.6
         PyYAML: 3.10
          PyZMQ: 13.1.0
            ZMQ: 3.2.3
```

Versions report for the master is identical.
