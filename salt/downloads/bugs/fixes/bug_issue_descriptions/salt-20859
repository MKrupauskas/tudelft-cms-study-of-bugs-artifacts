```
C:\salt>salt-call --local state.highstate -l debug
[DEBUG   ] Reading configuration from c:\salt\conf\minion
[DEBUG   ] Configuration file path: c:\salt\conf\minion
[DEBUG   ] Reading configuration from c:\salt\conf\minion
[DEBUG   ] Mako not available
[DEBUG   ] Updating fileserver cache
[DEBUG   ] Reading configuration from c:\salt\conf\minion
[INFO    ] Loading fresh modules for state activity
[INFO    ] Fetching file from saltenv 'base', ** skipped ** latest already in ca
che 'salt://top.sls'
[DEBUG   ] Jinja search path: ['C:/salt']
[DEBUG   ] Rendered data from file: c:\salt\var\cache\salt\minion\files\base\top
.sls:
base:
 '*':
  - webserver
[DEBUG   ] Results of YAML rendering:
OrderedDict([('base', OrderedDict([('*', ['webserver'])]))])
[DEBUG   ] Syncing all
[INFO    ] Creating module dir 'c:\\salt\\var\\cache\\salt\\minion\\extmods\\mod
ules'
[INFO    ] Syncing modules for environment 'base'
[INFO    ] Loading cache from salt://_modules, for base)
[DEBUG   ] Updating fileserver cache
[INFO    ] Caching directory '_modules/' for environment 'base'
[DEBUG   ] Local cache dir: 'c:\\salt\\var\\cache\\salt\\minion\\files\\base\\_m
odules'
[INFO    ] Creating module dir 'c:\\salt\\var\\cache\\salt\\minion\\extmods\\sta
tes'
[INFO    ] Syncing states for environment 'base'
[INFO    ] Loading cache from salt://_states, for base)
[INFO    ] Caching directory '_states/' for environment 'base'
[DEBUG   ] Local cache dir: 'c:\\salt\\var\\cache\\salt\\minion\\files\\base\\_s
tates'
[INFO    ] Creating module dir 'c:\\salt\\var\\cache\\salt\\minion\\extmods\\gra
ins'
[INFO    ] Syncing grains for environment 'base'
[INFO    ] Loading cache from salt://_grains, for base)
[INFO    ] Caching directory '_grains/' for environment 'base'
[DEBUG   ] Local cache dir: 'c:\\salt\\var\\cache\\salt\\minion\\files\\base\\_g
rains'
[INFO    ] Creating module dir 'c:\\salt\\var\\cache\\salt\\minion\\extmods\\ren
derers'
[INFO    ] Syncing renderers for environment 'base'
[INFO    ] Loading cache from salt://_renderers, for base)
[INFO    ] Caching directory '_renderers/' for environment 'base'
[DEBUG   ] Local cache dir: 'c:\\salt\\var\\cache\\salt\\minion\\files\\base\\_r
enderers'
[INFO    ] Creating module dir 'c:\\salt\\var\\cache\\salt\\minion\\extmods\\ret
urners'
[INFO    ] Syncing returners for environment 'base'
[INFO    ] Loading cache from salt://_returners, for base)
[INFO    ] Caching directory '_returners/' for environment 'base'
[DEBUG   ] Local cache dir: 'c:\\salt\\var\\cache\\salt\\minion\\files\\base\\_r
eturners'
[INFO    ] Creating module dir 'c:\\salt\\var\\cache\\salt\\minion\\extmods\\out
putters'
[INFO    ] Syncing outputters for environment 'base'
[INFO    ] Loading cache from salt://_outputters, for base)
[INFO    ] Caching directory '_outputters/' for environment 'base'
[DEBUG   ] Local cache dir: 'c:\\salt\\var\\cache\\salt\\minion\\files\\base\\_o
utputters'
[INFO    ] Creating module dir 'c:\\salt\\var\\cache\\salt\\minion\\extmods\\uti
ls'
[INFO    ] Syncing utils for environment 'base'
[INFO    ] Loading cache from salt://_utils, for base)
[INFO    ] Caching directory '_utils/' for environment 'base'
[DEBUG   ] Local cache dir: 'c:\\salt\\var\\cache\\salt\\minion\\files\\base\\_u
tils'
[DEBUG   ] Refreshing modules...
[INFO    ] Loading fresh modules for state activity
[INFO    ] Fetching file from saltenv 'base', ** skipped ** latest already in ca
che 'salt://webserver.sls'
[DEBUG   ] Jinja search path: ['C:/salt']
[DEBUG   ] Rendered data from file: c:\salt\var\cache\salt\minion\files\base\web
server.sls:
firefox:
 pkg:
  - installed
[DEBUG   ] Results of YAML rendering:
OrderedDict([('firefox', OrderedDict([('pkg', ['installed'])]))])
[INFO    ] Running state [firefox] at time 18:34:24.084000
[INFO    ] Executing state pkg.installed for firefox
[INFO    ] Executing command 'Powershell " $msi = New-Object -ComObject WindowsI
nstaller.Installer; $msi.GetType().InvokeMember(\'ProductsEx\', \'GetProperty\',
 $null, $msi, (\'\', \'s-1-1-0\', 7)) | select @{       name=\'name\';       exp
ression={$_.GetType().InvokeMember(\'InstallProperty\', \'GetProperty\', $null,
$_, (\'ProductName\'))}     },     @{       name=\'version\';       expression={
$_.GetType().InvokeMember(\'InstallProperty\', \'GetProperty\', $null, $_, (\'Ve
rsionString\'))}     } | Write-host "' in directory 'C:\\Users\\patriciap'
[ERROR   ] Command " $msi = New-Object -ComObject WindowsInstaller.Installer; $m
si.GetType().InvokeMember('ProductsEx', 'GetProperty', $null, $msi, ('', 's-1-1-
0', 7)) | select @{       name='name';       expression={$_.GetType().InvokeMemb
er('InstallProperty', 'GetProperty', $null, $_, ('ProductName'))}     },     @{
      name='version';       expression={$_.GetType().InvokeMember('InstallProper
ty', 'GetProperty', $null, $_, ('VersionString'))}     } | Write-host " failed w
ith return code: 1
[ERROR   ] stderr: Exception calling "InvokeMember" with "5" argument(s): "Produ
ctsEx,Product,User
Sid,Contexts"
At line:1 char:86
+  $msi = New-Object -ComObject WindowsInstaller.Installer; $msi.GetType().Invo
keMember <<<< ('ProductsEx', 'GetProperty', $null, $msi, ('', 's-1-1-0', 7)) |
select @{       name='name';       expression={$_.GetType().InvokeMember('Insta
llProperty', 'GetProperty', $null, $_, ('ProductName'))}     },     @{       na
me='version';       expression={$_.GetType().InvokeMember('InstallProperty', 'G
etProperty', $null, $_, ('VersionString'))}     } | Write-host
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : DotNetMethodTargetInvocation
[ERROR   ] retcode: 1
[ERROR   ] Package firefox not found in the repository.
[INFO    ] Completed state [firefox] at time 18:34:26.574000
[INFO    ] Executing command ['attrib', '-R', 'c:\\salt\\var\\cache\\salt\\minio
n\\highstate.p'] in directory 'C:\\Users\\patriciap'
[DEBUG   ] output:
[DEBUG   ] Failed to import returner :
Traceback (most recent call last):
  File "salt/loader.py", line 621, in gen_module
    Goals here:
ImportError: No module named
local:
----------
          ID: firefox
    Function: pkg.installed
      Result: False
     Comment: Package firefox not found in the repository.
     Started: 18:34:24.084000
    Duration: 2490.0 ms
     Changes:

Summary
------------
Succeeded: 0
Failed:    1
------------
Total states run:     1

C:\salt>
```

The above is the error i get while executing the masterless minion. Can anyone please give me a solution. Since i am new to salt i am not able to trace the error. Please help me
