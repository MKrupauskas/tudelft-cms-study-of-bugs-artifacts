**Description**

Getting the following error:

```
    - Rendering SLS 'base:common.pki' failed: Jinja error: unsupported operand type(s) for +=: 'dict' and 'str'
      Traceback (most recent call last):
        File "/usr/lib/python3/dist-packages/salt/utils/templates.py", line 500, in render_jinja_tmpl
          output = template.render(**decoded_context)
        File "/usr/lib/python3/dist-packages/jinja2/asyncsupport.py", line 76, in render
          return original_render(self, *args, **kwargs)
        File "/usr/lib/python3/dist-packages/jinja2/environment.py", line 1008, in render
          return self.environment.handle_exception(exc_info, True)
        File "/usr/lib/python3/dist-packages/jinja2/environment.py", line 780, in handle_exception
          reraise(exc_type, exc_value, tb)
        File "/usr/lib/python3/dist-packages/jinja2/_compat.py", line 37, in reraise
          raise value.with_traceback(tb)
        File "<template>", line 23, in top-level template code
        File "/usr/lib/python3/dist-packages/salt/utils/jinja.py", line 370, in indent
          s += newline  # this quirk is necessary for splitlines method
      TypeError: unsupported operand type(s) for +=: 'dict' and 'str'

      ; line 23

      ---
      [...]
          - mode: 0644

      /etc/pki/chain.crt:
        file.managed:
          - contents: |
              {{ salt_ca_cert | indent(8) }}    <======================
              {{ root_ca_cert | indent(8) }}
          - user: root
          - group: root
          - mode: 0644

      [...]
```

**Setup**

Using this:

```
{% set root_ca_cert = salt['vault'].read_secret('pki_root/cert/ca', 'certificate') %}
{% set salt_ca_cert = salt['vault'].read_secret('pki_salt/cert/ca', 'certificate') %}

/etc/pki/ca.crt:
  file.managed:
    - contents: |
        {{ salt_ca_cert | indent(8) }}
    - user: root
    - group: root
    - mode: 0644
```

It seems to work ok with salt-minion, but gives the above error when used with salt-ssh.

If I set root_ca_cert and salt_ca_cert  to an empty string, it works ok.

**Steps to Reproduce the behavior**

See above.

**Expected behavior**

It should not error.

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
$ salt-ssh --versions-report
Salt Version:
          Salt: 3003.1

Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: 2.7.3
     docker-py: Not Installed
         gitdb: Not Installed
     gitpython: Not Installed
        Jinja2: 2.10
       libgit2: Not Installed
      M2Crypto: 0.31.0
          Mako: Not Installed
       msgpack: 0.5.6
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: Not Installed
      pycrypto: 2.6.1
  pycryptodome: 3.6.1
        pygit2: Not Installed
        Python: 3.7.3 (default, Jan 22 2021, 20:04:44)
  python-gnupg: Not Installed
        PyYAML: 3.13
         PyZMQ: 17.1.2
         smmap: Not Installed
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.3.1

System Versions:
          dist: debian 10 buster
        locale: UTF-8
       machine: x86_64
       release: 4.19.0-16-amd64
        system: Linux
       version: Debian GNU/Linux 10 buster
```
</details>

