I'm trying to use a returner with an orchestration and finding that it just doesn't work; the "ret" argument to [saltmod.state](https://docs.saltstack.com/en/develop/ref/states/all/salt.states.saltmod.html#salt.states.saltmod.state) has no effect. I may have an idea why, though I may also be an idiot.

If you look at [saltmod.py](https://github.com/saltstack/salt/blob/v2015.8.1/salt/states/saltmod.py), line 42, we see that saltmod.state takes `ret` as an argument, defaulting to an empty string. Okay, that matches the documentation. On line 147 the `ret` argument gets assigned to the `cmd_kw` dictionary as `cmd_kw['ret']`, then the local variable `ret` gets used for something else.

The `cmd_kw` dict starts to get some play around line 183, then on line 216 it shows up as an argument to `__salt__['saltutil.cmd'](tgt, fun, **cmd_kw)`. So we follow the trail to [saltutil.py](https://github.com/saltstack/salt/blob/v2015.8.1/salt/modules/saltutil.py), line 808, where `saltutil.cmd` is defined. On line 828 `cmd` calls `_exec` passing it `ret` as an argument; `_exec` is defined on line 793 and declared to take `ret` as an argument â€¦ but on the very first line, we see:

```
    ret = {}
```

Either I'm an idiot (very probably) or this is the point where the `ret` argument to `saltmod.state` gets lost, and the reason why it doesn't seem to do anything.

So I end up with two questions:
1. Can orchestrations be wired up to custom returners in 2015.8.1, and,
2. if so, how?

Thanks.
