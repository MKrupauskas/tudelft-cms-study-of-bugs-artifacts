### Description of Issue

With a libvirt storage pool defined of disk type, selecting existing volume in a `virt.defined` state will pick up a new volume name.

### Setup

Prepare a libvirt pool with a definition like this one:

```xml
<pool type='disk'>
  <name>vdb</name>
  <source>
    <device path='/dev/vdb'/>
    <format type='gpt'/>
  </source>
  <target>
    <path>vdb</path>
  </target>
</pool>
```

Ensure there is only a `vdb1` volume created in that pool.

### Steps to Reproduce Issue

Add the following to a `virt.defined` state

```yaml
            - name: disk-test
              model: virtio
              device: disk
              source_file: vdb1
              pool: vdb
```

Apply the state. The state will fail with an error like the following:

```
Exception: this function is not supported by the connection driver: volume capacity required for this storage pool
```

The state should succeed and add a disk using the `vdb1` volume in pool `vdb`.

After some debugging, it appears that the disk volume name has been changed to `vdb2`.

### Versions Report

Only with a Sodium minion