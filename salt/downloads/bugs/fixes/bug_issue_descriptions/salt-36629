### Description of Issue/Question

It seems like the pillar run module does not honor the salt environment. This results in hard to debug problems because the variables in your written salt code get expanded to different values than those you see when you run `salt-call pillar.items saltenv=bla`. Looking at the code it seems like the `satenv=bla` is ignored, but imo this should not be the case.
### Setup

Create separate pillars for 2 separate envs. Then write the following init.sls state file:

```
{% set content = salt['pillar.get']('content', '') %}
create pillar file:
  file.managed:
    - name: /tmp/pillarfile
    - contents: {{ content }}
```

And in the **base** pillar you set:

```
content: base_env
```

And in the **bla** env:

```
content: bla
```

Then when you do a `salt-call state.apply` or a `salt-call state.apply saltenv=bla` the contents of `/tmp/pillarfile` change to _base_env_ and _bla_ respectively as expected. Only when you check the pillar items with the pillar module, you always get _base_env_, regardless of the saltenv passed.
