### Description of Issue/Question
Trying to install chrome on windows minion on 2016.11.5 fails.
I see this on all supported windows os

### Setup
Windows minion and Linux master

### Steps to Reproduce Issue
Install using state file
```
winpkgs:
  pkg.installed:
    - pkgs:
      - chrome
```
gives this:
```
[root@li279-162 salt]# salt win2012 state.sls test
win2012:
----------
          ID: winpkgs
    Function: pkg.installed
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "c:\salt\bin\lib\site-packages\salt\state.py", line 1746, in call
                  **cdata['kwargs'])
                File "c:\salt\bin\lib\site-packages\salt\loader.py", line 1704, in wrapper
                  return f(*args, **kwargs)
                File "c:\salt\bin\lib\site-packages\salt\states\pkg.py", line 1442, in installed
                  **kwargs)
                File "c:\salt\bin\lib\site-packages\salt\modules\win_pkg.py", line 1157, in install
                  use_msiexec, msiexec = _get_msiexec(pkginfo[version_num].get('msiexec', False))
                File "c:\salt\bin\lib\site-packages\salt\modules\win_pkg.py", line 846, in _get_msiexec
                  if os.path.isfile(use_msiexec):
                File "c:\salt\bin\lib\genericpath.py", line 37, in isfile
                  st = os.stat(path)
              TypeError: coercing to Unicode: need string or buffer, bool found
     Started: 10:32:15.301000
    Duration: 31953.0 ms
     Changes:   

Summary for win2012
------------
Succeeded: 0
Failed:    1
------------
Total states run:     1
Total run time:  31.953 s
ERROR: Minions returned with non-zero exit code
```

Running this `salt win2012 pkg.install chrome` gives:
```
        Install the passed package(s) on the system using winrepo
    
        :param name:
            The name of a single package, or a comma-separated list of packages to
            install. (no spaces after the commas)
        :type name: str, list, or None
    
        :param bool refresh: Boolean value representing whether or not to refresh
            the winrepo db
    
        :param pkgs: A list of packages to install from a software repository.
            All packages listed under ``pkgs`` will be installed via a single
            command.
    
        :type pkgs: list or None
    
        *Keyword Arguments (kwargs)*
    
        :param str version:
            The specific version to install. If omitted, the latest version will be
            installed. If passed with multiple install, the version will apply to
            all packages. Recommended for single installation only.
    
        :param str cache_file:
            A single file to copy down for use with the installer. Copied to the
            same location as the installer. Use this over ``cache_dir`` if there
            are many files in the directory and you only need a specific file and
            don't want to cache additional files that may reside in the installer
            directory. Only applies to files on ``salt://``
    
        :param bool cache_dir:
            True will copy the contents of the installer directory. This is useful
            for installations that are not a single file. Only applies to
            directories on ``salt://``
    
        :param str saltenv: Salt environment. Default 'base'
    
        :param bool report_reboot_exit_codes:
            If the installer exits with a recognized exit code indicating that
            a reboot is required, the module function
    
               *win_system.set_reboot_required_witnessed*
    
            will be called, preserving the knowledge of this event
            for the remainder of the current boot session. For the time being,
            3010 is the only recognized exit code. The value of this param
            defaults to True.
    
            .. versionadded:: 2016.11.0
    
        :return: Return a dict containing the new package names and versions::
        :rtype: dict
    
            If the package is installed by ``pkg.install``:
    
            .. code-block:: cfg
    
                {'<package>': {'old': '<old-version>',
                               'new': '<new-version>'}}
    
            If the package is already installed:
    
            .. code-block:: cfg
    
                {'<package>': {'current': '<current-version>'}}
    
        The following example will refresh the winrepo and install a single package,
        7zip.
    
        CLI Example:
    
        .. code-block:: bash
    
            salt '*' pkg.install 7zip refresh=True
    
        CLI Example:
    
        .. code-block:: bash
    
            salt '*' pkg.install 7zip
            salt '*' pkg.install 7zip,filezilla
            salt '*' pkg.install pkgs='["7zip","filezilla"]'
    
        WinRepo Definition File Examples:
    
        The following example demonstrates the use of ``cache_file``. This would be
        used if you have multiple installers in the same directory that use the same
        ``install.ini`` file and you don't want to download the additional
        installers.
    
        .. code-block:: bash
    
            ntp:
              4.2.8:
                installer: 'salt://win/repo/ntp/ntp-4.2.8-win32-setup.exe'
                full_name: Meinberg NTP Windows Client
                locale: en_US
                reboot: False
                cache_file: 'salt://win/repo/ntp/install.ini'
                install_flags: '/USEFILE=C:\salt\var\cache\salt\minion\files\base\win\repo\ntp\install.ini'
                uninstaller: 'NTP/uninst.exe'
    
        The following example demonstrates the use of ``cache_dir``. It assumes a
        file named ``install.ini`` resides in the same directory as the installer.
    
        .. code-block:: bash
    
            ntp:
              4.2.8:
                installer: 'salt://win/repo/ntp/ntp-4.2.8-win32-setup.exe'
                full_name: Meinberg NTP Windows Client
                locale: en_US
                reboot: False
                cache_dir: True
                install_flags: '/USEFILE=C:\salt\var\cache\salt\minion\files\base\win\repo\ntp\install.ini'
                uninstaller: 'NTP/uninst.exe'
```

### Versions Report
```
    Salt Version:
               Salt: 2016.11.5
     
    Dependency Versions:
               cffi: 1.10.0
           cherrypy: 7.1.0
           dateutil: 2.5.3
          docker-py: Not Installed
              gitdb: 0.6.4
          gitpython: 2.0.8
              ioflo: 1.5.5
             Jinja2: 2.9.4
            libgit2: Not Installed
            libnacl: 1.4.5
           M2Crypto: Not Installed
               Mako: 1.0.4
       msgpack-pure: Not Installed
     msgpack-python: 0.4.8
       mysql-python: Not Installed
          pycparser: 2.17
           pycrypto: 2.6.1
       pycryptodome: Not Installed
             pygit2: Not Installed
             Python: 2.7.12 (v2.7.12:d33e0cf91556, Jun 27 2016, 15:24:40) [MSC v.1500 64 bit (AMD64)]
       python-gnupg: 0.3.8
             PyYAML: 3.11
              PyZMQ: 16.0.1
               RAET: Not Installed
              smmap: 0.9.0
            timelib: 0.2.4
            Tornado: 4.4.1
                ZMQ: 4.1.6
     
    System Versions:
               dist:   
            machine: AMD64
            release: 2012Server
             system: Windows
            version: 2012Server 6.2.9200 SP0 Multiprocessor Free
```