While experimenting with pillars, I had some syntax errors. This ended up with the following error message.

```
[INFO    ] Loading fresh modules for state activity
local:
    Data failed to compile:
----------
    Pillar failed to render with the following messages:
----------
    Rendering SLS 'sys.centers.emar_hashed' failed, render error:
Jinja syntax error: Encountered unknown tag 'salt'. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.; line 7

---
[...]
{% set center = grains['id'].split('.')[1] %}
{% if center == '0010' %}emar_hash: {% salt['hashutil.md5sum']('foobar') %} {% endif %}    <======================
{% if center == '0040' %}emar_hash: {% salt['hashutil.md5_digest']('foobar') %} {% endif %}
{% if center == '0290' %}emar_hash: {% salt['hashutil.md5_digest']('foobar') %} {% endif %}
{% if center == '0350' %}emar_hash: {% salt['hashutil.md5_digest']('foobar') %} {% endif %}
{% if center == '0400' %}emar_hash: {% salt['hashutil.md5_digest']('foobar') %} {% endif %}
```

This happened because I used {% %} instead of {{ }}. In practice, a pillar should be written so that it won't break. However, it's always possible someone is doing something that will eventually have an event that fires in a way they didn't expect and causes a render error.

In practice, it also makes sense that one pillar file should have data only for one specific box, but... maybe not always practical. What I did above is now a much more sane pillar file that actually has no passwords stored in it (pulled from another pillar).

There are a lot of cases I can think of where users would have private data for multiple systems in the same pillar file. A render error would reveal that information. In some cases, the exposed data is fine, but not always.

What makes the most sense to me is an option on the master config file that toggles the ability to send render errors for pillars down to the minion.
