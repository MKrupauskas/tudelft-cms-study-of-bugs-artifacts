**Description**
allow_passwordless in mysql_user.present force the use of unix_socket even if the unix_socket set to false

**Setup**
```
phpmyadmin-user:
  mysql_user.present:
    - name: phpmyadmin
    - host: 'localhost'
    - allow_passwordless: true
    - unix_socket: false
```

**Steps to Reproduce the behavior**
```
[INFO    ] Executing state mysql_user.present for [phpmyadmin]
[DEBUG   ] Doing query: SELECT VERSION()
[DEBUG   ] Doing query: SELECT column_name from information_schema.COLUMNS WHERE table_schema=%(schema)s and table_name=%(table)s and column_name=%(column)s args: {'schema': 'mysql', 'table': 'user', 'column': 'Password'} 
[DEBUG   ] Doing query: SELECT plugin FROM mysql.user WHERE User=%(user)s and Host=%(host)s args: {'user': 'phpmyadmin', 'host': 'localhost'} 
[DEBUG   ] ()
[DEBUG   ] Doing query: SELECT User,Host FROM mysql.user WHERE User = %(user)s AND Host = %(host)s AND Password = '' args: {'user': 'phpmyadmin', 'host': 'localhost'} 
[DEBUG   ] Doing query: SELECT plugin FROM mysql.user WHERE User=%(user)s and Host=%(host)s args: {'user': 'phpmyadmin', 'host': 'localhost'} 
[DEBUG   ] ()
[DEBUG   ] Doing query: SELECT User,Host FROM mysql.user WHERE User = %(user)s AND Host = %(host)s args: {'user': 'phpmyadmin', 'host': 'localhost'} 
[DEBUG   ] Doing query: SELECT plugin FROM mysql.user WHERE User=%(user)s and Host=%(host)s args: {'user': 'phpmyadmin', 'host': 'localhost'} 
[DEBUG   ] ()
[DEBUG   ] Doing query: SELECT User,Host FROM mysql.user WHERE User = %(user)s AND Host = %(host)s args: {'user': 'phpmyadmin', 'host': 'localhost'} 
[DEBUG   ] Doing query: SELECT PLUGIN_STATUS FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = %(name)s args: {'name': 'unix_socket'} 
[ERROR   ] The unix_socket plugin is not enabled.
[ERROR   ] Failed to create user phpmyadmin@localhost (The unix_socket plugin is not enabled.)
```

**Expected behavior**
The user has been added.

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
Salt Version:
          Salt: 3002.2
 
Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: 2.4.2
     docker-py: Not Installed
         gitdb: Not Installed
     gitpython: Not Installed
        Jinja2: 2.11.1
       libgit2: Not Installed
      M2Crypto: 0.35.2
          Mako: Not Installed
       msgpack: 0.6.2
  msgpack-pure: Not Installed
  mysql-python: 1.3.12
     pycparser: Not Installed
      pycrypto: Not Installed
  pycryptodome: Not Installed
        pygit2: Not Installed
        Python: 3.6.8 (default, Nov 16 2020, 16:55:22)
  python-gnupg: Not Installed
        PyYAML: 3.13
         PyZMQ: 17.0.0
         smmap: Not Installed
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.1.4
 
System Versions:
          dist: centos 7 Core
        locale: UTF-8
       machine: x86_64
       release: 3.10.0-1160.11.1.el7.x86_64
        system: Linux
       version: CentOS Linux 7 Core
```
</details>

**Additional context**
No problems in salt version 2019.2.8
