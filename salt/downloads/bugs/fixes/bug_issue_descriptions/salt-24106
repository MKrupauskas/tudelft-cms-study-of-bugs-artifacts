It appears the bug described in #18131 has resurfaced in 2015.5.

The commit d63b7a7db246f43bdfaef742755dec226d905318 seems to be where the regression was introduced. Reverting fileclient.py to the version in 88fb2e0036356d81d6bb7032f1ab99ea590b537b works.

```
# salt-call --versions-report
           Salt: 2015.5.0
         Python: 2.7.5 (default, Feb 11 2014, 07:46:25)
         Jinja2: 2.7.2
       M2Crypto: 0.21.1
 msgpack-python: 0.4.6
   msgpack-pure: Not Installed
       pycrypto: 2.6.1
        libnacl: Not Installed
         PyYAML: 3.10
          ioflo: Not Installed
          PyZMQ: 14.3.1
           RAET: Not Installed
            ZMQ: 3.2.5
           Mako: Not Installed
```

RHEL7 installed via RPM.

```
# salt-call cp.get_file_str 'https://salt:password2@example.com/blah.xml'
[ERROR   ] An un-handled exception was caught by salt's global exception handler:
MinionError: HTTP error 401 reading https://salt:password2@example.com/blah.xml: No permission -- see authorization schemes
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    salt_call()
  File "/usr/lib/python2.7/site-packages/salt/scripts.py", line 227, in salt_call
    client.run()
  File "/usr/lib/python2.7/site-packages/salt/cli/call.py", line 69, in run
    caller.run()
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 236, in run
    ret = self.call()
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 138, in call
    ret['return'] = func(*args, **kwargs)
  File "/usr/lib/python2.7/site-packages/salt/modules/cp.py", line 302, in get_file_str
    fn_ = cache_file(path, saltenv)
  File "/usr/lib/python2.7/site-packages/salt/modules/cp.py", line 344, in cache_file
    result = __context__['cp.fileclient'].cache_file(path, saltenv)
  File "/usr/lib/python2.7/site-packages/salt/fileclient.py", line 152, in cache_file
    return self.get_url(path, '', True, saltenv)
  File "/usr/lib/python2.7/site-packages/salt/fileclient.py", line 621, in get_url
    *BaseHTTPServer.BaseHTTPRequestHandler.responses[exc.code]))
MinionError: HTTP error 401 reading https://salt:password2@example.com/blah.xml: No permission -- see authorization schemes
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    salt_call()
  File "/usr/lib/python2.7/site-packages/salt/scripts.py", line 227, in salt_call
    client.run()
  File "/usr/lib/python2.7/site-packages/salt/cli/call.py", line 69, in run
    caller.run()
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 236, in run
    ret = self.call()
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 138, in call
    ret['return'] = func(*args, **kwargs)
  File "/usr/lib/python2.7/site-packages/salt/modules/cp.py", line 302, in get_file_str
    fn_ = cache_file(path, saltenv)
  File "/usr/lib/python2.7/site-packages/salt/modules/cp.py", line 344, in cache_file
    result = __context__['cp.fileclient'].cache_file(path, saltenv)
  File "/usr/lib/python2.7/site-packages/salt/fileclient.py", line 152, in cache_file
    return self.get_url(path, '', True, saltenv)
  File "/usr/lib/python2.7/site-packages/salt/fileclient.py", line 621, in get_url
    *BaseHTTPServer.BaseHTTPRequestHandler.responses[exc.code]))
salt.exceptions.MinionError: HTTP error 401 reading https://salt:password2@example.com/blah.xml: No permission -- see authorization schemes
```

When running the same command with the older fileclient.py mentioned (or on previous salt versions - or if curling the same url for that matter) it fetched the file as expected.
