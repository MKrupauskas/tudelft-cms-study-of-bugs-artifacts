### Description of Issue/Question
I'm not able to use any `pkg.*` modules.  Most likely since the OS is a customize Red Hat EL 6 system produced by McAfee.

### Setup
(Please provide relevant configs and/or SLS files (Be sure to remove sensitive info).)

### Steps to Reproduce Issue
(Include debug logs if possible and relevant.)

Execute any basic pkg module command that relies on yumpkg.py:

```
[root@salt-minion ~]# salt-call pkg.list_repos -l debug 2>&1
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/master.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/master.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/merging.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/merging.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/minion_debug_loglevel.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/minion_debug_loglevel.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/minion_id.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/minion_id.conf
[DEBUG   ] Configuration file path: /etc/salt/minion
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[DEBUG   ] Grains refresh requested. Refreshing grains.
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/master.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/master.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/merging.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/merging.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/minion_debug_loglevel.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/minion_debug_loglevel.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/minion_id.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/minion_id.conf
[DEBUG   ] Please install 'virt-what' to improve results of the 'virtual' grain.
[DEBUG   ] Loading static grains from /etc/salt/grains
[DEBUG   ] Connecting to master. Attempt 1 of 1
[DEBUG   ] Master URI: tcp://<snip salt master>:4506
[DEBUG   ] Initializing new AsyncAuth for (u'/etc/salt/pki/minion', u't-proxy1', u'tcp://<snip salt master>:4506')
[DEBUG   ] Generated random reconnect delay between '1000ms' and '11000ms' (3223)
[DEBUG   ] Setting zmq_reconnect_ivl to '3223ms'
[DEBUG   ] Setting zmq_reconnect_ivl_max to '11000ms'
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for (u'/etc/salt/pki/minion', u'salt-minion', u'tcp://<snip salt master>:4506', 'clear')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://<snip salt master>:4506
[DEBUG   ] Trying to connect to: tcp://<snip salt master>:4506
[DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] salt.crypt.get_rsa_key: Loading private key
[DEBUG   ] salt.crypt._get_key_with_evict: Loading private key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
[DEBUG   ] Connecting the Minion to the Master publish port, using the URI: tcp://<snip salt master>:4505
[DEBUG   ] salt.crypt.get_rsa_key: Loading private key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] Determining pillar cache
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for (u'/etc/salt/pki/minion', u'salt-minion', u'tcp://<snip salt master>:4506', u'aes')
[DEBUG   ] Initializing new AsyncAuth for (u'/etc/salt/pki/minion', u'salt-minion', u'tcp://<snip salt master>:4506')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://<snip salt master>:4506
[DEBUG   ] Trying to connect to: tcp://<snip salt master>:4506
[DEBUG   ] salt.crypt.get_rsa_key: Loading private key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] Failed to import module datadog_api:
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/salt/loader.py", line 1461, in _load_module
    mod = imp.load_module(mod_namespace, fn_, fpath, desc)
  File "/usr/lib/python2.7/site-packages/salt/modules/datadog_api.py", line 22, in <module>
    import requests
  File "/usr/lib/python2.7/site-packages/requests/__init__.py", line 58, in <module>
    from . import utils
  File "/usr/lib/python2.7/site-packages/requests/utils.py", line 25, in <module>
    from . import certs
ImportError: cannot import name certs
[DEBUG   ] Failed to import module opsgenie:
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/salt/loader.py", line 1461, in _load_module
    mod = imp.load_module(mod_namespace, fn_, fpath, desc)
  File "/usr/lib/python2.7/site-packages/salt/modules/opsgenie.py", line 26, in <module>
    import requests
  File "/usr/lib/python2.7/site-packages/requests/__init__.py", line 58, in <module>
    from . import utils
  File "/usr/lib/python2.7/site-packages/requests/utils.py", line 25, in <module>
    from . import certs
ImportError: cannot import name certs
[DEBUG   ] Failed to import module pagerduty_util:
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/salt/loader.py", line 1461, in _load_module
    mod = imp.load_module(mod_namespace, fn_, fpath, desc)
  File "/usr/lib/python2.7/site-packages/salt/modules/pagerduty_util.py", line 23, in <module>
    import requests
  File "/usr/lib/python2.7/site-packages/requests/__init__.py", line 58, in <module>
    from . import utils
  File "/usr/lib/python2.7/site-packages/requests/utils.py", line 25, in <module>
    from . import certs
ImportError: cannot import name certs
[DEBUG   ] Failed to import module pip:
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/salt/loader.py", line 1461, in _load_module
    mod = imp.load_module(mod_namespace, fn_, fpath, desc)
  File "/usr/lib/python2.7/site-packages/salt/modules/pip.py", line 82, in <module>
    import pkg_resources
ImportError: No module named pkg_resources
[DEBUG   ] LazyLoaded systemd.booted
[DEBUG   ] DSC: Only available on Windows systems
[DEBUG   ] Module PSGet: Only available on Windows systems
[DEBUG   ] Could not LazyLoad pkg.list_repos: 'pkg.list_repos' is not available.
'pkg.list_repos' is not available.
[root@salt-minion ~]# 
```

### Versions Report
(Provided by running `salt --versions-report`. Please also mention any differences in master/minion versions.)

```
Salt Version:
           Salt: 2018.3.1
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: Not Installed
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.8.1
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.13 (default, Jul 12 2017, 17:32:34)
   python-gnupg: Not Installed
         PyYAML: 3.11
          PyZMQ: 14.5.0
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.5
 
System Versions:
           dist: redhat 2.2 Santiago
         locale: UTF-8
        machine: x86_64
        release: 3.18.68-1.mlos2.mwg.x86_64
         system: Linux
        version: McAfee Linux OS Server 2.2 Santiago
 ```

### Notes
I'm following the recommendations set out by the Salt documentation at [https://docs.saltstack.com/en/latest/ref/modules/#overriding-virtual-module-providers](https://docs.saltstack.com/en/latest/ref/modules/#overriding-virtual-module-providers) .  Creating an override for `providers pkg: yumpkg` solves the issue (as suggested by the docs.)

Here's one of the McAfee Web Gateway's `grains.items` as required:

```
local:
    ----------
    SSDs:
    biosreleasedate:
        08/13/2009
    biosversion:
        1.2.6
    cpu_flags:
        - fpu
        - vme
        - de
        - pse
        - tsc
        - msr
        - pae
        - mce
        - cx8
        - apic
        - sep
        - mtrr
        - pge
        - mca
        - cmov
        - pat
        - pse36
        - clflush
        - dts
        - acpi
        - mmx
        - fxsr
        - sse
        - sse2
        - ss
        - ht
        - tm
        - pbe
        - syscall
        - nx
        - rdtscp
        - lm
        - constant_tsc
        - arch_perfmon
        - pebs
        - bts
        - rep_good
        - nopl
        - xtopology
        - nonstop_tsc
        - aperfmperf
        - pni
        - dtes64
        - monitor
        - ds_cpl
        - vmx
        - est
        - tm2
        - ssse3
        - cx16
        - xtpr
        - pdcm
        - dca
        - sse4_1
        - sse4_2
        - popcnt
        - lahf_lm
        - ida
        - dtherm
        - tpr_shadow
        - vnmi
        - flexpriority
        - ept
        - vpid
    cpu_model:
        Intel(R) Xeon(R) CPU           E5540  @ 2.53GHz
    cpuarch:
        x86_64
    disks:
        - sda
        - sr0
        - dm-0
        - dm-1
        - dm-2
        - dm-3
        - dm-4
        - dm-5
        - ram0
        - ram1
        - ram2
        - ram3
        - ram4
        - ram5
        - ram6
        - ram7
        - ram8
        - ram9
        - loop0
        - loop1
        - loop2
        - loop3
        - loop4
        - loop5
        - loop6
        - loop7
        - ram10
        - ram11
        - ram12
        - ram13
        - ram14
        - ram15
    dmz_system:
        False
    dns:
        ----------
        domain:
        ip4_nameservers:
            - <snip>
            - <snip>
            - <snip>
        ip6_nameservers:
        nameservers:
            - <snip>
            - <snip>
            - <snip>
        options:
        search:
        sortlist:
    domain:
    edge_proxy_server:
        True
    fqdn:
        <snip>
    fqdn_ip4:
        - 127.0.1.1
    fqdn_ip6:
    gid:
        0
    gpus:
        |_
          ----------
          model:
              MGA G200eW WPCM450
          vendor:
              unknown
    groupname:
        root
    host:
        <snip>
    hwaddr_interfaces:
        ----------
        <snip>
    id:
        <snip>
    init:
        upstart
    ip4_gw:
        <snip>
    ip4_interfaces:
        ----------
        <snip>
    ip6_gw:
        False
    ip6_interfaces:
        ----------
        <snip>
    ip_gw:
        True
    ip_interfaces:
        ----------
        <snip>
    ipv4:
        <snip>
    ipv6:
        - ::1
        - ::2
    kernel:
        Linux
    kernelrelease:
        3.18.68-1.mlos2.mwg.x86_64
    kernelversion:
        #1 SMP Thu Aug 31 14:09:36 CEST 2017
    locale_info:
        ----------
        defaultencoding:
            UTF-8
        defaultlanguage:
            en_US
        detectedencoding:
            UTF-8
    localhost:
        <snip>
    manufacturer:
        McAfee, Inc.
    master:
        <snip>
    mem_total:
        5806
    nodename:
        <snip>
    num_cpus:
        8
    num_gpus:
        1
    os:
        McAfee OS Server
    os_family:
        McAfee OS Server
    osarch:
        x86_64
    oscodename:
        Santiago
    osfinger:
        McAfee Linux OS Server-2
    osfullname:
        McAfee Linux OS Server
    osmajorrelease:
        2
    osrelease:
        2.2
    osrelease_info:
        - 2
        - 2
    path:
        /usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
    pid:
        26220
    productname:
        McAfee Appliance
    ps:
        ps -efHww
    pythonexecutable:
        /usr/bin/python2.7
    pythonpath:
        - /usr/bin
        - /usr/lib/python27.zip
        - /usr/lib64/python2.7
        - /usr/lib64/python2.7/plat-linux2
        - /usr/lib64/python2.7/lib-tk
        - /usr/lib64/python2.7/lib-old
        - /usr/lib64/python2.7/lib-dynload
        - /usr/lib64/python2.7/site-packages
        - /usr/lib/python2.7/site-packages
    pythonversion:
        - 2
        - 7
        - 13
        - final
        - 0
    saltpath:
        /usr/lib/python2.7/site-packages/salt
    saltversion:
        2018.3.1
    saltversioninfo:
        - 2018
        - 3
        - 1
        - 0
    serialnumber:
        <snip>
    server_id:
        <snip>
    shell:
        /bin/bash
    swap_total:
        16383
    uid:
        0
    username:
        root
    uuid:
        <snip>
    virtual:
        physical
    zfs_feature_flags:
        False
    zfs_support:
        False
    zmqversion:
        4.0.5
```
