Using this sls:

```
/tmp/teststuff:
  file.recurse:
    - source: salt://this
    - template: jinja
    - include_empty: True
```

If a binary file such as a .gif or .pdf exists in the directory tree then the following stacktrace occurs:

```
dasalt:
----------
    State: - file
    Name:      /tmp/teststuff
    Function:  recurse
        Result:    False
        Comment:   An exception occurred in this state: Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/salt/state.py", line 1234, in call
    *cdata['args'], **cdata['kwargs'])
  File "/usr/local/lib/python2.7/dist-packages/salt/states/file.py", line 1393, in recurse
    manage_file(dest, src)
  File "/usr/local/lib/python2.7/dist-packages/salt/states/file.py", line 1316, in manage_file
    **pass_kwargs)
  File "/usr/local/lib/python2.7/dist-packages/salt/states/file.py", line 886, in managed
    **kwargs
  File "/usr/local/lib/python2.7/dist-packages/salt/modules/file.py", line 1250, in get_managed
    **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/salt/utils/templates.py", line 59, in render_tmpl
    raise exc
UnicodeDecodeError: 'utf8' codec can't decode byte 0xe2 in position 10: invalid continuation byte

        Changes:   

Summary
------------
Succeeded: 0
Failed:    1
------------
Total:     1

```

Per thatch45, when using file.recurse and a binary file is encountered, or rather when a file stacktraces when attempting to templatize, then just copy the file to the minion and continue.

On the other hand, if using file.managed on a file that can't be templatized an error should be raised specifically describing that the file can't be templatized
