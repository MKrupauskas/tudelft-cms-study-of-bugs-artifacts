The git.current_branch function doesn't work on CentOS 6.x because the version of Git available (1.7.1) does not support the "--list" switch on git branch.

Based on the git project commit log it looks like support for the switch was added in version 1.7.8.

Can support be added for the older versions of Git? I haven't looked into it very much but  'git branch' seems to work the same way as 'git branch --list'. Although there is additional functionality in some cases: https://github.com/git/git/commit/cddd127b9afe3aa516aafdc38e9a8778f1340e0d

Here is the minion output:

```
2013-12-27 12:31:30,584 [salt.minion                                 ][INFO    ] User root Executing command git.current_branch with jid 20131227123150160777
2013-12-27 12:31:30,585 [salt.minion                                 ][DEBUG   ] Command details {'tgt_type': 'glob', 'jid': '20131227123150160777', 'tgt': 'dapp01lxv', 'ret': '', 'user': 'root', 'arg': ['/root/test'], 'fun': 'git.current_branch'}
2013-12-27 12:31:30,633 [salt.minion                                 ][DEBUG   ] Parsed args: ['/root/test']
2013-12-27 12:31:30,634 [salt.minion                                 ][DEBUG   ] Parsed kwargs: {}
2013-12-27 12:31:30,635 [salt.loaded.int.module.cmdmod               ][INFO    ] Executing command 'git branch --list | grep "^*\\ " | cut -d " " -f 2 | grep -v "(detached"' in directory '/root/test'
2013-12-27 12:31:30,664 [salt.loaded.int.module.cmdmod               ][DEBUG   ] stdout: 
2013-12-27 12:31:30,665 [salt.minion                                 ][INFO    ] Returning information for job: 20131227123150160777
```

Salt didn't return the error, but when you run the command given it returns an unknown option error.

```
# git branch --list | grep "^*\\ " | cut -d " " -f 2 | grep -v "(detached"
error: unknown option `list'
usage: git branch [options] [-r | -a] [--merged | --no-merged]
   or: git branch [options] [-l] [-f] <branchname> [<start-point>]
   or: git branch [options] [-r] (-d | -D) <branchname>
   or: git branch [options] (-m | -M) [<oldbranch>] <newbranch>
```
