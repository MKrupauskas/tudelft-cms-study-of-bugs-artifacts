When pillar data is updated pillar.get seems to still return the old data, while pillar.item returns the new data.  Pillar.get returns the outdated pillar information even after issuing a saltutil.refresh_pillar or a saltutil.clear_cache.  Restarting the minion seems to resolve the issue.

Tested with the following:
- salt 2015.2.0rc2
- CentOS 6.6 salt master
- @40 CentOS 6.2-6.6 minions
- @70 Windows minions (combination of workstations/servers

All minions show the problem when pillar data is changed. 

Inital pillar (example):

``` yaml
python:
  pip_server: http://pypi:80/
  Linux:
    packages:
      - croniter
      - python-dateutil
    temp_dir: /tmp
  Windows:
    packages:
      - croniter
      - python-dateutil
    temp_dir: "c:\\temp"
```

Updated pillar(example):

``` yaml
python:
  pip_server: http://pypi:80/
  Linux:
    versioned_packages:
      croniter: '0.3.5'
      python-dateutil: '2.3'
      virtualenv: '1.11.6'
    unversioned_packages:
    removed_packages:
    temp_dir: /tmp
  Windows:
    versioned_packages:
      croniter: '0.3.5'
      python-dateutil: '2.3'
      virtualenv: '1.11.6'
    temp_dir: "c:\\temp"
```

In looking at the code for pillar.get uses  **pillar** for pillar data where as pillar.item (indirectly) uses salt.pillar.get_pillar.  I did a quick patch locally to see if updating pillar.get to use items (same way pillar.item does) to get the pillar data fixes the issue.  It does.  Assuming nobody has issues with it, I'll submit a patch for this.
