It seems the addition of newline handling breaks our contents_pillar which is basically a list:

state:

```
silo-configuration:
  file:
    - managed
    - name: /opt/docker/silo.conf
    - contents_pillar: docker:{{ grains['host'] }}
```

pillar example:

```
docker:
  hostnameA:
    - id1
    - id2
    - id3
    - id5
  hostnameB:
    - id6
    - id8
```

This results in the following error message on a highstate after upgrading to 2015.8.5:

```
      ID: silo-configuration
Function: file.managed
    Name: /opt/docker/silo.conf
  Result: False
 Comment: An exception occurred in this state: Traceback (most recent call last):
            File "/usr/lib/python2.7/dist-packages/salt/state.py", line 1624, in call
              **cdata['kwargs'])
            File "/usr/lib/python2.7/dist-packages/salt/loader.py", line 1491, in wrapper
              return f(*args, **kwargs)
            File "/usr/lib/python2.7/dist-packages/salt/states/file.py", line 1477, in managed
              and not contents.endswith(os.linesep):
          AttributeError: 'list' object has no attribute 'endswith'
 Started: 11:20:59.979906
Duration: 2.101 ms
```

This worked fine in 2015.8.3 and earlier releases. I haven't tested 2015.8.4 because of the *_in regressions which would've affected our environment. It seems to be introduced in this change:

https://github.com/saltstack/salt/commit/e9a6d709f9e39c4141c1be4e615ca15c300173b1#diff-3b447dc835943beb1326f98f684fe783R1462

I tried the option contents_newline : False to maybe work around the issue but that resulted in a deployed file with 1 line of content:

```
  ['id1', 'id2', 'id3']
```

Before 2015.8.5 this file was deployed like this:

```
  id1
  id2
  id3
```

Version info:

```
Salt Version:
           Salt: 2015.8.5

Dependency Versions:
         Jinja2: 2.7.3
       M2Crypto: 0.21.1
           Mako: 1.0.0
         PyYAML: 3.11
          PyZMQ: 14.4.0
         Python: 2.7.9 (default, Mar  1 2015, 12:57:24)
           RAET: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.5
           cffi: 1.5.0
       cherrypy: 3.2.3
       dateutil: 2.2
          gitdb: 0.5.4
      gitpython: 0.3.2 RC1
          ioflo: 1.3.2
        libgit2: 0.23.2
        libnacl: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.2
    mysql-python: 1.2.3
      pycparser: 2.14
       pycrypto: 2.6.1
         pygit2: 0.23.3
   python-gnupg: Not Installed
          smmap: 0.8.2
        timelib: Not Installed

System Versions:
           dist: debian 8.3 
        machine: x86_64
        release: 3.16.0-4-amd64
         system: debian 8.3 
```

Update:

I've changed my pillar to be formatted like this:

```
docker:
  hostnameA: |
      id1
      id2
      id3
      id5
  hostnameB: |
      id6
      id8
```

And now it works correctly again. Thought I'd post this workaround here in case anyone else runs into this :smiley_cat:. Configuring the pillar like this might make more sense anyway (not even sure if the old setup was valid/supported, but it worked).
