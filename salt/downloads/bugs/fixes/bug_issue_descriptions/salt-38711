### Description of Issue/Question

After upgrading to 2016.11.1 I've noticed archive.extracted was causing fatal errors in the state execution with the debug log posted below.

After checking the logs on the minion I've also noticed this specific error being thrown every time I tried using _archive.extracted_ state:

```
The below paths (relative to /opt/java/jre/8u112/) exist, but are the incorrect type (i.e. file instead of directory or vice-versa).To proceed with extraction, set 'force' to True. Note that this will remove these paths before extracting.
 
- man/ja

```

 

The aforementioned file is actually a symlink that points to a folder in the same folder level:

> lrwxrwxrwx. 1 root root   11 Sep 22 22:20 **ja -> ja_JP.UTF-8**
> drwxr-xr-x. 3 root root   17 Sep 22 22:20 ja_JP.UTF-8
> drwxr-xr-x. 2 root root 4096 Sep 22 22:20 man1

Once I removed the symlink from the filesystem, the state executed successfully.

### Setup
CentOS 7.3 x86_64 (Server and Minion)

### Steps to Reproduce Issue

Trying to extract the Oracle JDK 8u112 which has a symlink in the folder _man_

```
java.jre-archive:
  file.directory:
    - name: {{ java.home }}/{{ java.version }}
    - user: root
    - group: root
    - makedirs: True
    - mode: 755
    - require_in:
      - file: java.jre-home-dir
  archive.extracted:
    - name: {{ java.home }}/{{ java.version }}
    - source: salt://{{ slspath }}/files/server-jre-{{ java.version }}-linux-x64.tar.gz
    - options: --strip 1
    - list_options: --strip 1
    - enforce_ownership_on: {{ java.home }}/{{ java.version }}
    - enforce_toplevel: False
    - user: root
    - group: root
    - require:
      - file: java.jre-archive

```

```
 The minion function caused an exception: Traceback (most recent call last):
       File "/usr/lib/python2.7/site-packages/salt/minion.py", line 1412, in _thread_return
         return_data = executor.execute()
       File "/usr/lib/python2.7/site-packages/salt/executors/direct_call.py", line 28, in execute
         return self.func(*self.args, **self.kwargs)
       File "/usr/lib/python2.7/site-packages/salt/modules/state.py", line 544, in apply_
         return highstate(**kwargs)
       File "/usr/lib/python2.7/site-packages/salt/modules/state.py", line 816, in highstate
         orchestration_jid=orchestration_jid)
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 3454, in call_highstate
         return self.state.call_high(high, orchestration_jid)
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 2294, in call_high
         ret = dict(list(disabled.items()) + list(self.call_chunks(chunks).items()))
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 1810, in call_chunks
         running = self.call_chunk(low, running, chunks)
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 2084, in call_chunk
         running = self.call_chunk(chunk, running, chunks)
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 2095, in call_chunk
         running = self.call_chunk(low, running, chunks)
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 2095, in call_chunk
         running = self.call_chunk(low, running, chunks)
       
         ... (truncating the log output to keep it short, the above error line repeats like a thousand times)
       
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 2095, in call_chunk
         running = self.call_chunk(low, running, chunks)
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 1992, in call_chunk
         low = self._mod_aggregate(low, running, chunks)
       File "/usr/lib/python2.7/site-packages/salt/state.py", line 762, in _mod_aggregate
         agg_opt = self.functions['config.option']('state_aggregate')
       File "/usr/lib/python2.7/site-packages/salt/loader.py", line 1086, in __getitem__
         func = super(LazyLoader, self).__getitem__(item)
       File "/usr/lib/python2.7/site-packages/salt/utils/lazy.py", line 91, in __getitem__
         if self._missing(key):
     RuntimeError: maximum recursion depth exceeded

```

_

### Versions Report

```
Salt Version:
           Salt: 2016.11.1
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: 3.2.2
       dateutil: 2.5.3
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.7.2
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
         Python: 2.7.5 (default, Nov  6 2016, 00:28:07)
   python-gnupg: Not Installed
         PyYAML: 3.11
          PyZMQ: 15.3.0
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.1.4
 
System Versions:
           dist: centos 7.3.1611 Core
        machine: x86_64
        release: 3.10.0-514.2.2.el7.x86_64
         system: Linux
        version: CentOS Linux 7.3.1611 Core
```