**Description**
One of my salt minions has its key placed in the denied list as soon as I use a salt-call command (in my case `test.ping`). I can still run salt commands to the minion from the master.
When running a salt-call command I get the following message:
```
[CRITICAL] The Salt Master has rejected this minion's public key!
To repair this issue, delete the public key for this minion on the Salt Master and restart this minion.
Or restart the Salt Master in open mode to clean out the keys. The Salt Minion will now exit.
```

The minion's key is also still in the accepted keys list, I've checked both keys, they are identical.
When I remove the denied key (or both the accepted and denied key), restart the minion and accept its key again, all seems fine. As soon as I run a salt-call command on the minion again though, I get the error message as above and it's key also shows up in the denied list. I can at this point still run salt commands to the minion from the master.


**Setup**
Both master and minion running 3000.5 and ubuntu 18.04.

**Versions Report**
```
Salt Version:
           Salt: 3000.5

Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.6.1
      docker-py: Not Installed
          gitdb: 2.0.3
      gitpython: 2.1.8
         Jinja2: 2.10
        libgit2: 0.26.0
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: 0.26.2
         Python: 2.7.17 (default, Sep 30 2020, 13:38:04)
   python-gnupg: 0.4.1
         PyYAML: 3.12
          PyZMQ: 16.0.2
          smmap: 2.0.3
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.2.5

System Versions:
           dist: Ubuntu 18.04 bionic
         locale: UTF-8
        machine: x86_64
        release: 4.15.0-134-generic
         system: Linux
        version: Ubuntu 18.04 bionic
```

