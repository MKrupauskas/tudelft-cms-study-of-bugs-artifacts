**Description**
The following command will fail to run the PowerShell script successfully:
```
salt-call cmd.script "salt://windows/files/TestScript.ps1?saltenv=my.env" shell=powershell
```

It fails because the temp file is created in `cmdmod.py` by specifying `suffix=os.path.splitext(source)[1]` which will deduce `.env` as the extension, when it should conceptually be finding `.ps1`. When PowerShell is then run on a file with a non `.ps1` extension, it fails because PowerShell is picky about file extensions.

In this specific case I was able to workaround this issue by passing `saltenv=my.env` instead of using the query parameter, but that's not always useful.

**Versions Report**
```
salt-call --versions-report
Salt Version:
           Salt: 3002

Dependency Versions:
           cffi: 1.12.2
       cherrypy: 17.4.1
       dateutil: 2.8.0
      docker-py: Not Installed
          gitdb: 2.0.5
      gitpython: Not Installed
         Jinja2: 2.10.1
        libgit2: Not Installed
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 1.0.0
   mysql-python: Not Installed
      pycparser: 2.19
       pycrypto: Not Installed
   pycryptodome: 3.9.8
         pygit2: Not Installed
         Python: 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)]
   python-gnupg: 0.4.4
         PyYAML: 5.3.1
          PyZMQ: 18.0.1
          smmap: 2.0.5
        timelib: 0.2.4
        Tornado: 4.5.3
            ZMQ: 4.3.1

System Versions:
           dist:
         locale: cp1252
        machine: AMD64
        release: 2019Server
         system: Windows
        version: 2019Server 10.0.17763 SP0
```
