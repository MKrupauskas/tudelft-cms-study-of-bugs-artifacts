This is using the 0.16.3 package on Windows, with a 0.16.2 server, but I don't think it makes a difference.

If a require or watch clause in a state has a spelling error, the state run on the minion produces an exception:

```
Traceback (most recent call last):
  File "<string>", line 6, in <module>
  File "__main__.py", line 726, in <module>
  File "__main__.py", line 332, in bootstrap
  File "__main__.py", line 359, in chainload
  File "__main__.py", line 715, in _chainload
  File "__main__.py", line 128, in <module>
  File "__main__salt-call__.py", line 14, in <module>
  File "salt/scripts.py", line 76, in salt_call
  File "salt/cli/__init__.py", line 265, in run
  File "salt/cli/caller.py", line 132, in run
  File "salt/cli/caller.py", line 73, in call
  File "salt/modules/state.py", line 288, in sls
  File "salt/state.py", line 1532, in call_high
  File "salt/state.py", line 1275, in call_chunks
  File "salt/state.py", line 1387, in call_chunk
  File "salt/state.py", line 1319, in check_requisite
TypeError: 'NoneType' object is not iterable
```
