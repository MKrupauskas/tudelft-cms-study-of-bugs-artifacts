Directory structure looks like this

<pre>
/srv/salt
     /scripts
     /scripts/test.sh
</pre>


Invocation on master:

```
root@salt:~# salt 'playp*' cmd.script salt://scripts/test.sh
playpen-andrej.example.test:
    ----------
    pid:
        3180
    retcode:
        0
    stderr:

    stdout:
```

MINION:

```
[TRACE   ] Added carbon.returner to returner
[INFO    ] Minion is starting as user 'root'
[DEBUG   ] Minion "playpen-andrej.example.test" trying to tune in
[DEBUG   ] Minion PUB socket URI: ipc:///var/run/salt/minion/minion_event_a6829059552ca48015ac142fc9193efb_pub.ipc
[DEBUG   ] Minion PULL socket URI: ipc:///var/run/salt/minion/minion_event_a6829059552ca48015ac142fc9193efb_pull.ipc
[DEBUG   ] Setting zmq_reconnect_ivl to '100ms'
[DEBUG   ] Setting zmq_reconnect_ivl_max to '5100ms'
[DEBUG   ] Running scheduled job: __mine_interval
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[INFO    ] User sudo_andrej Executing command cmd.script with jid 20131004143603829997
[DEBUG   ] Command details {'tgt_type': 'glob', 'jid': '20131004143603829997', 'tgt': 'playp*', 'ret': '', 'user': 'sudo_andrej', 'arg': ['salt://scripts/test.sh'], 'fun': 'cmd.script'}
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[INFO    ] Fetching file 'salt://scripts/test.sh'
[INFO    ] Executing command '/tmp/tmpUjfa_Z' in directory '/root'
[INFO    ] Returning information for job: 20131004143603829997
```

Using inotifywait to watch /tmp on the minion it appears that two files get created, populated and deleted during the minions run, but nothing inside the script (for obvious reasons) gets executed.

I think that this is a bug. :)
