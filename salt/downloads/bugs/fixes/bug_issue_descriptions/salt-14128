## Steps to reproduce
1. Install the minion and masters but not run them. (i.e. this happens only if minion was just installed and didn't receive any command from the master).
2. Configure the minion to listen 2 masters (A is accessible and N is not).

```
master:
  - A
  - N
```
1. Start the minion and masters.
2. `master_type: failover` changes nothing (UPD: I know that it changes semantics of the masters list; I've tried to achieve my goal, see below).
## Actual result
1. Master's commands are ignored (`Minion did not return`).
2. `/var/log/salt/minion` contains minion's complains about disappearance of the host N:

```
2014-07-10 17:17:56,812 [salt.utils       ][ERROR   ] This master address: 'N' was previously resolvable but now fails to resolve! The previously resolved ip addr will continue to be used
2014-07-10 17:17:56,815 [salt.minion      ][WARNING ] Master hostname: N not found. Retrying in 30 seconds
```
## Expected result

Minion ignores absent masters and listen existing ones.
## Environment

```
salt --versions-report
           Salt: 2014.1.6
         Python: 2.7.3 (default, Mar 13 2014, 11:03:55)
         Jinja2: 2.6
       M2Crypto: 0.21.1
 msgpack-python: 0.3.0
   msgpack-pure: Not Installed
       pycrypto: 2.6
         PyYAML: 3.10
          PyZMQ: 13.1.0
            ZMQ: 4.0.4
```

```
salt-minion --versions-report
           Salt: 2014.1.6
         Python: 2.7.6 (default, Nov 21 2013, 15:55:38) [GCC]
         Jinja2: 2.7.2
       M2Crypto: 0.22
 msgpack-python: 0.4.0
   msgpack-pure: Not Installed
       pycrypto: 2.6.1
         PyYAML: 3.10
          PyZMQ: 14.0.0
            ZMQ: 4.0.4
```
## Why do I need this

We have a central server with the master installed and the range of disributed units (connected only via internet) that sometimes doesn't have internet connection. To administrate them localy, I can bring my laptop with the master installed. The laptop is named N and it could be turned off at the moment of the first run of a minion.

Am I doing something wrong?
