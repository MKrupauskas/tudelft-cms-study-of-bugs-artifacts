The problem is that Salt is getting grains 2 times on startup, which sounds unnecessary. It gets grains on `setup_extended_logging` and Minion init. In our case, we don't have any extended logging enabled, but the way the code is written, grains are loaded anyway. To fix this, I think there are a few options:
- Add a `disable_external_logging` config token
- Implement a function `external_logging_available` that could:
  - Somehow call `__virtual__` on all the external handlers without loading them to check if there are any (not sure if it's possible)
  - Or check `__opts__` for the different config tokens for external logging

This is important since in our use case it will be common to have minions running in private networks (not registered with DNS). The grains load operation takes a long time since socket.getfqdn() is called (and it times-out before it defaults to what gethostname returns).  So, reducing the times grains are loaded is important.

After talking with @cachedout , seems like the most robust solution is to check `__opts__`. Any other opinions or possible solutions?
