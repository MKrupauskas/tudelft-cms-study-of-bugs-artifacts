### Description of Issue/Question
When using a syslog log_file location in your config that does not exist you will see a stacktrace telling you the file cannot be found:

```
--- Logging error ---                                                                                                                                                                   
Traceback (most recent call last):                                                                                                                                                      
  File "/usr/lib/python3.6/logging/handlers.py", line 936, in emit                                                                                                                      
    self.socket.send(msg)                                                                                                                                                               
OSError: [Errno 9] Bad file descriptor                                                                                                                                                  
                                                                                                                                                                                        
During handling of the above exception, another exception occurred:                                                                                                                     
                                                                                                                                                                                        
Traceback (most recent call last):                                                                                                                                                      
  File "/usr/lib/python3.6/logging/handlers.py", line 857, in _connect_unixsocket                                                                                                       
    self.socket.connect(address)                                                                                                                                                        
FileNotFoundError: [Errno 2] No such file or directory                                                                                                                                  
                                                                                                                                                                                        
During handling of the above exception, another exception occurred:                                                                                                                     
                                                                                                                                                                                        
Traceback (most recent call last):                                                                                                                                                      
  File "/usr/lib/python3.6/logging/handlers.py", line 939, in emit                                                                                                                      
    self._connect_unixsocket(self.address)                                                                                                                                              
  File "/usr/lib/python3.6/logging/handlers.py", line 868, in _connect_unixsocket                                                                                                       
    self.socket.connect(address)                                                                                                                                                        
FileNotFoundError: [Errno 2] No such file or directory
```



### Setup
1. syslog is installed and running
2. minion config:
```
log_file: file:///dev/log2/LOG_LOCAL3
```
(make sure its a file that does not exist)
3. `salt-call --local cmd.run "echo foo" -lwarning`

and you will see the stacktrace. 

This works just fine on python2 and exits out with an error:

```
  salt git:(e745639763) sudo salt-call --local cmd.run "echo foo" -lwarning
[ERROR   ] Failed to setup the Syslog logging handler: [Errno 2] No such file or directory
  salt git:(e745639763) 
```

python3:

```
salt-call --local cmd.run "echo foo" -lwarning
--- Logging error ---
Traceback (most recent call last):
  File "/usr/lib/python3.6/logging/handlers.py", line 936, in emit
    self.socket.send(msg)
OSError: [Errno 9] Bad file descriptor

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.6/logging/handlers.py", line 857, in _connect_unixsocket
    self.socket.connect(address)
FileNotFoundError: [Errno 2] No such file or directory

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.6/logging/handlers.py", line 939, in emit
    self._connect_unixsocket(self.address)
  File "/usr/lib/python3.6/logging/handlers.py", line 868, in _connect_unixsocket
    self.socket.connect(address)
FileNotFoundError: [Errno 2] No such file or directory
Call stack:
  File "/usr/bin/salt-call", line 6, in <module>
    exec(compile(open(__file__).read(), __file__, 'exec'))
  File "/home/ch3ll/git/salt/scripts/salt-call", line 11, in <module>
    salt_call()
  File "/home/ch3ll/git/salt/salt/scripts.py", line 400, in salt_call
    client.run()
  File "/home/ch3ll/git/salt/salt/cli/call.py", line 57, in run
    caller.run()
  File "/home/ch3ll/git/salt/salt/cli/caller.py", line 150, in run
    _retcode=ret.get('retcode', 0))
  File "/home/ch3ll/git/salt/salt/output/__init__.py", line 94, in display_output
    display_data = try_printout(data, out, opts, **kwargs)
  File "/home/ch3ll/git/salt/salt/output/__init__.py", line 41, in try_printout
    printout = get_printout(out, opts)(data, **kwargs)
  File "/home/ch3ll/git/salt/salt/output/__init__.py", line 190, in get_printout
    if out not in outputters:
  File "/usr/lib/python3.6/_collections_abc.py", line 666, in __contains__
    self[key]
  File "/home/ch3ll/git/salt/salt/loader.py", line 1025, in __getitem__
    return self._dict[key + self.suffix]
  File "/home/ch3ll/git/salt/salt/loader.py", line 1142, in __getitem__
    func = super(LazyLoader, self).__getitem__(item)
  File "/home/ch3ll/git/salt/salt/utils/lazy.py", line 100, in __getitem__
    log.debug('LazyLoaded %s', key)
  File "/usr/lib/python3.6/logging/__init__.py", line 1294, in debug
    self._log(DEBUG, msg, args, **kwargs)
  File "/home/ch3ll/git/salt/salt/log/setup.py", line 328, in _log
    self, level, msg, args, exc_info=exc_info, extra=extra
Message: 'LazyLoaded %s'
Arguments: ('nested.output',)
local:
    foo
```

I found the reason is from this PR: https://github.com/python/cpython/pull/663  in python3 we are now squashing the error. The seems to be intended behavior because syslog service creates this file on startup and it would be expected behavior to wait for the service to startup to create the file.

We could try to discover this ourselves in setup.py:

```
diff --git a/salt/log/setup.py b/salt/log/setup.py
index 686464d..2f30508 100644
--- a/salt/log/setup.py
+++ b/salt/log/setup.py
@@ -651,6 +651,12 @@ def setup_logfile_logger(log_path, log_level='error', log_format=None,
             # There's not socktype support on python versions lower than 2.7
             syslog_opts.pop('socktype', None)
 
+        if parsed_log_path.scheme == 'file' and sys.version_info >= (3, 5):
+            if not os.path.exists(syslog_opts['address']):
+                raise RuntimeError(
+                    'LogFile {0} does not exist'.format(syslog_opts['address'])
+                )
+
         try:
             # Et voil√°! Finally our syslog handler instance
             handler = SysLogHandler(**syslog_opts)
```

but that would only be re-adding behavior that python3 syslog handlers is squashing on purpose. Any ideas on possible fix? ping @s0undt3ch i know you have done a lot of work around the salts logger. Any ideas?

note: I think this is the cause of these test failures on macosx: https://github.com/saltstack/salt-jenkins/issues/936


### Versions Report
shoudl affect all python3 supported versions:

python3:

```
  salt git:(e745639763) salt --versions-report
Salt Version:
           Salt: 2018.3.0
 
Dependency Versions:
           cffi: 1.11.2
       cherrypy: Not Installed
       dateutil: 2.6.1
      docker-py: 2.7.0
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.10
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: 1.3.12
      pycparser: 2.18
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 3.6.4 (default, Dec 23 2017, 19:07:07)
   python-gnupg: Not Installed
         PyYAML: 3.12
          PyZMQ: 16.0.3
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.2
            ZMQ: 4.1.6
 
System Versions:
           dist: arch Manjaro Linux
         locale: UTF-8
        machine: x86_64
        release: 4.11.12-1-MANJARO
         system: Linux
        version: arch Manjaro Linux
```

python2:

```
Salt Version:
           Salt: 2018.3.0
 
Dependency Versions:
           cffi: 1.11.2
       cherrypy: Not Installed
       dateutil: 2.6.0
      docker-py: 2.4.2
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: 1.7.4
         Jinja2: 2.9.6
        libgit2: 0.26.0
        libnacl: 1.6.1
       M2Crypto: 0.27.0
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: 1.2.5
      pycparser: 2.18
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: 0.26.2
         Python: 2.7.14 (default, Sep 20 2017, 01:25:59)
   python-gnupg: Not Installed
         PyYAML: 3.12
          PyZMQ: 16.0.2
           RAET: 0.6.8
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.1
            ZMQ: 4.1.6
 
System Versions:
           dist:   
         locale: UTF-8
        machine: x86_64
        release: 4.11.12-1-MANJARO
         system: Linux
        version: Not Installed
```


