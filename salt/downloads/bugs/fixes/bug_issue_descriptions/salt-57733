**Description**
**IMHO THIS IS A CRITICAL BUG**
If there's an invalid key in /etc/salt/pki/minion/minion.pub (ie. empty file or garbage) the key can still be accepted but the salt master is trying to load the key anyway and fails with

```
2020-06-19 15:54:20,621 [salt.transport.mixins.auth:434 ][INFO    ][20758] Authentication accepted from <host>
2020-06-19 15:54:20,621 [salt.crypt       :225 ][DEBUG   ][20758] salt.crypt.get_rsa_pub_key: Loading public key
2020-06-19 15:54:20,624 [tornado.application:356 ][ERROR   ][20758] Future <salt.ext.tornado.concurrent.Future object at 0x7fae3cec2e80> exception was never retrieved: Traceback (most recent call last):
  File "/usr/lib/python3.6/site-packages/salt/ext/tornado/gen.py", line 309, in wrapper
    yielded = next(result)
  File "/usr/lib/python3.6/site-packages/salt/transport/zeromq.py", line 860, in handle_message
    stream.send(self.serial.dumps(self._auth(payload["load"])))
  File "/usr/lib/python3.6/site-packages/salt/transport/mixins/auth.py", line 462, in _auth
    pub = salt.crypt.get_rsa_pub_key(pubfn)
  File "/usr/lib/python3.6/site-packages/salt/crypt.py", line 230, in get_rsa_pub_key
    key = RSA.load_pub_key_bio(bio)
  File "/usr/lib64/python3.6/site-packages/M2Crypto/RSA.py", line 444, in load_pub_key_bio
    rsa_error()
  File "/usr/lib64/python3.6/site-packages/M2Crypto/RSA.py", line 333, in rsa_error
    raise RSAError(Err.get_error_message())
M2Crypto.RSA.RSAError: cert already in hash table
```
or
```
2020-06-18 09:53:10,945 [tornado.application:345 ][ERROR   ][1293] Future <salt.ext.tornado.concurrent.Future object at 0x7f7e3d6f2eb8> exception was never retrieved: Traceback (most recent call last):
  File "/usr/lib/python3.6/site-packages/salt/ext/tornado/gen.py", line 309, in wrapper
    yielded = next(result)
  File "/usr/lib/python3.6/site-packages/salt/transport/zeromq.py", line 766, in handle_message
    stream.send(self.serial.dumps(self._auth(payload['load'])))
  File "/usr/lib/python3.6/site-packages/salt/transport/mixins/auth.py", line 436, in _auth
    pub = salt.crypt.get_rsa_pub_key(pubfn)
  File "/usr/lib/python3.6/site-packages/salt/crypt.py", line 213, in get_rsa_pub_key
    key = RSA.load_pub_key_bio(bio)
  File "/usr/lib64/python3.6/site-packages/M2Crypto/RSA.py", line 444, in load_pub_key_bio
    rsa_error()
  File "/usr/lib64/python3.6/site-packages/M2Crypto/RSA.py", line 333, in rsa_error
    raise RSAError(Err.get_error_message())
M2Crypto.RSA.RSAError: no start line
```
The really bad thing about this is that everytime this happens it appears that a worker thread becomes unusable/unresponsive. So after a short while the whole saltmaster is not responding anymore and every job fails with 

```
[root@saltmaster-dev /]# salt "*" state.highstate
[DEBUG   ] Configuration file path: /etc/salt/master
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Including configuration from '/etc/salt/master.d/b1.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/b1.conf
[DEBUG   ] Including configuration from '/etc/salt/master.d/extpillar-foreman.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/extpillar-foreman.conf
[DEBUG   ] Including configuration from '/etc/salt/master.d/extpillar-redis.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/extpillar-redis.conf
[DEBUG   ] Including configuration from '/etc/salt/master.d/fileserver.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/fileserver.conf
[DEBUG   ] Including configuration from '/etc/salt/master.d/reactor.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/reactor.conf
[DEBUG   ] Including configuration from '/etc/salt/master.d/salt-api.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/salt-api.conf
[DEBUG   ] Including configuration from '/etc/salt/master.d/sdb.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/sdb.conf
[DEBUG   ] LazyLoaded yaml.get
[DEBUG   ] LazyLoaded yaml.get
[DEBUG   ] LazyLoaded yaml.get
[DEBUG   ] LazyLoaded yaml.get
[DEBUG   ] LazyLoaded yaml.get
[DEBUG   ] Missing configuration file: /root/.saltrc
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/master', 'saltmaster-dev_master', 'tcp://127.0.0.1:4506', 'clear')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://127.0.0.1:4506
[DEBUG   ] Trying to connect to: tcp://127.0.0.1:4506
[DEBUG   ] SaltReqTimeoutError, retrying. (1/3)
[DEBUG   ] SaltReqTimeoutError, retrying. (2/3)
[DEBUG   ] SaltReqTimeoutError, retrying. (3/3)
[DEBUG   ] Re-init ZMQ socket: Message timed out
[DEBUG   ] Trying to connect to: tcp://127.0.0.1:4506
[ERROR   ] Message timed out
[DEBUG   ] Closing AsyncZeroMQReqChannel instance
[DEBUG   ] Closing IPCMessageSubscriber instance
[DEBUG   ] LazyLoaded nested.output
Salt request timed out. The master is not responding. You may need to run your command with `--async` in order to bypass the congested event bus. With `--async`, the CLI tool will print the job id (jid) and exit immediately without listening for responses. You can then use `salt-run jobs.lookup_jid` to look up the results of the job in the job cache later.
```
After restarting the saltmaster it is responding for a short time, until the bug hits again. So a single minion can render a master unusable which is quite severe.

**Setup**
Salt 3001, CentOS7

**Steps to Reproduce the behavior**
Setup minion, stop minion, put garbage or nothing at all into /etc/salt/pki/minion/minion.pub
Start minion, accept key on the master. Run a few actions like triggering states or so. Watch saltmaster become completely unresponsive.

**Expected behavior**
Salt should validate minion pubkeys prior to accepting them

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
[root@saltmaster-dev /]# salt --versions-report
Salt Version:
           Salt: 3001

Dependency Versions:
           cffi: 1.14.0
       cherrypy: unknown
       dateutil: Not Installed
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
         Jinja2: 2.11.1
        libgit2: 1.0.0
       M2Crypto: 0.35.2
           Mako: Not Installed
   msgpack-pure: Not Installed
msgpack-python: 0.6.2
   mysql-python: Not Installed
      pycparser: 2.14
       pycrypto: Not Installed
   pycryptodome: Not Installed
         pygit2: 1.2.1
         Python: 3.6.8 (default, Apr  2 2020, 13:34:55)
   python-gnupg: Not Installed
         PyYAML: 3.13
          PyZMQ: 17.0.0
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.1.4

System Versions:
           dist: centos 7 Core
         locale: UTF-8
        machine: x86_64
        release: 3.10.0-1127.8.2.el7.x86_64
         system: Linux
        version: CentOS Linux 7 Core
```
</details>

**Additional context**
Add any other context about the problem here.
