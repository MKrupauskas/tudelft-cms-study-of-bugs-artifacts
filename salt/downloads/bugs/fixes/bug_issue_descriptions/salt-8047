A minion job process running a custom module will randomly pause when executing. This module parses a INI file for files to download through HTTP in order to update the deployed version of our application. HTTP is utilized since the a patch can vary in size from 5MB to 5GB of data, with the data fetched from a CDN.

The minion jobs are launched from a master server with: salt '*' state.highstate commands and are not run on startup. The minion job process always pauses in the middle of downloading the files, going to 0% CPU utilization over time (a working job process will take 20-40% of a single core). Usually I am able to "wake-up" the minion job process by issuing a salt 'SERVERNAME' saltutil.term_job <job_id>, but if that fails to wake up the process I must kill the job and restart it for that server.

For servers exhibiting this issue I have looked at network traffic using "iftop" to see if job is attempting to download from the CDN albeit at a very slow rate, which is not the case. The issue exhibits itself relatively quickly (within approximately 15s of starting the job from the master), with the problem servers never being consistent. Server A can be fine for one patch, then display issues for the next.

I also submitted this issue to the salt-users group, https://groups.google.com/forum/#!topic/salt-users/Qov2SL-5P7s
