A pkg.installed with an http location with a port defined causes a stacktrace on Windows when salt attempts to cache the file because it save the url as the path, which includes the ':', which is illegal on ntfs

Here's the stacktrace:

```
dev-app1.all.local:
----------
          ID: AllServices
    Function: pkg.installed
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "salt/state.py", line 1378, in call
                File "salt/states/pkg.py", line 518, in installed
                File "salt/modules/win_pkg.py", line 540, in install
                File "salt/modules/cp.py", line 310, in cache_file
                File "salt/fileclient.py", line 143, in cache_file
                File "salt/fileclient.py", line 521, in get_url
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 150, in makedirs
                File "os.py", line 157, in makedirs
              WindowsError: [Error 267] The directory name is invalid: 'c:\\salt\\var\\cache\\salt\\minion\\extrn_files\\base\\all-build.all.com:8080'
     Changes:
```

I was considering ways to deal with this. We could keep a list of common illegal characters and replace them with an underscore. The only problem there is keeping a list that would work across the various filesystems.

A little googling gave me this:  http://stackoverflow.com/a/295150/114866

I kind of like it.  It makes it filesystem safe and also is reversible. We wouldn't have the reversibility if we used md5, obviously.

I haven't had a moment to dive into the code that lays down the files, but want to get some feedback.  Is either of the above solutions better? Should this be something that happens across all platforms, or should I just make this fix for Windows?

Thanks.
