**Description**
During a state.apply the gpg-agent process on the master runs at 100% CPU. Especially when doing an apply on many minions this extends the run time so that the run mostly times out ("Minion did not return"). I don't know if this is expected behaviour and if something can be done to fix/optimize it...
(As a side note: for --async runs this however is a great way to tell if the run finished by watching at htop)

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
Salt Version:
          Salt: 3002.2
 
Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: 2.6.1
     docker-py: Not Installed
         gitdb: 2.0.3
     gitpython: 2.1.8
        Jinja2: 2.10
       libgit2: 0.26.0
      M2Crypto: 0.35.2
          Mako: Not Installed
       msgpack: 0.5.6
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: Not Installed
      pycrypto: 2.6.1
  pycryptodome: 3.4.7
        pygit2: 0.26.2
        Python: 3.6.9 (default, Oct  8 2020, 12:12:24)
  python-gnupg: 0.4.5
        PyYAML: 3.12
         PyZMQ: 17.1.2
         smmap: 2.0.3
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.2.5
 
System Versions:
          dist: ubuntu 18.04 Bionic Beaver
        locale: UTF-8
       machine: x86_64
       release: 4.15.0-122-generic
        system: Linux
       version: Ubuntu 18.04 Bionic Beaver
```
</details>

**Additional context**
We have well over 100 minions in our setup.
For other commands (such as "salt-run manage.versions") the gpg-agent CPU usage is 0%.
