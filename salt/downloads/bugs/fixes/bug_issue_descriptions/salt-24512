This use case involves an AUFS layered '/etc/hosts' (which is the default case in docker) and where trying to manage blocks inside with blockreplace, we cant as blockreplace use atomicopen, and atomicopen moves the result file in place of the new one instead of overwriting it directly (which would have worked).

```
          ID: makina-prepend-etc-hosts-management
    Function: file.blockreplace
        Name: /etc/hosts
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "/salt-venv/mastersalt/src/salt/salt/state.py", line 1591, in call
                  **cdata['kwargs'])
                File "/salt-venv/mastersalt/src/salt/salt/states/file.py", line 2787, in blockreplace
                  show_changes=show_changes
                File "/salt-venv/mastersalt/src/salt/salt/modules/file.py", line 1991, in blockreplace
                  fh_.close()
                File "/salt-venv/mastersalt/src/salt/salt/utils/atomicfile.py", line 120, in close
                  atomic_rename(self._tmp_filename, self._filename)
              OSError: [Errno 16] Device or resource busy
     Started: 22:47:33.094460
    Duration: 2.262 ms
```
