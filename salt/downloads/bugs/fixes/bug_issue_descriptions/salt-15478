Specifying a requirement on an sls that includes other states does not cause the requiring state to wait for included states to finish before executing.

```
# a.sls
include:
  - a.common

do_thingy:
   ...
```

```
# b.sls
include:
  - a

some_thing:
  cmd.run:
    ...
    # executes after do_thingy, ignores a.common
    - require:
      - sls: a
```

Is this the intended functionality?
