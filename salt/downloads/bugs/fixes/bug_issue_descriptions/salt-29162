If you're on Tornado backend, it just catches the HTTPError exception and returns with no exception:

```
        except tornado.httpclient.HTTPError as exc:
            ret['status'] = exc.code
            ret['error'] = str(exc)
            return ret
```

with requests backend, it just propagates exceptions:

https://github.com/saltstack/salt/blob/develop/salt/utils/http.py#L297

```
        result = sess.request(
            method, url, params=params, data=data, **req_kwargs
        )
        result.raise_for_status()
```

I think this needs to be consistently dealt. Wether the library should just propagates exceptions or circumvent them is up to the implementor, but that should be consistent. In my opinion, we should try to not throw exceptions for HTTP errors and just return responses.
