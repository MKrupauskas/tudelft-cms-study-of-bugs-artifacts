ping @gtmanfred

Today when using salt-cloud out of the develop branch with Rackspace I started getting the following:

```
root@raring64:/etc/salt# salt-cloud -p openstack_512 t1
[INFO    ] salt-cloud starting
[INFO    ] Creating Cloud VM t1
[ERROR   ] There was a profile error: 404 Not Found 404 Not Found

The resource could not be found.
Traceback (most recent call last):
  File "/vagrant/salt/salt/cloud/cli.py", line 227, in run
    self.config.get('names')
  File "/vagrant/salt/salt/cloud/__init__.py", line 1231, in run_profile
    ret[name] = self.create(vm_)
  File "/vagrant/salt/salt/cloud/__init__.py", line 1108, in create
    output = self.clouds[func](vm_)
  File "/vagrant/salt/salt/cloud/clouds/openstack.py", line 468, in create
    for idx in pool.list_floating_ips():
  File "/usr/local/lib/python2.7/dist-packages/libcloud/compute/drivers/openstack.py", line 2224, in list_floating_ips
    self.connection.request('/os-floating-ips').object)
  File "/usr/local/lib/python2.7/dist-packages/libcloud/compute/drivers/openstack.py", line 157, in request
    method=method, headers=headers)
  File "/usr/local/lib/python2.7/dist-packages/libcloud/common/openstack.py", line 575, in request
    return super(OpenStackBaseConnection, self).request(**kwargs)
  File "/usr/local/lib/python2.7/dist-packages/libcloud/common/base.py", line 675, in request
    response = responseCls(**kwargs)
  File "/usr/local/lib/python2.7/dist-packages/libcloud/compute/drivers/openstack.py", line 1004, in __init__
    super(OpenStack_1_1_Response, self).__init__(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/libcloud/common/base.py", line 112, in __init__
    raise Exception(self.parse_error())
Exception: 404 Not Found 404 Not Found

The resource could not be found.
```

After much digging it appears that Rackspace returns a 404 if you request floating ip pools when there are none setup (as opposed to just returning an empty set).  I wrapped that call in openstack.py with a try/except that checks for the 404, and this fixes the problem.  @techhat asked me to ping you on this issue since he says you were working on floating ip support.  I'm generating PR#12270  to add the try/except, you can take a look and see if it lines up OK with your work.
