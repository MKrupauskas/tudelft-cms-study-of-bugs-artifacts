### Description of Issue/Question

while running "salt-ssh -i --rosterfile ./test.roster '*' test.ping" I double tapped the enter key while trying to answer the "Permission denied for host examplehostname, do you want to deploy the salt-ssh key?" question and it threw the below error - I had to restart the command from the beginning and since the test.roster file isn't short it was quite the time suck. 

### Setup
(Please provide relevant configs and/or SLS files (Be sure to remove sensitive info).)

regular roster file setup like the examples in my users home directory - contains just hostname and IP (example below) - The server where salt-ssh is being run is a standalone salt-ssh server, there is no salt-master installed

examplehost:
  host:  192.168.1.100

### Steps to Reproduce Issue
(Include debug logs if possible and relevant.)

we use an ldap user "salt-sshexampleuser" for the salt-ssh user - when running the initial test.ping against new hosts in a roster file it asks for the users password if ssh keys have not been setup for this user on that host. 

Basically test.ping a custom roster file, answer yes to deploying the salt-ssh key, then press enter to submit an empty password

[ERROR   ] An un-handled exception was caught by salt's global exception handler:
TerminalException: You need to pass at least one of "args", "executable"
Traceback (most recent call last):
  File "/usr/local/bin/salt-ssh", line 11, in <module>
    sys.exit(salt_ssh())
  File "/usr/local/lib/python2.7/dist-packages/salt/scripts.py", line 416, in salt_ssh
    client.run()
  File "/usr/local/lib/python2.7/dist-packages/salt/cli/ssh.py", line 21, in run
    ssh.run()
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/__init__.py", line 643, in run
    ret = self.key_deploy(host, ret)
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/__init__.py", line 363, in key_deploy
    return self._key_deploy_run(host, target, True)
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/__init__.py", line 386, in _key_deploy_run
    stdout, stderr, retcode = single.shell.copy_id()
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/shell.py", line 235, in copy_id
    stdout, stderr, retcode = self._run_cmd(self._copy_id_str_old())
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/shell.py", line 381, in _run_cmd
    stream_stderr=False)
  File "/usr/local/lib/python2.7/dist-packages/salt/utils/vt.py", line 127, in __init__
    'You need to pass at least one of "args", "executable" '
TerminalException: You need to pass at least one of "args", "executable"
Traceback (most recent call last):
  File "/usr/local/bin/salt-ssh", line 11, in <module>
    sys.exit(salt_ssh())
  File "/usr/local/lib/python2.7/dist-packages/salt/scripts.py", line 416, in salt_ssh
    client.run()
  File "/usr/local/lib/python2.7/dist-packages/salt/cli/ssh.py", line 21, in run
    ssh.run()
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/__init__.py", line 643, in run
    ret = self.key_deploy(host, ret)
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/__init__.py", line 363, in key_deploy
    return self._key_deploy_run(host, target, True)
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/__init__.py", line 386, in _key_deploy_run
    stdout, stderr, retcode = single.shell.copy_id()
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/shell.py", line 235, in copy_id
    stdout, stderr, retcode = self._run_cmd(self._copy_id_str_old())
  File "/usr/local/lib/python2.7/dist-packages/salt/client/ssh/shell.py", line 381, in _run_cmd
    stream_stderr=False)
  File "/usr/local/lib/python2.7/dist-packages/salt/utils/vt.py", line 127, in __init__
    'You need to pass at least one of "args", "executable" '
salt.utils.vt.TerminalException: You need to pass at least one of "args", "executable"



Exiting gracefully on Ctrl-c

### Versions Report
(Provided by running `salt --versions-report`. Please also mention any differences in master/minion versions.)

salt-ssh is agentless homies :)