With `Clean: True` the file.recurse state hangs on Windows with 100% CPU usage. It isn't logging anything, just seems to be going in circles.

Example state without the clean option:
<pre># cat testing.sls

{% if grains['os'] == 'Windows' %}
  {% set dest = 'C:\\test\\' %}
{% else %}
  {% set dest = '/test/' %}
{% endif %}

file_recurse_test:
  file.recurse:
    - name: '{{ dest }}parent_folder'
    - source: 'salt://some_folder'</pre>
No problems on Linux:
<pre># salt linux-minion state.apply testing test=True

linux-minion:
----------
          ID: file_recurse_test
    Function: file.recurse
        Name: /test/parent_folder
      Result: None
     Comment: #### /test/parent_folder/some_file ####
              The file /test/parent_folder/some_file is set to be changed
              
              #### /test/parent_folder ####
              The following files will be changed:
              /test/parent_folder: directory - new</pre>
No problems on Windows:
<pre># salt windows-minion state.apply testing test=True

windows-test:
----------
          ID: file_recurse_test
    Function: file.recurse
        Name: C:\test\parent_folder
      Result: None
     Comment: #### C:\test\parent_folder\some_file ####
              The file C:\test\parent_folder\some_file is set to be changed
              
              #### C:\test\parent_folder ####
              The following files will be changed:
              C:\test\parent_folder: directory - new</pre>
Now add the clean option:
<pre># cat testing.sls

{% if grains['os'] == 'Windows' %}
  {% set dest = 'C:\\test\\' %}
{% else %}
  {% set dest = '/test/' %}
{% endif %}

file_recurse_test:
  file.recurse:
    - name: '{{ dest }}parent_folder'
    - source: 'salt://some_folder'
    - clean: True</pre>
Still fine on Linux (and fine outside of test mode too):
<pre># salt linux-minion state.apply testing test=True

linux-minion:
----------
          ID: file_recurse_test
    Function: file.recurse
        Name: /test/parent_folder
      Result: None
     Comment: #### /test/parent_folder/some_file ####
              The file /test/parent_folder/some_file is set to be changed
              
              #### /test/parent_folder ####
              The following files will be changed:
              /test/parent_folder: directory - new</pre>
Both of these hang forever:
<pre># salt windows-minion state.apply testing test=True
# salt windows-minion state.apply testing</pre>
I'm pretty sure this was working fine in the older 2016.3 branch and broken in 2016.11, as I was actively using it. Tested on 2016.11.1