### Description of Issue

[beacon.save](https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.beacons.html#salt.modules.beacons.save) when executed from the [Python Client API](https://docs.saltstack.com/en/latest/ref/clients/) fails. However when executed from the CLI, it works

### Setup

place this `salt_beacon_api_example.py` file on a minion

``` python
#!/usr/bin/env python3

"""
this program shows how to use the python interface to interact with salt
from an external program

this emulates the following CLI calls, but called from python instead

.. code-block: shell
    salt '*' beacons.add ps "[{'processes': {'salt-master': 'stopped', 'apache2': 'stopped'}}]"
    salt '*' beacons.list
    salt '*' beacons.save
    salt '*' beacons.delete ps
    salt '*' beacons.list
    salt '*' beacons.save

@see https://docs.saltstack.com/en/latest/ref/clients/
@see https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.beacons.html
"""

import salt.config
import salt.loader


def main():
    __opts__ = salt.config.minion_config("/etc/salt/minion")
    # __grains__ = salt.loader.grains(__opts__)
    # __opts__["grains"] = __grains__
    __utils__ = salt.loader.utils(__opts__)
    __salt__ = salt.loader.minion_mods(__opts__, utils=__utils__)

    # beacon.add ps (if not already added)
    if "ps" not in __salt__["beacons.list"](return_yaml=False):
        result = __salt__["beacons.add"](
            "ps", [{"processes": {"salt-master": "stopped", "apache2": "stopped"}}]
        )
        print(result)

    # beacon.list
    result = __salt__["beacons.list"]()
    print(result)

    # beacon.save
    result = __salt__["beacons.save"]()
    print(result)

    # beacon.delete ps
    result = __salt__["beacons.delete"]("ps")
    print(result)

    # beacon.list
    result = __salt__["beacons.list"]()
    print(result)

    # beacon.save
    result = __salt__["beacons.save"]()
    print(result)


if __name__ == "__main__":
    main()
```

### Steps to Reproduce Issue

1. download the `salt_beacon_api_example.py` file above to a minion
2. run it through `python3 salt_beacon_api_example.py` (or chmod +x then ./salt_beacon_api_example.py)

#### output

```
Traceback (most recent call last):
  File "./salt_beacon_api_example.py", line 62, in <module>
    main()
  File "./salt_beacon_api_example.py", line 45, in main
    result = __salt__["beacons.save"]()
  File "/usr/lib/python3.5/site-packages/salt/modules/beacons.py", line 373, in save
    sfn = os.path.join(__opts__['config_dir'],
KeyError: 'config_dir'
```

### Versions Report

```
$ salt --versions-report

Salt Version:
           Salt: 2019.2.2
 
Dependency Versions:
           cffi: 1.11.5
       cherrypy: Not Installed
       dateutil: 2.7.3
      docker-py: 3.4.0
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.10
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: Not Installed
      pycparser: 2.18
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 3.5.6 (default, Nov  1 2019, 17:57:31)
   python-gnupg: Not Installed
         PyYAML: 3.13
          PyZMQ: 17.1.0
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.2.5
 
System Versions:
           dist:   
         locale: ANSI_X3.4-1968
        machine: x86_64
        release: *********
         system: Linux
        version: Not Installed
```
