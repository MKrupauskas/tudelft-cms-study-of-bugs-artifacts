I am using v2014.7 and I can confirm from my minion output that failover works when I shutdown the first master in the list of multimasters.

I can also use the secondary master by specifying master=xxx.xxx.xxx.xxx in the salt-call arguments.

My issue is that I expect salt-call to know to use the new master after failover by default.  Is there something I can pass as an argument to get it to do this?

Here is my minion output on failover, thanks:
[DEBUG   ] schedule: This job was scheduled with jid_include, adding to cache (jid_include defaults to True)
[DEBUG   ] schedule: This job was scheduled with a max number of 1
[DEBUG   ] schedule.handle_func: adding this job to the jobcache with data {'fun': 'status.master', 'jid': '20140819183227832812', 'pid': 7015, 'id': 'minion-2', 'schedule': '__master_alive'}
[INFO    ] Running scheduled job: __master_alive
[DEBUG   ] schedule: This job was scheduled with jid_include, adding to cache (jid_include defaults to True)
[DEBUG   ] schedule: This job was scheduled with a max number of 1
[DEBUG   ] schedule.handle_func: adding this job to the jobcache with data {'fun': 'status.master', 'jid': '20140819183237855659', 'pid': 7018, 'id': 'minion-2', 'schedule': '__master_alive'}
[DEBUG   ] SaltEvent PUB socket URI: ipc:///var/run/salt/minion/minion_event_8d4ba09399_pub.ipc
[DEBUG   ] SaltEvent PULL socket URI: ipc:///var/run/salt/minion/minion_event_8d4ba09399_pull.ipc
[DEBUG   ] Sending event - data = {'_stamp': '2014-08-19T18:32:37.860677', 'master': '192.168.50.10'}
[DEBUG   ] Handling event '__master_disconnected\n\n\x82\xa6_stamp\xba2014-08-19T18:32:37.860677\xa6master\xad192.168.50.10'
[INFO    ] Connection to master 192.168.50.10 lost
[INFO    ] Trying to tune in to next master from master-list
[INFO    ] Removing possibly failed master 192.168.50.10 from list of masters
[WARNING ] Master ip address changed from 192.168.50.10 to 192.168.50.11
[DEBUG   ] Attempting to authenticate with the Salt Master at 192.168.50.11
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[INFO    ] Authentication with master at 192.168.50.11 successful!
[INFO    ] Re-initialising subsystems for new master 192.168.50.11
[DEBUG   ] Generated random reconnect delay between '1000ms' and '11000ms' (4298)
[DEBUG   ] Setting zmq_reconnect_ivl to '4298ms'
[DEBUG   ] Setting zmq_reconnect_ivl_max to '11000ms'
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] Removed obsolete sreq-object from sreq_cache for master tcp://192.168.50.10:4506
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[INFO    ] Minion is ready to receive requests!
