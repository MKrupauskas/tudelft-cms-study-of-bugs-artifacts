### Description of Issue/Question

Whenever saltutil.refresh_grains is called as part of compound command execution, the other commands won't see the refreshed grains.

What we were able to observe so far is that the Salt minion creates a sub-process to handle those executions, and in case of grain refresh, the sub process is not performing the refresh itself, but signaling the parent to do so. The refreshed grains are not sent back to the sub process, and therefore the next operation on the compound command won't see the updated values.

### Setup

N/A

### Steps to Reproduce Issue

Change some info that is collected by the grains, ex: /etc/os-release and run:
```salt 'minion' saltutil.refresh_grains,grains.items '',''```

Same happens while applying a state with similar behaviour, like:
```
grtest:
  module.run:
   - name: saltutil.refresh_grains

grtest2:
  module.run: 
   - name: grains.items
```

### Versions Report

Salt Version:
           Salt: 2016.11.4
 
Dependency Versions:
           cffi: 1.5.2
       cherrypy: 3.6.0
       dateutil: 2.4.2
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.8
        libgit2: 0.24.0
        libnacl: Not Installed
       M2Crypto: 0.21.1
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: Not Installed
      pycparser: 2.10
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: 0.24.0
         Python: 2.7.13 (default, Jan 11 2017, 10:56:06) [GCC]
   python-gnupg: Not Installed
         PyYAML: 3.10
          PyZMQ: 14.0.0
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.4
 
System Versions:
           dist: SuSE 12 x86_64
        machine: x86_64
        release: 4.4.21-69-default
         system: Linux
        version: SUSE Linux Enterprise Server  12 x86_64