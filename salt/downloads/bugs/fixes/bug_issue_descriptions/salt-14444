I uncovered this with apache sites-enabled and sites-available. I clean sites-available and deliver a bunch of files. Then I clean sites-enabled and setup symlinks, but the file.recurse fails every time, even with clean enabled.

Ideally a broken symlink in a directory that is being recursed should either be ignored when setting permissions (note that the call is in the permissions component), or should be cleaned first prior to the permissions check since either of those cases would correct this issue without manual intervention.

```
----------
          ID: /etc/apache2/sites-enabled
    Function: file.directory
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "/usr/lib/python2.7/dist-packages/salt/state.py", line 1379, in call
                  **cdata['kwargs'])
                File "/usr/lib/python2.7/dist-packages/salt/states/file.py", line 1499, in directory
                  follow_symlinks)
                File "/usr/lib/python2.7/dist-packages/salt/modules/file.py", line 2256, in check_perms
                  set_mode(name, mode)
                File "/usr/lib/python2.7/dist-packages/salt/modules/file.py", line 297, in set_mode
                  raise CommandExecutionError('{0}: File not found'.format(path))
              CommandExecutionError: /etc/apache2/sites-enabled/000-default.conf: File not found
     Changes:   
----------
```

```
# ls -l /etc/apache2/sites-enabled/000-default.conf
lrwxrwxrwx 1 root root 35 Jul 23 20:50 /etc/apache2/sites-enabled/000-default.conf -> ../sites-available/000-default.conf
# ls -l /etc/apache2/sites-available/000-default.conf
ls: cannot access /etc/apache2/sites-available/000-default.conf: No such file or directory
```
