I'm not sure if this is related to #7526 but it seems possible.

The problem goes like this:
I have an sls file ... it doesn't actually contain a state declaration, just some python functions and classes to help simplfy other states.  We'll call it `e.sls` for now.

I have two sls files that actually contain real state info, we'll call them `c.sls` and `d.sls`, and each one of these fires off `include("e")` so it can use the python in there.

I have another sls file that is an conditional importer, and in our test it is going to include both c and d.  We'll call this one `b.sls`.

Firing off `salt state.sls b` will cause `include("e")` to return None, whereas `salt state.sls c` or `salt state.sls d` gets it to run just fine.

Removing the branching choice to leave `b imports c imports e` seems to work ok, but that's obviously am not ideal solution.

A copy of a minimum failing test case is posted at http://pastebin.com/1vh2mAk8 for your reading.

Edit: Oh, I should mention that I'm hitting this on 0.16.4 ... also cleaned up sleep deprived nonsense words.
