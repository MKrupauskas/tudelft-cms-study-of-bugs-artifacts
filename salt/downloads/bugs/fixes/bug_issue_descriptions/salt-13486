If you deploy a grain that fails to catch it's own errors it will result in the following:

```
Traceback (most recent call last):
  File "/usr/bin/salt-minion", line 14, in <module>
    salt_minion()
  File "/usr/lib/python2.6/site-packages/salt/scripts.py", line 35, in salt_minion
    minion.start()
  File "/usr/lib/python2.6/site-packages/salt/__init__.py", line 221, in start
    self.prepare()
  File "/usr/lib/python2.6/site-packages/salt/__init__.py", line 209, in prepare
    self.minion = salt.minion.Minion(self.config)
  File "/usr/lib/python2.6/site-packages/salt/minion.py", line 552, in __init__
    opts['environment'],
  File "/usr/lib/python2.6/site-packages/salt/pillar/__init__.py", line 73, in compile_pillar
    ret_pillar = self.sreq.crypted_transfer_decode_dictentry(load, dictkey='pillar', tries=3,         timeout=7200)
  File "/usr/lib/python2.6/site-packages/salt/transport/__init__.py", line 59, in     crypted_transfer_decode_dictentry
    ret = self.sreq.send('aes', self.auth.crypticle.dumps(load), tries, timeout)
  File "/usr/lib/python2.6/site-packages/salt/crypt.py", line 499, in dumps
    return self.encrypt(self.PICKLE_PAD + self.serial.dumps(obj))
  File "/usr/lib/python2.6/site-packages/salt/payload.py", line 120, in dumps
    return msgpack.dumps(msg)
  File "/usr/lib64/python2.6/site-packages/msgpack/__init__.py", line 47, in packb
    return Packer(**kwargs).pack(o)
  File "_packer.pyx", line 224, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:224)
  File "_packer.pyx", line 226, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:226)
  File "_packer.pyx", line 185, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:185)
  File "_packer.pyx", line 185, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:185)
  File "_packer.pyx", line 221, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:221)
TypeError: can't serialize <type 'exceptions.ValueError'>
```

This causes investigation in the wrong direction, some trapping around grain evaluation to report errors before attempting serialization would be useful.
