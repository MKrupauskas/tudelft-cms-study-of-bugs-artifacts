**Description**
Publisher acls are not applied properly when the minions are behind a syndic.  The ACLs only work properly for minions directly connected to the Master of masters.

**Setup**

Following publisher acl file is present in /etc/salt/master.d on both master and syndic.
User exists on both master and syndic

```
publisher_acl:
  user1:
    - '*-dev-server-*':
      - test.ping
      - cmd.script
```

Master of masters with minions connected to both master + syndic

**Steps to Reproduce the behavior**
on master of masters (as user1)
```
# test.ping against a locally connected minion that should NOT be allowed
user1@salt-master:~$ salt server1 test.ping
Authorization error occurred.

# test.ping against a minion connected to master that is should be allowed 
user1@salt-master:~$ salt user-dev-server-1 test.ping
user-dev-server-1:
    True
# test.ping against a minion connected to a syndic that should NOT be allowed
user1@salt-master:~$ salt server2 test.ping
server2:
    True

# test.ping against same minion from the syndic works properly (not allowed)
user1@salt-syndic:~$ salt server2 test.ping
Authentication error occurred.


# logs on syndic show user name is being sent
root@salt-syndic:/etc/salt/master.d# grep user1 /var/log/salt/master
2021-06-21 18:23:00,008 [salt.master      :2492][INFO    ][27325] User user1 Published command test.ping with jid 20210621182259368574

```

**Expected behavior**
Publisher ACLs are enforced across syndics

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Versions Report**
<details><summary>
Master/syndic/minion versions
</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
**** SALT MASTER VERSIONS ***
Salt Version:
          Salt: 3003

Dependency Versions:
          cffi: Not Installed
      cherrypy: unknown
      dateutil: 2.6.1
     docker-py: Not Installed
         gitdb: 2.0.3
     gitpython: 2.1.8
        Jinja2: 2.10
       libgit2: Not Installed
      M2Crypto: Not Installed
          Mako: Not Installed
       msgpack: 0.5.6
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: Not Installed
      pycrypto: Not Installed
  pycryptodome: 3.4.7
        pygit2: Not Installed
        Python: 3.6.9 (default, Apr 18 2020, 01:56:04)
  python-gnupg: 0.4.1
        PyYAML: 3.12
         PyZMQ: 17.1.2
         smmap: 2.0.3
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.2.5

System Versions:
          dist: ubuntu 18.04 Bionic Beaver
        locale: UTF-8
       machine: x86_64
       release: 4.15.0-99-generic
        system: Linux
       version: Ubuntu 18.04 Bionic Beaver


*** SALT SYNDIC VERSIONS ***

Salt Version:
          Salt: 3003

Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: 2.6.1
     docker-py: Not Installed
         gitdb: 2.0.3
     gitpython: 2.1.8
        Jinja2: 2.10
       libgit2: Not Installed
      M2Crypto: Not Installed
          Mako: Not Installed
       msgpack: 0.5.6
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: Not Installed
      pycrypto: Not Installed
  pycryptodome: 3.4.7
        pygit2: Not Installed
        Python: 3.6.9 (default, Jul 17 2020, 12:50:27)
  python-gnupg: 0.4.1
        PyYAML: 3.12
         PyZMQ: 17.1.2
         smmap: 2.0.3
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.2.5

System Versions:
          dist: ubuntu 18.04 Bionic Beaver
        locale: UTF-8
       machine: x86_64
       release: 4.15.0-112-generic
        system: Linux
       version: Ubuntu 18.04 Bionic Beaver

*** MINION VERSIONS ***
root@salt-master:/etc/salt/master.d# salt -L  'server1,server2,user-dev-server1' grains.get saltversion
user-dev-server-1:
    3001.6
server1:
    3003
server2:
    3003

```
</details>

**Additional context**
Add any other context about the problem here.
