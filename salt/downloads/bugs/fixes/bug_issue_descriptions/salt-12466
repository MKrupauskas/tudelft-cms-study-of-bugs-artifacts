Version: 2014.1.3

If a yum repo is defined, but left disabled until used, its contents will never make it into **context**['pkg._avail'], and the package will be treated as not found inside of yumpkg.py:check_db(), even though the repoquery runs correctly to get suggestions, resulting in errors such as:

`[ERROR   ] Package 'site-solr' not found (possible matches: site-solr)`

I'm not very familiar with the codebase outside of what I've seen right here, but I think that if we were to, inside check_db(), first test if the repoquery is of the exclusive type (only one repo, exclude everything else), then if so, populate a temporary pkg._avail dict for immediate use, we could cover this case well. 

While it seems the intent of the global pkg._avail dict was caching the expensive call, this new behavior shouldn't be too costly as most disabled-by-default repos will be on the smaller side.
