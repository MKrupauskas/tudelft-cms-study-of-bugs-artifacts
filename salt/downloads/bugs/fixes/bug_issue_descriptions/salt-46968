### Description of Issue/Question

win_servermanager state no longer works on the new Windows version.

### Setup

install the learn-salt environment on a workstation from https://github.com/vernondcole/learn-salt
as documented in README.md.

### Steps to Reproduce Issue

on the workstation...
```bash
vagrant up bevymaster
vagrant up win12
vagrant ssh bevymaster
```
on bevymaster...
```
sudo salt win12 state.apply windows.install_server_features
```
That fails with an 'invalid keyword argument' error -- which is a bug,
as the install_server_features.sls is an exact cut-and-paste from 
https://docs.saltstack.com/en/latest/ref/states/all/salt.states.win_servermanager.html#salt.states.win_servermanager.installed

So let's upgrade the Windows VM to the current version of Salt...

Log in to the win12 machine virtual display using username `vagrant` password `vagrant`.
In the `Server Manager` click on `Local Server`
click on `IE Enhanced Security Configuration` and turn it `off`.
Start `Internet Explorer` and download and install https://repo.saltstack.com/windows/Salt-Minion-2018.3.0-Py2-x86-Setup.exe

Start a Windows PowerShell session as Administrator...
```
PS C:\Users\vagrant> salt-call state.apply windows.install_server_features
[WARNING ] C:\salt\bin\lib\site-packages\salt\modules\win_update.py:92: DeprecationWarning: The 'win_update' module is being deprecated and will be removed in Salt Fluorine (Unreleased). Please use the 'win_wua' module instead.

[ERROR   ] State 'win_servermanager.installed' was not found in SLS 'windows.install_server_features'
Reason: 'win_servermanager' __virtual__ returned False

local:
----------
          ID: install_multiple_features
    Function: win_servermanager.installed
      Result: False
     Comment: State 'win_servermanager.installed' was not found in SLS 'windows.install_server_features'
              Reason: 'win_servermanager' __virtual__ returned False
     Changes:

Summary for local
------------
Succeeded: 0
Failed:    1
------------
Total states run:     1
Total run time:   0.000 ms
```
So the command which was valid, but buggy, in 2017.7 is missing in 2018.3.

### Versions Report

```
PS C:\Users\vagrant> salt-call --versions-report
Salt Version:
           Salt: 2018.3.0

Dependency Versions:
           cffi: 1.10.0
       cherrypy: 10.2.1
       dateutil: 2.6.1
      docker-py: Not Installed
          gitdb: 2.0.3
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.10
        libgit2: Not Installed
        libnacl: 1.6.1
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: Not Installed
      pycparser: 2.18
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.14 (v2.7.14:84471935ed, Sep 16 2017, 20:19:30) [MSC v.1500 32 bit (Intel)]
   python-gnupg: 0.4.1
         PyYAML: 3.12
          PyZMQ: 16.0.3
           RAET: Not Installed
          smmap: 2.0.3
        timelib: 0.2.4
        Tornado: 4.5.2
            ZMQ: 4.1.6

System Versions:
           dist:
         locale: cp1252
        machine: AMD64
        release: 2012ServerR2
         system: Windows
        version: 2012ServerR2 6.3.9600  Multiprocessor Free
```
