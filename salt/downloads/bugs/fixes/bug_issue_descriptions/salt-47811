### Description of Issue/Question

This did work in 2017.7.2. However, using a UNC-based path with 2018.3.0 through `archive.extracted` Is giving the following trace.

```
local:
----------
          ID: extract
    Function: archive.extracted
        Name: C:\Test
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "c:\salt\bin\lib\site-packages\salt\state.py", line 1878, in call
                  **cdata['kwargs'])
                File "c:\salt\bin\lib\site-packages\salt\loader.py", line 1823, in wrapper
                  return f(*args, **kwargs)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 977, in extracted
                  existing_cached_source_sum = _read_cached_checksum(cached)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 118, in _read_cached_checksum
                  checksum_file = _checksum_file_path(path)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 69, in _checksum_file_path
                  relpath = '.'.join((os.path.relpath(path, __opts__['cachedir']), 'hash'))
                File "c:\salt\bin\lib\ntpath.py", line 574, in relpath
                  path_drive, start_drive))
              ValueError: path is on mount '\\\\localhost\\c$', start on mount 'c:'
     Started: 21:46:53.583293
    Duration: 31.369 ms
     Changes:   
```

It should be noted that archive.unzip module does work with the UNC address. It is only the state that throws the error. No amount of quoting is cleaning it up either. 

A second error that popped up during testing was 

```
local:
----------
          ID: extract
    Function: archive.extracted
        Name: C:\Test
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "c:\salt\bin\lib\site-packages\salt\state.py", line 1878, in call
                  **cdata['kwargs'])
                File "c:\salt\bin\lib\site-packages\salt\loader.py", line 1823, in wrapper
                  return f(*args, **kwargs)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 977, in extracted
                  existing_cached_source_sum = _read_cached_checksum(cached)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 118, in _read_cached_checksum
                  checksum_file = _checksum_file_path(path)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 69, in _checksum_file_path
                  relpath = '.'.join((os.path.relpath(path, __opts__['cachedir']), 'hash'))
                File "c:\salt\bin\lib\ntpath.py", line 522, in relpath
                  % (path, start))
              ValueError: Cannot mix UNC and non-UNC paths (\\localhost\c$\tesing\tesing.zip and c:\salt\var\cache\salt\minion)
     Started: 20:58:03.158000
    Duration: 109.0 ms
     Changes:
```

However, I'm not mixing UNC and non-UNC paths. archive.extraced is.

### Setup
(Please provide relevant configs and/or SLS files (Be sure to remove sensitive info).)

A folder being shared and accessed by UNC. 

And the following state

```
extract:
  archive.extracted:
    - name: C:\Test
    - source: \\localhost\c$\tesing\tesing.zip
```


### Steps to Reproduce Issue
run the above state on a fresh windows minion.

```
c:\salt\salt-call : [DEBUG   ] Reading configuration from c:\salt\conf\minion
At line:1 char:1
+ c:\salt\salt-call -l debug state.sls test *> C:\vagrant\state.sls.tes ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: ([DEBUG   ] Read...alt\conf\minion:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
[DEBUG   ] Including configuration from 'c:\salt\conf\minion.d\_schedule.conf'
[DEBUG   ] Reading configuration from c:\salt\conf\minion.d\_schedule.conf
[DEBUG   ] Using cached minion ID from c:\salt\conf\minion_id: winion-0
[DEBUG   ] Configuration file path: c:\salt\conf\minion
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[DEBUG   ] Grains refresh requested. Refreshing grains.
[DEBUG   ] Reading configuration from c:\salt\conf\minion
[DEBUG   ] Including configuration from 'c:\salt\conf\minion.d\_schedule.conf'
[DEBUG   ] Reading configuration from c:\salt\conf\minion.d\_schedule.conf
[DEBUG   ] Connecting to master. Attempt 1 (infinite attempts)
[DEBUG   ] Master URI: tcp://192.168.70.10:4506
[DEBUG   ] Popen(['git', 'version'], cwd=C:\Users\Administrator, universal_newlines=False, shell=None)
[DEBUG   ] Initializing new AsyncAuth for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 'tcp://192.168.70.10:4506')
[DEBUG   ] Generated random reconnect delay between '1000ms' and '11000ms' (6605)
[DEBUG   ] Setting zmq_reconnect_ivl to '6605ms'
[DEBUG   ] Setting zmq_reconnect_ivl_max to '11000ms'
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 
'tcp://192.168.70.10:4506', 'clear')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://192.168.70.10:4506
[DEBUG   ] Trying to connect to: tcp://192.168.70.10:4506
[DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] salt.crypt.get_rsa_key: Loading private key
[DEBUG   ] salt.crypt._get_key_with_evict: Loading private key
[DEBUG   ] Loaded minion key: c:\salt\conf\pki\minion\minion.pem
[DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
[DEBUG   ] Connecting the Minion to the Master publish port, using the URI: tcp://192.168.70.10:4505
[DEBUG   ] salt.crypt.get_rsa_key: Loading private key
[DEBUG   ] Loaded minion key: c:\salt\conf\pki\minion\minion.pem
[DEBUG   ] Determining pillar cache
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 
'tcp://192.168.70.10:4506', 'aes')
[DEBUG   ] Initializing new AsyncAuth for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 'tcp://192.168.70.10:4506')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://192.168.70.10:4506
[DEBUG   ] Trying to connect to: tcp://192.168.70.10:4506
[DEBUG   ] salt.crypt.get_rsa_key: Loading private key
[DEBUG   ] Loaded minion key: c:\salt\conf\pki\minion\minion.pem
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] LazyLoaded state.sls
[DEBUG   ] LazyLoaded saltutil.is_running
[DEBUG   ] LazyLoaded grains.get
[DEBUG   ] LazyLoaded config.get
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 
'tcp://192.168.70.10:4506', 'aes')
[DEBUG   ] Initializing new AsyncAuth for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 'tcp://192.168.70.10:4506')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://192.168.70.10:4506
[DEBUG   ] Trying to connect to: tcp://192.168.70.10:4506
[INFO    ] Loading fresh modules for state activity
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] In saltenv 'base', looking at rel_path 'test.sls' to resolve 'salt://test.sls'
[DEBUG   ] In saltenv 'base', ** considering ** path 'c:\salt\var\cache\salt\minion\files\base\test.sls' to resolve 
'salt://test.sls'
[DEBUG   ] compile template: c:\salt\var\cache\salt\minion\files\base\test.sls
[DEBUG   ] Jinja search path: ['c:\\salt\\var\\cache\\salt\\minion\\files\\base']
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 
'tcp://192.168.70.10:4506', 'aes')
[DEBUG   ] Initializing new AsyncAuth for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 'tcp://192.168.70.10:4506')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://192.168.70.10:4506
[DEBUG   ] Trying to connect to: tcp://192.168.70.10:4506
[PROFILE ] Time (in seconds) to render 'c:\salt\var\cache\salt\minion\files\base\test.sls' using 'jinja' renderer: 
0.031291961669921875
[DEBUG   ] Rendered data from file: c:\salt\var\cache\salt\minion\files\base\test.sls:
extract: 
  archive.extracted: 
    - name: C:\Test 
    - source: \\localhost\c$\tesing\tesing.zip

[DEBUG   ] Results of YAML rendering: 
OrderedDict([('extract', OrderedDict([('archive.extracted', [OrderedDict([('name', 'C:\\Test')]), 
OrderedDict([('source', '\\\\localhost\\c$\\tesing\\tesing.zip')])])]))])
[PROFILE ] Time (in seconds) to render 'c:\salt\var\cache\salt\minion\files\base\test.sls' using 'yaml' renderer: 0.0
[DEBUG   ] LazyLoaded config.option
[DEBUG   ] LazyLoaded archive.extracted
[INFO    ] Running state [C:\Test] at time 21:46:53.583293
[INFO    ] Executing state archive.extracted for [C:\Test]
[DEBUG   ] LazyLoaded file.source_list
[ERROR   ] An exception occurred in this state: Traceback (most recent call last):
  File "c:\salt\bin\lib\site-packages\salt\state.py", line 1878, in call
    **cdata['kwargs'])
  File "c:\salt\bin\lib\site-packages\salt\loader.py", line 1823, in wrapper
    return f(*args, **kwargs)
  File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 977, in extracted
    existing_cached_source_sum = _read_cached_checksum(cached)
  File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 118, in _read_cached_checksum
    checksum_file = _checksum_file_path(path)
  File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 69, in _checksum_file_path
    relpath = '.'.join((os.path.relpath(path, __opts__['cachedir']), 'hash'))
  File "c:\salt\bin\lib\ntpath.py", line 574, in relpath
    path_drive, start_drive))
ValueError: path is on mount '\\\\localhost\\c$', start on mount 'c:'

[INFO    ] Completed state [C:\Test] at time 21:46:53.614662 (duration_in_ms=31.369)
[DEBUG   ] File c:\salt\var\cache\salt\minion\accumulator\1457384110848 does not exist, no need to cleanup
[DEBUG   ] LazyLoaded cmd.run
[INFO    ] Executing command ['attrib', '-R', 'c:\\salt\\var\\cache\\salt\\minion\\sls.p'] in directory 
'C:\Users\Administrator'
[DEBUG   ] output: 
[DEBUG   ] LazyLoaded state.check_result
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 
'tcp://192.168.70.10:4506', 'aes')
[DEBUG   ] Initializing new AsyncAuth for ('c:\\salt\\conf\\pki\\minion', 'winion-0', 'tcp://192.168.70.10:4506')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://192.168.70.10:4506
[DEBUG   ] Trying to connect to: tcp://192.168.70.10:4506
[DEBUG   ] LazyLoaded highstate.output
local:
----------
          ID: extract
    Function: archive.extracted
        Name: C:\Test
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "c:\salt\bin\lib\site-packages\salt\state.py", line 1878, in call
                  **cdata['kwargs'])
                File "c:\salt\bin\lib\site-packages\salt\loader.py", line 1823, in wrapper
                  return f(*args, **kwargs)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 977, in extracted
                  existing_cached_source_sum = _read_cached_checksum(cached)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 118, in _read_cached_checksum
                  checksum_file = _checksum_file_path(path)
                File "c:\salt\bin\lib\site-packages\salt\states\archive.py", line 69, in _checksum_file_path
                  relpath = '.'.join((os.path.relpath(path, __opts__['cachedir']), 'hash'))
                File "c:\salt\bin\lib\ntpath.py", line 574, in relpath
                  path_drive, start_drive))
              ValueError: path is on mount '\\\\localhost\\c$', start on mount 'c:'
     Started: 21:46:53.583293
    Duration: 31.369 ms
     Changes:   

Summary for local
------------
Succeeded: 0
Failed:    1
------------
Total states run:     1
Total run time:  31.369 ms
```



### Versions Report

```
winion-0:
    Salt Version:
               Salt: 2018.3.0

    Dependency Versions:
               cffi: 1.10.0
           cherrypy: 10.2.1
           dateutil: 2.6.1
          docker-py: Not Installed
              gitdb: 2.0.3
          gitpython: Not Installed
              ioflo: Not Installed
             Jinja2: 2.10
            libgit2: Not Installed
            libnacl: Not Installed
           M2Crypto: Not Installed
               Mako: 1.0.7
       msgpack-pure: Not Installed
     msgpack-python: 0.4.8
       mysql-python: Not Installed
          pycparser: 2.18
           pycrypto: 2.6.1
       pycryptodome: Not Installed
             pygit2: Not Installed
             Python: 3.5.3 (v3.5.3:1880cb95a742, Jan 16 2017, 16:02:32) [MSC v.1900 64 bit (AMD64)]
       python-gnupg: 0.4.1
             PyYAML: 3.12
              PyZMQ: 16.0.3
               RAET: Not Installed
              smmap: 2.0.3
            timelib: 0.2.4
            Tornado: 4.5.2
                ZMQ: 4.1.6

    System Versions:
               dist:
             locale: cp1252
            machine: AMD64
            release: 2016Server
             system: Windows
            version: 2016Server 10.0.14393 SP0 Multiprocessor Free
```
