I'm running SaltStack on a RHEL 6.5 system. However I don't really use the system Python and have instead an install of Anaconda in /opt. I was looking to install additional packages in there, and the pip state looked like it would do the job:

```
doit:
  pip.installed:
  - bin_env: /opt/anaconda
```

However this does not work, because the `pip` SaltStack state is not loaded, because it seems it refuses to load unless there is a pip command installed in the system Python. I made things work by installing pip in the system Python, even though I will never use it and having it installed may actually lead to errors on my part in the future (any invocation of the system pip on my part was meant to be an invocation of pip installed in Anaconda).

Would it be possible to postpone the check for an available pip until the `pip.installed` state is executed. That way, `pip.installed` calls with an `env_bin` pointing to a working installation of Python with pip would work without requiring an (unrelated) system pip to be available.
