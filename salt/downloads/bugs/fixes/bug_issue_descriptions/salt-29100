salt-call --versions-report

```
Salt Version:
           Salt: 2015.8.1

Dependency Versions:
         Jinja2: 2.8
       M2Crypto: 0.22
           Mako: Not Installed
         PyYAML: 3.11
          PyZMQ: 14.7.0
         Python: 2.7.8 (default, Aug 24 2014, 21:26:19)
           RAET: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.5
           cffi: 0.9.2
       cherrypy: Not Installed
       dateutil: 2.2
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
        libnacl: 1.4.3
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: Not Installed
      pycparser: 2.13
       pycrypto: 2.6.1
         pygit2: Not Installed
   python-gnupg: 2.0.2
          smmap: Not Installed
        timelib: Not Installed

System Versions:
           dist:
        machine: x86_64
        release: 14.5.0
         system: 10.10.5 -- x86_64
```

I use this module to check the existence of an instance when creating:

```
{%- if not salt['boto_ec2.exists'](name='salt-master', profile=profile) %}
aws_ec2_create_instance:
  module:
    - run
    - name: boto_ec2.run
    - image_id: {{ salt['pillar.get']('ec2:image_id') }}
    - m_name: salt-master
    - key_name: salt
    - instance_type: t2.medium
    - vpc_name: {{ vpc_name }}
    - subnet_name: {{ public_subnet }}
    - network_interface_name: salt
    - security_group_names:
      - salt-ec2
    - profile: {{ profile }}
    - require:
      - module: aws_ec2_network
    - watch_in:
      - module: aws_ec2_set_attribute
      - module: aws_ec2_associate_eip
{%- endif %}
```

But it creates a new one everytime running highstate.
The reason is it does not pass the region when finding instances: https://github.com/saltstack/salt/blob/2015.8/salt/modules/boto_ec2.py#L218
