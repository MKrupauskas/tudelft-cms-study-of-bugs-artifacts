The use of `LocalClient.cmd` is limited in ext_pillars. `ext_pillar` call never returns in the following example:

```
import salt.client
def ext_pillar(minion_id, pillar, config):
    client = salt.client.LocalClient(__opts__['conf_file'])
    result = []
    for _ in xrange(__opts__['worker_threads'] - 2):
        ret = client.cmd('machine1', 'cmd.run', arg=('ls',))
        result.append(ret)
    return {'mypillar': result}
```

Now, the following command always times out:

```
salt machine2 saltutil.sync_all
```

If, however, `client.cmd` is called one time less, `sync_all` succeeds (# of worker threads minus 3). I believe there is something fishy going on, and salt's operation should not depend on the number of worker threads.

I have found `saltutil.find_job` is posted to the bus before salt is able to read the last result but I could not why it happens or why it is bad.
