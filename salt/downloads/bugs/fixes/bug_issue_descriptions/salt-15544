**Environment:**
CentOS 6.4

```
# salt-call --versions-report
           Salt: 2014.1.10
         Python: 2.6.6 (r266:84292, Jan 22 2014, 09:42:36)
         Jinja2: 2.7.2
       M2Crypto: 0.20.2
 msgpack-python: 0.1.13
   msgpack-pure: Not Installed
       pycrypto: 2.6.1
         PyYAML: 3.10
          PyZMQ: 2.2.0.1
            ZMQ: 3.2.4
```

**Steps to reproduce:**
I assume you can play with `eth1` interface.

Apply this state:

```
Set one address:
  network.managed:
    - name: eth1
    - enabled: True
    - type: eth
    - proto: none
    - ipaddr: 4.5.6.1
    - netmask: 255.255.255.0

Set another address:
  network.managed:
    - name: eth1
    - enabled: True
    - type: eth
    - proto: none
    - ipaddr: 1.2.3.1
    - netmask: 255.255.255.0
```

It will run successfully and the output will have something like this in the end:

```
----------
          ID: Set another address
    Function: network.managed
        Name: eth1
      Result: True
     Comment: Interface eth1 updated.
     Changes:   
              ----------
              interface:
                  ---  
                  +++  
                  @@ -3,5 +3,5 @@
                   USERCTL="no"
                   BOOTPROTO="none"
                   ONBOOT="yes"
                  -IPADDR="4.5.6.1"
                  +IPADDR="1.2.3.1"
                   NETMASK="255.255.255.0"
```

Now run `ifconfig eth1` and observe that you still have the first address applied, or even the one that you had before applying the state.

**Workaround:**
`ifdown eth1 ; ifup eth1` can be run after applying the state to ensure the new configuration is applied.
