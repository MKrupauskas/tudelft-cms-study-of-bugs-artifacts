Running `sudo salt-call -l debug docker.push master:5000/petar/cpu_stress_test.worker insecure_registry=True` results in:

```
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: master
[DEBUG   ] Configuration file path: /etc/salt/minion
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Initializing new SAuth for ('/etc/salt/pki/minion', 'master', 'tcp://127.0.1.1:4506')
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] LazyLoaded docker.push
[DEBUG   ] LazyLoaded config.get
[DEBUG   ] "GET /run/docker.sock/v1.17/version HTTP/1.1" 200 148
[INFO    ] Starting new HTTPS connection (1): master
[ERROR   ] An un-handled exception was caught by salt's global exception handler:
DockerException: HTTPS endpoint unresponsive and insecure mode isn't enabled.
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    salt_call()
  File "/usr/lib/python2.7/dist-packages/salt/scripts.py", line 227, in salt_call
    client.run()
  File "/usr/lib/python2.7/dist-packages/salt/cli/call.py", line 69, in run
    caller.run()
  File "/usr/lib/python2.7/dist-packages/salt/cli/caller.py", line 236, in run
    ret = self.call()
  File "/usr/lib/python2.7/dist-packages/salt/cli/caller.py", line 138, in call
    ret['return'] = func(*args, **kwargs)
  File "/usr/lib/python2.7/dist-packages/salt/modules/dockerio.py", line 1699, in push
    registry, repo_name = docker.auth.resolve_repository_name(repo)
  File "/usr/local/lib/python2.7/dist-packages/docker/auth/auth.py", line 67, in resolve_repository_name
    return expand_registry_url(parts[0], insecure), parts[1]
  File "/usr/local/lib/python2.7/dist-packages/docker/auth/auth.py", line 46, in expand_registry_url
    "HTTPS endpoint unresponsive and insecure mode isn't enabled."
DockerException: HTTPS endpoint unresponsive and insecure mode isn't enabled.
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    salt_call()
  File "/usr/lib/python2.7/dist-packages/salt/scripts.py", line 227, in salt_call
    client.run()
  File "/usr/lib/python2.7/dist-packages/salt/cli/call.py", line 69, in run
    caller.run()
  File "/usr/lib/python2.7/dist-packages/salt/cli/caller.py", line 236, in run
    ret = self.call()
  File "/usr/lib/python2.7/dist-packages/salt/cli/caller.py", line 138, in call
    ret['return'] = func(*args, **kwargs)
  File "/usr/lib/python2.7/dist-packages/salt/modules/dockerio.py", line 1699, in push
    registry, repo_name = docker.auth.resolve_repository_name(repo)
  File "/usr/local/lib/python2.7/dist-packages/docker/auth/auth.py", line 67, in resolve_repository_name
    return expand_registry_url(parts[0], insecure), parts[1]
  File "/usr/local/lib/python2.7/dist-packages/docker/auth/auth.py", line 46, in expand_registry_url
    "HTTPS endpoint unresponsive and insecure mode isn't enabled."
docker.errors.DockerException: HTTPS endpoint unresponsive and insecure mode isn't enabled.
```

I found this is caused by  https://github.com/saltstack/salt/blob/v2015.5.0/salt/modules/dockerio.py#L1699 :

```
registry, repo_name = docker.auth.resolve_repository_name(repo)
```

and it should be:

```
registry, repo_name = docker.auth.resolve_repository_name(repo, insecure=insecure_registry)
```
