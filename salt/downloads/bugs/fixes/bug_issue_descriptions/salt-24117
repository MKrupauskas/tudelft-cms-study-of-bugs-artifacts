There is some deprecated usage of pymongo that results in errors connecting and requesting specific fields in the find_one statement. This is due to deprecated usage becoming removed from latest releases. The following is observed with pymongo 3.0.2.

From master log on connection:

```
[salt.pillar      ][ERROR   ] Failed to load ext_pillar mongo: 'module' object has no attribute 'Connection'
Traceback (most recent call last):

  File "/usr/lib/python2.6/site-packages/salt/pillar/__init__.py", line 526, in ext_pillar
    key)
  File "/usr/lib/python2.6/site-packages/salt/pillar/__init__.py", line 487, in _external_pillar_data
    ext = self.ext_pillars[key](self.opts['id'], pillar, **val)
  File "/usr/lib/python2.6/site-packages/salt/pillar/mongo.py", line 119, in ext_pillar
    conn = pymongo.Connection(host, port)
AttributeError: 'module' object has no attribute 'Connection'
```

From master log with find_one if 'Connection' replaced with 'MongoClient':

```
[salt.pillar      ][ERROR   ] Failed to load ext_pillar mongo: __init__() got an unexpected keyword argument 'fields'
Traceback (most recent call last):
  File "/usr/lib/python2.6/site-packages/salt/pillar/__init__.py", line 526, in ext_pillar
    key)
  File "/usr/lib/python2.6/site-packages/salt/pillar/__init__.py", line 487, in _external_pillar_data
    ext = self.ext_pillars[key](self.opts['id'], pillar, **val)
  File "/usr/lib/python2.6/site-packages/salt/pillar/mongo.py", line 142, in ext_pillar
    result = mdb[collection].find_one({id_field: minion_id}, fields=fields)
  File "/usr/lib64/python2.6/site-packages/pymongo/collection.py", line 796, in find_one
    *args, **kwargs).max_time_ms(max_time_ms)
  File "/usr/lib64/python2.6/site-packages/pymongo/collection.py", line 929, in find
    return Cursor(self, *args, **kwargs)
TypeError: __init__() got an unexpected keyword argument 'fields'
```
