@borgstrom Due to the filtering provided by `__virtual__` functions, the following will fail:

``` python
#!pyobjects

with Pkg.installed('rabbitmq-server'):
    RabbitmqVhost.present('foo')
```

I discussed this with @thatch45 and a possible solution is to extend loader.states with a virtual_enable kwarg that is passed to gen_functions and then have pybojects renderer generate the function classes once (loading with virtual_enable=False), and storing them in `__context__['_pyobjects']`. 

Note, however, that this would depend on all modules using `__virtualname__` instead of hardcoding the name into the `__virtual__` function. (Modules are supposed to do this anyway, and I believe there is a deprecation warning if not.). 
