### Description of Issue/Question
A return that contains binary data causes the CLI to throw a stack trace.

```
Traceback (most recent call last):
  File "/usr/local/bin/salt", line 6, in <module>
    exec(compile(open(__file__).read(), __file__, 'exec'))
  File "/root/salt/scripts/salt", line 10, in <module>
    salt_main()
  File "/root/salt/salt/scripts.py", line 480, in salt_main
    client.run()
  File "/root/salt/salt/cli/salt.py", line 195, in run
    self._output_ret(ret_, out, retcode=retcode)
  File "/root/salt/salt/cli/salt.py", line 374, in _output_ret
    _retcode=retcode)
  File "/root/salt/salt/output/__init__.py", line 94, in display_output
    display_data = try_printout(data, out, opts, **kwargs)
  File "/root/salt/salt/output/__init__.py", line 41, in try_printout
    printout = get_printout(out, opts)(data, **kwargs)
  File "/root/salt/salt/output/highstate.py", line 146, in output
    for host, hostdata in six.iteritems(data)
  File "/root/salt/salt/output/highstate.py", line 225, in _format_host
    schanged, ctext = _format_changes(ret['changes'], orchestration)
  File "/root/salt/salt/output/highstate.py", line 516, in _format_changes
    ctext = _nested_changes(changes)
  File "/root/salt/salt/output/highstate.py", line 489, in _nested_changes
    nested_indent=14)
  File "/root/salt/salt/output/__init__.py", line 203, in out_format
    return try_printout(data, out, opts, **kwargs)
  File "/root/salt/salt/output/__init__.py", line 41, in try_printout
    printout = get_printout(out, opts)(data, **kwargs)
  File "/root/salt/salt/output/nested.py", line 186, in output
    return '\n'.join(nest.display(ret, base_indent, '', []))
  File "/root/salt/salt/output/nested.py", line 173, in display
    self.display(val, indent + 4, '', out)
  File "/root/salt/salt/output/nested.py", line 173, in display
    self.display(val, indent + 4, '', out)
  File "/root/salt/salt/output/nested.py", line 173, in display
    self.display(val, indent + 4, '', out)
  File "/root/salt/salt/output/nested.py", line 87, in display
    ret = salt.utils.stringutils.to_unicode(ret)
  File "/root/salt/salt/utils/stringutils.py", line 110, in to_unicode
    return s.decode('utf-8', errors)
  File "/usr/lib/python2.7/encodings/utf_8.py", line 16, in decode
    return codecs.utf_8_decode(input, errors, True)
UnicodeDecodeError: 'utf8' codec can't decode bytes in position 13-14: invalid continuation byte
```

### Setup
Given the following state file named `reg_binary.sls`:
```
#!py

import base64

bin_data = base64.b16decode(
    '03020000010000001400000073ee837c092a864886f70d010239c9d9176cb582'
    '20000500010000005b0300003082035730a2023fa003020102020101300d0609'
    '2a864886f70d01010b0500304d310b3009060355040613025553311830160603'
    '55040a130f552e132e20476f766a726e6d656e74310c300a060355040b130345'
    '4341311630140603550403130d45434120526f6f742043412034301e170d3132'
    '303332203136313330345a170d3239313233303136313330345a304d310b3009'
    '06035504061302555331183016060355040a130f552e532e20476f7665726e6d'
    '656e74310c300a060355040b1303454341311630140603550403130d45434120'
    '526f6f74204341203430820122300d06092a864886f70d01010105000382010f'
    '003082010a0282010100b8706957bd805a41c019e695e7d48213dc2c384b8a82'
    'ca1c885d8a0282010100b8706957bd32b6de140879dbc68a99edfa21dd621800'
    '2df2010100b873a06957bd320314c6a9fdb212a067ff1f377ad0708f96d77024'
    '0e2d9d455e01479ef2e877141a90205765e43017c6c90479dd1effa0c8ef5fac'
    '00253a01bf969c9583c0013eea03a314f4ec33e10f081782b8860a3f39d1dc90'
    '39c73eb9332983d90ae813e05e3d0d2580c46ccf2c2e802ad02d40491bc49cb6'
    'f3362926ec3100731acd7795ade52c4bf1142936e8315cdef55c8f765bab01d6'
    'cfe7cd27abf4b4735042342587575a1e54993b9b01eac5dd95a3b072b6ec70a1'
    '2aaa85faf1a9389415070203010001a3423040301d0603551d0e04160414335b'
    'a56f7a55602b814b2614cc79bf4aba8b32bd300e0603551d0f0101ff04040302'
    '0186300f0603551d130101ff040530030101ff300d06092a864886f70d01010b'
    '05000382010100b61f617886beb57a71178af1d7450215f7ba20c5e59369255e'
    '1571394ec1d1d8e87b43bb8d19d1c020dfe74dab8a5d7f80208d8def02688ad5'
    '009c21b705ace7b78fb194533db96ef8f7e88255d128246580e516c7b0440bd3'
    '84524323c8dafb5ef60186d937bffd6eb850c80de63c74fa0b6e8ff28cc3df50'
    'b79f28f8ae501c9accbe766e4adaf4b52835a11d7291761a20ef3ac84490c01d'
    '067bb0cdb8c1e6b25b4f48155a23a36ac9065a7c8c884471899ae76ade3d09af'
    'd1cbbc95a708578e51a13111d371f083ef50c7ee796c3b2363f89a666e0e2920'
    '1bad25cdb9b8bf1bd2734000c34dac8964f173a083890e1a7498a8943cb674ec'
    '944e0215eb316e'
    .upper()
)

def run():
    return {
        'test_binary': {
            'reg.present' :[
                {'name': 'HKLM\\SOFTWARE\\Salt'},
                {'vname': 'TestBinaryFromMaster'},
                {'vdata': bin_data},
                {'vtype': 'REG_BINARY'}
            ]
        }
    }
```

### Steps to Reproduce Issue
Either apply the state or run `show_sls`
```
salt * state.show_sls test.reg_binary
```

### Versions Report
oxygen.rc1 master on Ubuntu 16.04
oxygen.rc1 on Windows Server 2016
