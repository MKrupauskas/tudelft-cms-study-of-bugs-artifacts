@cedwards , @kim0, can you look at this?

I tried to run several methods in the status module, and they did not output anything on FreeBSD.
I did a visual inspection of the code and this is what I found:

status.procs -> works on FreeBSD
status.uptime -> works on FreeBSD
status.uptime -> works on FreeBSD
status.cputime -> Linux-specific, accesses /proc/stat
status.meminfo -> Linux-specific, acceses /proc/meminfo
status.cpuinfo -> Linux-specific, acceses /proc/cpuinfo
status.diskstats -> Linux-specific, acceses '/proc/diskstats'
status.diskusage -> Linux-specific acceses '/proc/mounts'
status.diskusage -> Linux-specific, accesses '/proc/vmstat'
status.nproc -> Linux-specific, runs 'nproc' utility
status.netstats -> Linux-specific, acceses '/proc/net/netstat'
status.netdev -> Linux-specific, acceses '/proc/net/dev'

status.w -> works on FreeBSD
status.pid -> works on FreeBSD
status.version -> Linux-specific, acceses '/proc/version'

I can start submitting patches to fix some of these issues.

What is the best/cleanest way to structure the code?  Use a lot of "if" statements?
Use inheritance and subclass things?
