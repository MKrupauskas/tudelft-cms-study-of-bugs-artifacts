When prereq is used to prevent a cmd.run to fire at every highstate, it is ignored when the target is a file managed and the minion is running on windows machine.

Short example to reproduce the problem:

```
SomeCommand:
  cmd.run:
    - name: echo blubb
    - prereq:
      - file: SomeFile

SomeFile:
  file.managed:
    - name: /tmp/top.sls 
    - source: salt://top.sls
    - makedirs: True
```

Expected behaviour:
On the first run the "echo" of "SomeCommand" will run, but later on it does not run as "SomeFile" reported no changes.

Observed behaviour:
On windows minions, regardless of the outcome of "SomeFile" it runs "SomeCommand"
The output speaks for itself:

```
ubuntu:
----------
          ID: SomeCommand
    Function: cmd.run
        Name: echo blubb
      Result: True
     Comment: No changes detected
     Changes:   
----------
          ID: SomeFile
    Function: file.managed
        Name: /tmp/top.sls
      Result: True
     Comment: File /tmp/top.sls is in the correct state
     Changes:   

Summary
------------
Succeeded: 2
Failed:    0
------------
Total:     2
win7:
----------
          ID: SomeCommand
    Function: cmd.run
        Name: echo blubb
      Result: True
     Comment: Command "echo blubb" run
     Changes:   
              ----------
              pid:
                  4364
              retcode:
                  0
              stderr:

              stdout:
                  blubb
----------
          ID: SomeFile
    Function: file.managed
        Name: /tmp/top.sls
      Result: True
     Comment: File /tmp/top.sls is in the correct state
     Changes:   

Summary
------------
Succeeded: 2
Failed:    0
------------
Total:     2
```

Ubuntu behaves correctly, but win7 does not.
Using an other target as file.managed for prereq works as well (at least pkg.installed showed the expected behavious).
Both master and minions are on 2014.1.10
Win8 and Win7 were tried as minions and RHEL and Ubuntu were masters.

```
Master:
           Salt: 2014.1.10
         Python: 2.6.5 (r265:79063, Sep 26 2013, 18:51:09)
         Jinja2: 2.3.1
       M2Crypto: 0.20.1
 msgpack-python: 0.1.9.final
   msgpack-pure: Not Installed
       pycrypto: 2.0.1
         PyYAML: 3.09
          PyZMQ: 13.0.0
            ZMQ: 3.2.2
Minion:
           Salt: 2014.1.10
         Python: 2.7.5 (default, May 15 2013, 22:44:16) [MSC v.1500 64 bit (AMD64)]
         Jinja2: 2.7.1
       M2Crypto: 0.21.1
 msgpack-python: 0.4.2
   msgpack-pure: Not Installed
       pycrypto: 2.6
         PyYAML: 3.11
          PyZMQ: 14.1.1
            ZMQ: 4.0.4
```

I hope this is all the information you require to reproduce the problem.

Btw: salt is great! Keep it up!
