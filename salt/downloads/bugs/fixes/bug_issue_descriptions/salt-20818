https://github.com/saltstack/salt/blob/develop/salt/states/iptables.py#L465
https://github.com/saltstack/salt/blob/develop/salt/states/iptables.py#L342

I scavenged the iptables modules/state from trunk to try with a 2014.7.1 core--was very interested in the mod_aggregate work that Mr. Greenaway committed back in November.  It works splendidly except for one thing: The 'save' option is currently not propagated.

This may be news to Absolutely No One, but I wanted to be sure to get an issue opened.  Aggregating inserts and appends solves a lot of fanduckery that must ensue to properly order rules.  I think a driving force was to avoid having a file written to disk for every rule in the set (I'm sure this gets ridiculous at a certain point)

There are two things I'd like to see:

. Appends and Inserts get aggregated to the same set
. The rule array (in its entirety) have the save option applied--if it appears once, it applies to all aggregated rules in the state run.  Then we get the do-many-things but only hit the disk once.

Another concept that occurred to me while working on iptables states today:

How much conceptual pain would be involved to create a (meta?)state module that would allow one to be able to grab ahold of an aggregated rule set?  

Right now we can weave the correct requisites together to effectively create a "top" or "bottom" state that can be watched or required, but that's a lot of work (with a firewall ruleset) and bit on the brittle side.  It would be a welcome addition to give such a set Thingness.
