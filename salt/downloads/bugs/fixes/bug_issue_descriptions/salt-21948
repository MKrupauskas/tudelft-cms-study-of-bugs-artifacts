eg this branch https://github.com/saltstack-formulas/salt-formula/tree/style-short-dec

was causing this traceback.

```
salt-call state.highstate -l debug
[DEBUG   ] Missing configuration file: /usr/local/etc/salt/minion
[DEBUG   ] Including configuration from '/usr/local/etc/salt/minion.d/_defaults.conf'
[DEBUG   ] Reading configuration from /usr/local/etc/salt/minion.d/_defaults.conf
[DEBUG   ] Using cached minion ID from /usr/local/etc/salt/minion_id: server4-dev
[DEBUG   ] Configuration file path: /usr/local/etc/salt/minion
[DEBUG   ] Missing configuration file: /usr/local/etc/salt/minion
[DEBUG   ] Including configuration from '/usr/local/etc/salt/minion.d/_defaults.conf'
[DEBUG   ] Reading configuration from /usr/local/etc/salt/minion.d/_defaults.conf
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /usr/local/etc/salt/pki/minion/minion.pem
[DEBUG   ] Loaded minion key: /usr/local/etc/salt/pki/minion/minion.pem
[DEBUG   ] Mako not available
[INFO    ] Executing command '/sbin/zfs help' in directory '/root'
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /usr/local/etc/salt/pki/minion/minion.pem
[DEBUG   ] Missing configuration file: /usr/local/etc/salt/minion
[DEBUG   ] Including configuration from '/usr/local/etc/salt/minion.d/_defaults.conf'
[DEBUG   ] Reading configuration from /usr/local/etc/salt/minion.d/_defaults.conf
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /usr/local/etc/salt/pki/minion/minion.pem
[DEBUG   ] Loaded minion key: /usr/local/etc/salt/pki/minion/minion.pem
[INFO    ] Loading fresh modules for state activity
[INFO    ] Executing command '/sbin/zfs help' in directory '/root'
[INFO    ] Fetching file from saltenv 'base', ** skipped ** latest already in cache 'salt://top.sls'
[DEBUG   ] Jinja search path: ['/var/cache/salt/minion/files/base']
[DEBUG   ] Rendered data from file: /var/cache/salt/minion/files/base/top.sls:
base:
   '*':
      - salt.minion

   'roles:salt_master':
      - match: grain
      - salt.master

[DEBUG   ] Results of YAML rendering:
OrderedDict([('base', OrderedDict([('*', ['salt.minion']), ('roles:salt_master', [OrderedDict([('match', 'grain')]), 'salt.master'])]))])
[DEBUG   ] Fetching file from saltenv 'style-short-dec', ** attempting ** 'salt://top.sls'
[ERROR   ] Data is
[DEBUG   ] LazyLoaded .returner
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /usr/local/etc/salt/pki/minion/minion.pem
local:
    Data failed to compile:
----------
    Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/salt/state.py", line 2853, in call_highstate
    top = self.get_top()
  File "/usr/local/lib/python2.7/site-packages/salt/state.py", line 2355, in get_top
    tops = self.get_tops()
  File "/usr/local/lib/python2.7/site-packages/salt/state.py", line 2228, in get_tops
    saltenv
  File "/usr/local/lib/python2.7/site-packages/salt/fileclient.py", line 147, in cache_file
    return self.get_url(path, '', True, saltenv)
  File "/usr/local/lib/python2.7/site-packages/salt/fileclient.py", line 522, in get_url
    return self.get_file(url, dest, makedirs, saltenv)
  File "/usr/local/lib/python2.7/site-packages/salt/fileclient.py", line 992, in get_file
    if not data['data']:
TypeError: string indices must be integers, not str
```

the master is configured like this

``` yaml
fileserver_backend:
  - git
  - roots

gitfs_provider: gitpython
gitfs_remotes:
    - git+ssh://user@server/volume1/git/saltmaster-dev.git
    - https://github.com/eedgar/users-formula.git
    - https://github.com/eedgar/salt-formula.git
ext_pillar:
  - git: master ssh://user@server/volume1/git/saltpillar-dev.git
```

the minion was configured like this

``` yaml
master: localhost
grains: {'roles': ['salt_master']}
providers: {'pkg': 'pkgng'}
startup_states: highstate
```

the top.sls

``` yaml
base:
   '*':
      - salt.minion

   'roles:salt_master':
      - match: grain
      - salt.master
```
