## Example

The following state file for parameterized/templated `openvpn` service will fail with `systemd`:

```
openvpn:
    service.running:
        - name: openvpn@example.com
        - enable: True
```

Service `openvpn` is parameterized/templated, and its unit file name `openvpn@.service` is different from instantiated service names like `openvpn@example.com`:

```
systemctl enable openvpn@example.com
```

Because Salt lists unit files before running any `systemd` command to manage services, it will report this problem:

```
[INFO    ] Executing command 'systemctl --full list-unit-files | col -b' in directory '/root'
[ERROR   ] The named service openvpn@example.com is not available
```
## Versions

Fedora 19 x86_64

```
salt --versions-report
           Salt: 0.17.1
         Python: 2.7.5 (default, Oct  8 2013, 12:19:40)
         Jinja2: 2.6
       M2Crypto: 0.21.1
 msgpack-python: 0.1.13
   msgpack-pure: Not Installed
       pycrypto: 2.6.1
         PyYAML: 3.10
          PyZMQ: 13.0.0
            ZMQ: 3.2.4
```

```
rpm -qf /bin/systemd
systemd-204-17.fc19.x86_64
```
## See Also

The following issues seem related:
- #2191
- #1908

Links:
- https://groups.google.com/forum/#!searchin/salt-users/systemd/salt-users/Ll9NagwXIsk/WKBIUVCOYFkJ
## Workaround

For basic service management (enable/disable, start/stop) explicit `systemctl` commands can be used:

``` YAML
...
openvpn_enable:
    cmd.run:
        - name: "systemctl enable openvpn@example.com"
        - require:
            - pkg: openvpn
            - file: /etc/openvpn/example.com.conf
            ...

openvpn_start:
    cmd.run:
        - name: "systemctl start openvpn@example.com"
        - require:
            - cmd: openvpn_enable
...
```
