I'm trying to get the GCE salt-cloud plugin going.

So far:

```
130 client@rabbit:/usr/local/lib/python2.7/dist-packages/salt/cloud/clouds sudo pip install apache-libcloud
Requirement already satisfied: apache-libcloud in /usr/local/lib/python2.7/dist-packages
client@rabbit:/usr/local/lib/python2.7/dist-packages/salt/cloud/clouds
client@rabbit:/usr/local/lib/python2.7/dist-packages/salt/cloud/clouds sudo salt-cloud --list-sizes gce-google
[WARNING ] Missing dependency: 'libcloud'. The gce driver requires 'libcloud' to be installed.
[WARNING ] The cloud driver, 'gce', configured under the 'gce-google' cloud provider alias, could not be loaded. Please check your provider configuration files and ensure all required dependencies are installed for the 'gce' driver.
In rare cases, this could indicate the 'gce.get_configured_provider()' function could not be found.
Removing 'gce' from the available providers list
Error: There was an error listing sizes: No cloud providers matched 'gce-google'. Available selections: vultr, scaleway, linode, digital_ocean
```

The issue appears to be a missing (optional?) dependency of libcloud, that's not percolating back through the interface properly:

```
130 client@rabbit:/usr/local/lib/python2.7/dist-packages/salt/cloud/clouds sudo python
Python 2.7.6 (default, Oct 26 2016, 20:30:19)
[GCC 4.8.4] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import libcloud
>>> from libcloud.compute.types import Provider
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python2.7/dist-packages/libcloud/compute/types.py", line 19, in <module>
    from libcloud.common.types import LibcloudError, MalformedResponseError
  File "/usr/local/lib/python2.7/dist-packages/libcloud/common/types.py", line 16, in <module>
    from libcloud.utils.py3 import httplib
  File "/usr/local/lib/python2.7/dist-packages/libcloud/utils/py3.py", line 67, in <module>
    from backports.ssl_match_hostname import match_hostname, CertificateError  # NOQA
ImportError: No module named backports.ssl_match_hostname
>>>
```

```
client@rabbit:/usr/local/lib/python2.7/dist-packages/salt/cloud/clouds sudo pip install backports.ssl_match_hostname
Collecting backports.ssl_match_hostname
/usr/local/lib/python2.7/dist-packages/pip/_vendor/requests/packages/urllib3/util/ssl_.py:318: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#snimissingwarning.
  SNIMissingWarning
/usr/local/lib/python2.7/dist-packages/pip/_vendor/requests/packages/urllib3/util/ssl_.py:122: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#insecureplatformwarning.
  InsecurePlatformWarning
Installing collected packages: backports.ssl-match-hostname
Successfully installed backports.ssl-match-hostname-3.5.0.1
client@rabbit:/usr/local/lib/python2.7/dist-packages/salt/cloud/clouds sudo python
Python 2.7.6 (default, Oct 26 2016, 20:30:19)
[GCC 4.8.4] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> from libcloud.compute.types import Provider
>>>
```

Arguably, this is an upstream bug in the `apache-libcloud` project's `requirements.txt`, but right now there's no sane diagnostics on how a partial install of `libcloud` can cause issues. 

It'd be nice to have some way of getting internal feedback on what's wrong if libcloud fails to import entirely. I only was able to diagnose this issue by pulling out the imports from the `cloud/clouds/gce.py` and trying them manually in an interactive session. 

Is there any way of logging for diagnostics during setup? I tries passing variants of `-v` to `salt-cloud`, but apparently that's not a option.