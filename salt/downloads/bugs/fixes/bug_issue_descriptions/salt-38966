### Description of Issue
Running state.apply in testmode detects a given postgres-extension as missing even if it is installed. Actually running state.apply on the other hand, won't change anything, as it detects the postgres-extension correctly as installed.
 

### Setup

postgres.sls
````
gitlab-database:
[...]
  postgres_extension.present:
    - name: pg_trgm
    - maintenance_db: gitlab
    - require:
        - postgres_database: gitlab
[...]
````


### Steps to Reproduce Issue
1. configure a minion to host a database (gitlab) and install an (pg_trgm) extension into this database (either manual or by tusing the given state artifact)
2. query this minion, if the extension (pg_trgm) is installed in the database: `salt 'minion' postgres.is_installed_extension name=pg_trgm maintenance_db=database`, the returned result should be _True_
3. run `salt 'minion' state.apply` which should report no changes
3. now run the same command again in test mode: `salt 'minion' state.apply test=True` and see, it reports the postgres extension as missing


### Versions Report
Salt Version:
           Salt: 2016.11.1
 
Dependency Versions:
           cffi: 1.9.1
       cherrypy: Not Installed
       dateutil: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.9.4
        libgit2: 0.24.3
        libnacl: Not Installed
       M2Crypto: 0.24.0
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: Not Installed
      pycparser: 2.17
       pycrypto: 2.6.1
         pygit2: 0.24.2
         Python: 2.7.13 (default, Dec 21 2016, 07:16:46)
   python-gnupg: Not Installed
         PyYAML: 3.12
          PyZMQ: 16.0.2
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.4.2
            ZMQ: 4.2.0
 
System Versions:
           dist:   
        machine: x86_64
        release: 4.7.4-1-ARCH
         system: Linux
        version: Not Installed

