Sorry about the vague title, but I have no clue what it going on. I was having files on the salt master not be available on the minions as well as two other problems (shown below). I upgraded from Helium rc3 to Helium rc5. I no longer have the file availablity problems. However, I still have the other two problems.

Using salt-call I can get this odd error message:

```
root salt-master /var/run/salt/master $ salt-call test.ping
[ERROR   ] An un-handled exception was caught by salt's global exception handler:
TypeError: string indices must be integers, not str
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    salt_call()
  File "/usr/lib/python2.7/dist-packages/salt/scripts.py", line 122, in salt_call
    client.run()
  File "/usr/lib/python2.7/dist-packages/salt/cli/__init__.py", line 409, in run
    caller = salt.cli.caller.Caller.factory(self.config)
  File "/usr/lib/python2.7/dist-packages/salt/cli/caller.py", line 64, in factory
    return ZeroMQCaller(opts, **kwargs)
  File "/usr/lib/python2.7/dist-packages/salt/cli/caller.py", line 87, in __init__
    self.minion = salt.minion.SMinion(opts)
  File "/usr/lib/python2.7/dist-packages/salt/minion.py", line 265, in __init__
    self.gen_modules()
  File "/usr/lib/python2.7/dist-packages/salt/minion.py", line 277, in gen_modules
    self.opts['environment'],
  File "/usr/lib/python2.7/dist-packages/salt/pillar/__init__.py", line 91, in compile_pillar
    ret_pillar = self.sreq.crypted_transfer_decode_dictentry(load, dictkey='pillar', tries=3, timeout=7200)
  File "/usr/lib/python2.7/dist-packages/salt/transport/__init__.py", line 236, in crypted_transfer_decode_dictentry
    aes = key.private_decrypt(ret['key'], 4)
TypeError: string indices must be integers, not str
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    salt_call()
  File "/usr/lib/python2.7/dist-packages/salt/scripts.py", line 122, in salt_call
    client.run()
  File "/usr/lib/python2.7/dist-packages/salt/cli/__init__.py", line 409, in run
    caller = salt.cli.caller.Caller.factory(self.config)
  File "/usr/lib/python2.7/dist-packages/salt/cli/caller.py", line 64, in factory
    return ZeroMQCaller(opts, **kwargs)
  File "/usr/lib/python2.7/dist-packages/salt/cli/caller.py", line 87, in __init__
    self.minion = salt.minion.SMinion(opts)
  File "/usr/lib/python2.7/dist-packages/salt/minion.py", line 265, in __init__
    self.gen_modules()
  File "/usr/lib/python2.7/dist-packages/salt/minion.py", line 277, in gen_modules
    self.opts['environment'],
  File "/usr/lib/python2.7/dist-packages/salt/pillar/__init__.py", line 91, in compile_pillar
    ret_pillar = self.sreq.crypted_transfer_decode_dictentry(load, dictkey='pillar', tries=3, timeout=7200)
  File "/usr/lib/python2.7/dist-packages/salt/transport/__init__.py", line 236, in crypted_transfer_decode_dictentry
    aes = key.private_decrypt(ret['key'], 4)
TypeError: string indices must be integers, not str
```

While running salt normally I can get what is probably the same error:

```
Failed to authenticate!  This is most likely because this user is not permitted to execute commands, but there is a small possibility that a disk error ocurred (check disk/inode usage).
```

Some of the times it just works though. If I had to guess, I would say it is about half the time. Also, on the second on, some minions may return correctly before this error happens.

I am using Ubuntu 12.04.4.
I have been running this salt master for a while. I was using the salt master with no problem when this started happening. It seemed that everything just stopped working correctly in the middle of a session of working on my states.
