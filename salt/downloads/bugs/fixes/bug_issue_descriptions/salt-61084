**Description**

`salt minion1 sys.argspec pillar.get` times out on the master. There is a traceback on the minion with the error `TypeError: can not serialize 'type' object`

**Setup**

Use any recent version of salt.

- [x] on-prem machine
- [ ] VM (Virtualbox, KVM, etc. please specify)
- [ ] VM running on a cloud service, please be explicit and add details
- [x] container (Docker centos 7)
- [ ] or a combination, please be explicit
- [ ] jails if it is FreeBSD

  
**Steps to Reproduce the behavior**

`salt minion1 sys.argspec pillar.get`

The job will not return due to a failure on the minion:

```python
TypeError: can not serialize 'type' object
Process ProcessPayload:
Traceback (most recent call last):
  File "/usr/lib64/python3.6/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/local/lib/python3.6/site-packages/salt/utils/process.py", line 895, in wrapped_run_func
    return run_func()
  File "/usr/lib64/python3.6/multiprocessing/process.py", line 93, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.6/site-packages/salt/minion.py", line 1803, in _target
    run_func(minion_instance, opts, data)
  File "/usr/local/lib/python3.6/site-packages/salt/minion.py", line 1797, in run_func
    return Minion._thread_return(minion_instance, opts, data)
  File "/usr/local/lib/python3.6/site-packages/salt/minion.py", line 2021, in _thread_return
    ret, timeout=minion_instance._return_retry_timer()
  File "/usr/local/lib/python3.6/site-packages/salt/minion.py", line 2224, in _return_pub
    ret_val = self._send_req_sync(load, timeout=timeout)
  File "/usr/local/lib/python3.6/site-packages/salt/minion.py", line 1588, in _send_req_sync
    load, timeout=timeout, tries=self.opts["return_retry_tries"]
  File "/usr/local/lib/python3.6/site-packages/salt/utils/asynchronous.py", line 126, in wrap
    six.reraise(*results[1])
  File "/usr/local/lib/python3.6/site-packages/salt/ext/six.py", line 693, in reraise
    raise value
  File "/usr/local/lib/python3.6/site-packages/salt/utils/asynchronous.py", line 132, in _target
    result = io_loop.run_sync(lambda: getattr(self.obj, key)(*args, **kwargs))
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/ioloop.py", line 459, in run_sync
    return future_cell[0].result()
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/concurrent.py", line 249, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 4, in raise_exc_info
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/gen.py", line 1064, in run
    yielded = self.gen.throw(*exc_info)
  File "/usr/local/lib/python3.6/site-packages/salt/transport/zeromq.py", line 444, in send
    load, tries=tries, timeout=timeout, raw=raw
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/gen.py", line 1056, in run
    value = future.result()
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/concurrent.py", line 249, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 4, in raise_exc_info
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/gen.py", line 1064, in run
    yielded = self.gen.throw(*exc_info)
  File "/usr/local/lib/python3.6/site-packages/salt/transport/zeromq.py", line 413, in _crypted_transfer
    ret = yield _do_transfer()
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/gen.py", line 1056, in run
    value = future.result()
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/concurrent.py", line 249, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 4, in raise_exc_info
  File "/usr/local/lib/python3.6/site-packages/salt/ext/tornado/gen.py", line 309, in wrapper
    yielded = next(result)
  File "/usr/local/lib/python3.6/site-packages/salt/transport/zeromq.py", line 394, in _do_transfer
    self._package_load(self.auth.crypticle.dumps(load)),
  File "/usr/local/lib/python3.6/site-packages/salt/crypt.py", line 1538, in dumps
    return self.encrypt(self.PICKLE_PAD + self.serial.dumps(obj))
  File "/usr/local/lib/python3.6/site-packages/salt/payload.py", line 196, in dumps
    msg, default=ext_type_encoder, use_bin_type=use_bin_type
  File "/usr/local/lib/python3.6/site-packages/salt/utils/msgpack.py", line 133, in packb
    return msgpack.packb(o, **_sanitize_msgpack_kwargs(kwargs))
  File "/usr/local/lib64/python3.6/site-packages/msgpack/__init__.py", line 35, in packb
    return Packer(**kwargs).pack(o)
  File "msgpack/_packer.pyx", line 292, in msgpack._cmsgpack.Packer.pack
  File "msgpack/_packer.pyx", line 298, in msgpack._cmsgpack.Packer.pack
  File "msgpack/_packer.pyx", line 295, in msgpack._cmsgpack.Packer.pack
  File "msgpack/_packer.pyx", line 231, in msgpack._cmsgpack.Packer._pack
  File "msgpack/_packer.pyx", line 231, in msgpack._cmsgpack.Packer._pack
  File "msgpack/_packer.pyx", line 231, in msgpack._cmsgpack.Packer._pack
  File "msgpack/_packer.pyx", line 264, in msgpack._cmsgpack.Packer._pack
  File "msgpack/_packer.pyx", line 289, in msgpack._cmsgpack.Packer._pack
```

`pillar.get` has this signature:
```python
def get(
    key,
    default=KeyError,
    merge=False,
    merge_nested_lists=None,
    delimiter=DEFAULT_TARGET_DELIM,
    pillarenv=None,
    saltenv=None,
):
```

The default value of `default` is not serializable, so the argspec payload is not serializable either.

There are a few ways to fix this:
- Sanitize the payload in `salt.utils.args.argspec_report()`
- Catch the exception when the serialization fails and report an error
- Some other way that a salt expert will come up with

**Expected behavior**

Graceful handling of the case where a function argument has a non-serializable default value

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
Salt Version:
          Salt: 3003

Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: Not Installed
     docker-py: Not Installed
         gitdb: Not Installed
     gitpython: Not Installed
        Jinja2: 3.0.0
       libgit2: Not Installed
      M2Crypto: Not Installed
          Mako: Not Installed
       msgpack: 1.0.2
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: Not Installed
      pycrypto: Not Installed
  pycryptodome: 3.10.1
        pygit2: Not Installed
        Python: 3.6.8 (default, Nov 16 2020, 16:55:22)
  python-gnupg: Not Installed
        PyYAML: 5.4.1
         PyZMQ: 22.0.3
         smmap: Not Installed
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.3.4

Salt Extensions:
        sseape: 8.5.1.2

System Versions:
          dist: centos 7 Core
        locale: ANSI_X3.4-1968
       machine: x86_64
       release: 5.14.12-arch1-1
        system: Linux
       version: CentOS Linux 7 Core
```
</details>

**Additional context**

n/a
