### Description of Issue/Question
Hi,

If one uses spaces for the name/id of cmd.script, salt uses everything after the first white as arguments, even if args is set.

https://github.com/saltstack/salt/blob/v2016.11.5/salt/states/cmd.py#L1084

### Setup
```
# powershell3.sls
{%- set ps3_url = 'http://repo.domain.tld/windows/microsoft/windows_management_framework_3.0/Windows6.1-KB2506143-x86.msu' %}
{%- if grains['cpuarch'] == 'AMD64' %}
{%- set ps3_url = 'http://repo.domain.tld/windows/microsoft/windows_management_framework_3.0/Windows6.1-KB2506143-x64.msu' %}
{%- endif -%}

Install Powershell 3:
  cmd.script:
    - source: {{ps3_url}}
    - args: "/norestart /quiet"
    - onlyif: 'powershell -NonInteractive -NoProfile -Command "If ($PSVersionTable.PSVersion.Major -ne 2){Exit 1}"'
```
### Steps to Reproduce Issue
```
C:\Users\me>salt-call state.apply powershell3 -ldebug
[DEBUG   ] Reading configuration from c:\salt\conf\minion
[DEBUG   ] Configuration file path: c:\salt\conf\minion
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[DEBUG   ] Reading configuration from c:\salt\conf\minion
[DEBUG   ] Determining pillar cache
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] compile template: C:\Users\me\Desktop\srv\pillars\top.sls
[WARNING ] Template is an empty file: C:\Users\me\Desktop\srv\pillars\top.sls
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] LazyLoaded state.apply
[DEBUG   ] LazyLoaded saltutil.is_running
[DEBUG   ] LazyLoaded grains.get
[DEBUG   ] LazyLoaded roots.envs
[DEBUG   ] Could not LazyLoad roots.init: 'roots.init' is not available.
[DEBUG   ] Updating roots fileserver cache
[DEBUG   ] Determining pillar cache
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] compile template: C:\Users\me\Desktop\srv\pillars\top.sls
[WARNING ] Template is an empty file: C:\Users\me\Desktop\srv\pillars\top.sls
[INFO    ] Loading fresh modules for state activity
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] In saltenv 'base', looking at rel_path 'powershell3.sls' to resolve 'salt://powershell3.sls'
[DEBUG   ] In saltenv 'base', ** considering ** path 'c:\salt\var\cache\salt\minion\files\base\powershell3.sls' to resolve 'salt://powershell3.sls'
[DEBUG   ] compile template: c:\salt\var\cache\salt\minion\files\base\powershell3.sls
[DEBUG   ] Jinja search path: ['c:\\salt\\var\\cache\\salt\\minion\\files\\base']
[PROFILE ] Time (in seconds) to render 'c:\salt\var\cache\salt\minion\files\base\powershell3.sls' using 'jinja' renderer: 0.0
[DEBUG   ] Rendered data from file: c:\salt\var\cache\salt\minion\files\base\powershell3.sls:
Install Powershell 3:
  cmd.script:
    - source: https://repo.domain.tld/windows/microsoft/windows_management_framework_3.0/Windows6.1-KB2506143-x64.msu
    - args: "/norestart /quiet"
    - onlyif: 'powershell -NonInteractive -NoProfile -Command "If ($PSVersionTable.PSVersion.Major -ne 2){Exit 1}"'
[DEBUG   ] LazyLoaded config.get
[DEBUG   ] Results of YAML rendering:
OrderedDict([('Install Powershell 3', OrderedDict([('cmd.script', [OrderedDict([('source', 'https://repo.domain.tld/windows/microsoft/windows_management_framework_3
.0/Windows6.1-KB2506143-x64.msu')]), OrderedDict([('args', '/norestart /quiet')]), OrderedDict([('onlyif', 'powershell -NonInteractive -NoProfile -Command "If (
$PSVersionTable.PSVersion.Major -ne 2){Exit 1}"')])])]))])
[PROFILE ] Time (in seconds) to render 'c:\salt\var\cache\salt\minion\files\base\powershell3.sls' using 'yaml' renderer: 0.0150001049042
[DEBUG   ] LazyLoaded cmd.script
[INFO    ] Running state [Install Powershell 3] at time 13:36:09.170000
[INFO    ] Executing state cmd.script for Install Powershell 3
[DEBUG   ] LazyLoaded cmd.retcode
[INFO    ] Executing command 'powershell -NonInteractive -NoProfile -Command "If ($PSVersionTable.PSVersion.Major -ne 2){Exit 1}"' in directory 'C:\Users\me'
[DEBUG   ] output:
[DEBUG   ] Last command return code: 0
[DEBUG   ] LazyLoaded cp.cache_file
[DEBUG   ] LazyLoaded roots.envs
[DEBUG   ] Could not LazyLoad roots.init: 'roots.init' is not available.
[DEBUG   ] Requesting URL https://repo.domain.tld/windows/microsoft/windows_management_framework_3.0/Windows6.1-KB2506143-x64.msu using GET method
[INFO    ] Executing command 'c:\users\me\appdata\local\temp\tmpckg3t8.msu Powershell 3' in directory 'C:\Users\me'
[DEBUG   ] LazyLoaded file.remove
[ERROR   ] {'pid': 3040, 'retcode': 87, 'stderr': '', 'stdout': ''}
[INFO    ] Completed state [Install Powershell 3] at time 13:36:20.328000 duration_in_ms=11158.0
[DEBUG   ] File c:\salt\var\cache\salt\minion\accumulator\100687544 does not exist, no need to cleanup.
[DEBUG   ] LazyLoaded config.option
[DEBUG   ] LazyLoaded cmd.run
[INFO    ] Executing command ['attrib', '-R', 'c:\\salt\\var\\cache\\salt\\minion\\sls.p'] in directory 'C:\Users\me'
[DEBUG   ] output:
[DEBUG   ] LazyLoaded highstate.output
[DEBUG   ] LazyLoaded nested.output
local:
----------
          ID: Install Powershell 3
    Function: cmd.script
      Result: False
     Comment: Command 'Install Powershell 3' run
     Started: 13:36:09.170000
    Duration: 11158.0 ms
     Changes:
              ----------
              pid:
                  3040
              retcode:
                  87
              stderr:
              stdout:

Summary for local
------------
Succeeded: 0 (changed=1)
Failed:    1
------------
Total states run:     1
Total run time:  11.158 s
```

### Workaround
```
# powershell3.sls
{%- set ps3_url = 'https://repo.domain.tld/windows/microsoft/windows_management_framework_3.0/Windows6.1-KB2506143-x86.msu' %}
{%- if grains['cpuarch'] == 'AMD64' %}
{%- set ps3_url = 'https://repo.domain.tld/windows/microsoft/windows_management_framework_3.0/Windows6.1-KB2506143-x64.msu' %}
{%- endif -%}

Install Powershell 3:
  cmd.script:
    - name: {{ps3_url}}
    - args: "/norestart /quiet"
    - onlyif: 'powershell -NonInteractive -NoProfile -Command "If ($PSVersionTable.PSVersion.Major -ne 2){Exit 1}"'
```

### Versions Report
Salt Version:
           Salt: 2016.11.5
 
Dependency Versions:
           cffi: 1.10.0
       cherrypy: unknown
       dateutil: 2.5.3
      docker-py: Not Installed
          gitdb: 0.6.4
      gitpython: 2.0.8
          ioflo: 1.5.5
         Jinja2: 2.9.4
        libgit2: Not Installed
        libnacl: 1.4.5
       M2Crypto: Not Installed
           Mako: 1.0.4
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: Not Installed
      pycparser: 2.17
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.12 (v2.7.12:d33e0cf91556, Jun 27 2016, 15:24:40) [MSC v.1500 64 bit (AMD64)]
   python-gnupg: 0.3.8
         PyYAML: 3.11
          PyZMQ: 16.0.1
           RAET: Not Installed
          smmap: 0.9.0
        timelib: 0.2.4
        Tornado: 4.4.1
            ZMQ: 4.1.6
 
System Versions:
           dist:   
        machine: AMD64
        release: 7
         system: Windows
        version: 7 6.1.7601 SP1 Multiprocessor Free