### Description of Issue/Question
According to [the documentation](https://github.com/saltstack/salt/blob/c850a94f0e341d68a98851cbda4b93963d8b8f76/salt/states/saltmod.py#L192) `saltmod.state` module must accept `roster` argument:

> roster
>         In the event of using salt-ssh, a roster system can be set

If you analyze [the code](https://github.com/saltstack/salt/blob/c850a94f0e341d68a98851cbda4b93963d8b8f76/salt/states/saltmod.py#L108) you'll see that `roster` argument is not handled in any way.

### Setup
This is a basic orchestrate SLS-file that reproduces the issue.
```
deploy:
  salt.state:
    - tgt: '*'
    - highstate: true
    - pillarenv: live
    - saltenv: live
    - ssh: true
    - roster: my_custom_roster_system
```

### Steps to Reproduce Issue
- Make any Salt-Orchestrate setup that uses `saltmod.state` function.
- Provide an alternative roster system through `roster` argument.
- Observe that the default `flat` roster system is still used.

### Versions Report
```
Salt Version:
           Salt: 2018.3.3
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.6.1
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.10
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 3.6.7 (default, Oct 22 2018, 11:32:17)
   python-gnupg: 0.4.1
         PyYAML: 3.12
          PyZMQ: 16.0.2
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.2.5
 
System Versions:
           dist: Ubuntu 18.04 bionic
         locale: ANSI_X3.4-1968
        machine: x86_64
        release: 4.15.0-43-generic
         system: Linux
        version: Ubuntu 18.04 bionic
```
