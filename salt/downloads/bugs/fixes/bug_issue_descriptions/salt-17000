Setting a custom interval for a schedule results in internal schedules (such as minion verification and gitfs refreshes) to run at the custom interval.

The 5 second interval should only impact the rate at which test.arg is run.

Given a schedule on master such as this:

``` yaml
schedule:
  test:
    function: test.arg
    seconds: 5
```

The following is logged:

```
2014-10-29 17:07:58,405 [salt.loaded.int.fileserver.gitfs][DEBUG   ] Fetching from http://...
2014-10-29 17:07:58,800 [salt.loaded.int.fileserver.gitfs][DEBUG   ] Gitfs received 0 objects for remote http://...
...
2014-10-29 17:08:01,144 [salt.utils.verify][DEBUG   ] This salt-master instance has accepted 2 minion keys.
2014-10-29 17:08:01,144 [salt.utils.schedule][INFO    ] Running scheduled job: test
2014-10-29 17:08:01,144 [salt.utils.schedule][DEBUG   ] schedule: This job was scheduled with jid_include, adding to cache (jid_include defaults to True)
2014-10-29 17:08:01,144 [salt.utils.schedule][DEBUG   ] schedule: This job was scheduled with a max number of 1
2014-10-29 17:08:01,150 [salt.utils.schedule][DEBUG   ] schedule.handle_func: adding this job to the jobcache with data {'fun': 'test.arg', 'jid': '20141029170801146116', 'pid': 25222, 'id': 'dev-template_master', 'schedule': 'test'}
2014-10-29 17:08:06,170 [salt.loaded.int.fileserver.gitfs][DEBUG   ] Fetching from http://...
2014-10-29 17:08:06,457 [salt.loaded.int.fileserver.gitfs][DEBUG   ] Gitfs received 0 objects for remote http://...
...
2014-10-29 17:08:07,903 [salt.utils.verify][DEBUG   ] This salt-master instance has accepted 2 minion keys.
2014-10-29 17:08:07,903 [salt.utils.schedule][INFO    ] Running scheduled job: test
2014-10-29 17:08:07,903 [salt.utils.schedule][DEBUG   ] schedule: This job was scheduled with jid_include, adding to cache (jid_include defaults to True)
2014-10-29 17:08:07,903 [salt.utils.schedule][DEBUG   ] schedule: This job was scheduled with a max number of 1
2014-10-29 17:08:07,909 [salt.utils.schedule][DEBUG   ] schedule.handle_func: adding this job to the jobcache with data {'fun': 'test.arg', 'jid': '20141029170807905408', 'pid': 25225, 'id': 'dev-template_master', 'schedule': 'test'}
```
