I just ran a simple test of what's going on in makedirs_ because I couldn't understand why a directory wasn't being created on the minion.  The sample below shows a directory I know to exist on the host, and the command that is being used in makedirs_ to assign the path to dirname.  Note that I did not include the trailing slash on the path.

```
Python 2.6.6 (r266:84292, Jan 22 2014, 09:42:36)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-4)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import os.path
>>> os.path.normpath(os.path.dirname('/etc/salt'))
'/etc'
>>>
```

The message to the user is wrong, since dirname was the value that was tested by os.path.isdir but path is the value sent back to the user in the return message.  

``` python
dirname = os.path.normpath(os.path.dirname(path))

    if os.path.isdir(dirname):
        # There's nothing for us to do
        return 'Directory {0!r} already exists'.format(path)
```

I'm not sure what would be preferable here as a solution:
1. Change documentation to reflect that path must include the trailing slash?
2. Append a trailing slash to path and expect os.path.normpath to fix any double slashes?
3. Change the return message formatting to report on the actual value tested?
