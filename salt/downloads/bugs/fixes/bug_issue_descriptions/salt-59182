### Description of Issue
I try to send requests to salt-api using yaml formated requests. It seems that salt-api or cherry_py is ignoring arguments i provide is there is more than 2 arguments.

### Setup
Enable salt-api


### Steps to Reproduce Issue
1) Login to salt-api
2) Send command (with curl):

```
curl  https://mysaltmaster:443/  -d 'client=local' -d 'tgt=myminion' -d 'fun=grains.set' -d 'arg=app:app1:version' -d 'arg=1.0' -b /tmp/cookie

return:
- myminion:
    changes:
      '1.0': ''
    comment: ''
    result: true
```


I execute the command on the master:

`salt 'myminion' grains.set  app:app1:version 1.0`

And it works:

```
return:
- myminion:
      ----------
    changes:
        ----------
        app:
            ----------
            app1:
                ----------
                version:
                   1.0
    comment:
    result:
        True
```

I also tried to override the grains using force=True with salt-api:

```
curl  https://mysaltmaster:443/  -d 'client=local' -d 'tgt=myminion' -d 'fun=grains.set' -d 'arg=app:app1:version' -d 'arg=1.0' -d arg=force=True -b /tmp/cookie

return:
- xmsmut-asfecli01-itg.xms.fe.lan: "Passed invalid arguments to grains.set: set()
    missing 1 required positional argument: 'key'\n\n    Set a key to an arbitrary
    value. It is used like setval but works\n    with nested keys.\n\n    This function
    is conservative. It will only overwrite an entry if\n    its value and the given
    one are not a list or a dict. The ``force``\n    parameter is used to allow overwriting
    in all cases.\n\n    .. versionadded:: 2015.8.0\n\n    :param force: Force writing
    over existing entry if given or existing\n                  values are list or
    dict. Defaults to False.\n    :param destructive: If an operation results in a
    key being removed,\n                  delete the key, too. Defaults to False.\n
    \   :param delimiter:\n        Specify an alternate delimiter to use when traversing
    a nested dict,\n        the default being ``:``\n\n    CLI Example:\n\n    ..
    code-block:: bash\n\n        salt '*' grains.set 'apps:myApp:port' 2209\n        salt
    '*' grains.set 'apps:myApp' '{port: 2209}'\n    "
```

It seems that the key (arg=app:app1:version) is ignored.

I also tried to send a state.apply of a sls file and played a highstate instead (still ignoring argument).

### Versions Report
(Provided by running `salt --versions-report`. Please also mention any differences in master/minion versions.)

Same version on master and minion:

```
Salt Version:
          Salt: 3002.2
 
Dependency Versions:
          cffi: 1.14.3
      cherrypy: unknown
      dateutil: 2.7.3
     docker-py: Not Installed
         gitdb: 2.0.5
     gitpython: 2.1.11
        Jinja2: 2.10
       libgit2: Not Installed
      M2Crypto: 0.31.0
          Mako: Not Installed
       msgpack: 0.5.6
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: 2.20
      pycrypto: 2.6.1
  pycryptodome: 3.6.1
        pygit2: Not Installed
        Python: 3.7.3 (default, Jul 25 2020, 13:03:44)
  python-gnupg: Not Installed
        PyYAML: 3.13
         PyZMQ: 17.1.2
         smmap: 2.0.5
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.3.1
 
System Versions:
          dist: debian 10 buster
        locale: UTF-8
       machine: x86_64
       release: 4.19.0-12-amd64
        system: Linux
       version: Debian GNU/Linux 10 buster
```
 
```
 dpkg -l|grep cherry
ii  python3-cherrypy3               8.9.1-2                             all          Python web development framework - Python 3 module
```

