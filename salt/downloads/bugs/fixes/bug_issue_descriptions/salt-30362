How to reproduce:

Create the user with all privileges first (but exclude grant_option key which defaults to False)

```
        states['foo-grant'] = {
            'mysql_grants.present': [
                {'grant': 'all privileges'},
                #{'grant_option': True},
                {'database': 'foo.*'},
                {'user': 'foo'},
                {'host': ip},
                {'connection_user': 'root'},
                {'connection_pass': root_password}
            ]
        }
```

Then uncomment:

```
                {'grant_option': True},
```

And run the state again.

I would expect that the user's Grant_priv to be added to the mysql user's table on a subsequent run since it should be idempotent.  If you delete the user manually, and run it again with `grant_option: True`, it works as expected, supplying the user with all grants, and the special Grant_priv.

I suspect that `mysql_grants.present` function is ensuring the state of the normal privileges, but ignoring checking the special Grant_priv if the user already exists.

My guess is that the issue might be in `mysql.grant_exists` but I haven't dug into it.

Edit:  Forgot to mention versions I'm using:

```
# salt-master --version
salt-master 2015.8.1 (Beryllium)
```

```
# salt-minion --version
salt-minion 2015.8.1 (Beryllium)
```
