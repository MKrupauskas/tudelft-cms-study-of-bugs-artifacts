Hi,
I'm using saltstack on CentOS 6. Versions:

```
Salt Version:
           Salt: 2015.8.3

Dependency Versions:
         Jinja2: 2.2.1
       M2Crypto: 0.20.2
           Mako: Not Installed
         PyYAML: 3.10
          PyZMQ: 14.5.0
         Python: 2.6.6 (r266:84292, Jul 23 2015, 15:22:56)
           RAET: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.5
           cffi: Not Installed
       cherrypy: 3.2.2
       dateutil: 1.4.1
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
        libnacl: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
   python-gnupg: Not Installed
          smmap: Not Installed
        timelib: Not Installed

System Versions:
           dist: centos 6.5 Final
        machine: x86_64
        release: 2.6.32-431.11.2.el6.x86_64
         system: CentOS 6.5 Final
```

The `test` module is working but a lot of others don't. Even with the core `grains.get`.

The error happens when executing `test.opts_pkg`. The output is not json, and the command ends with the error `Failed to return clean data`, the output shows:

```
_edbc7885e4f9aac9b83b35999b68d015148caf467b78fa39c05f669c0ff89878
{
    "local": {
        "fun_args": [], 
        "jid": "20151214150601918508", 
        "return": {
[...]
```

The issue is that there is this magic string `RSTR` from `salt/client/ssh/__init__.py` left in stdout.

Now, I've done some debugging and it seems that the stderr from the virtual terminal is redirected into stdout. Thus we have the `RSTR` string twice, and it is removed only once.

It seems to be in the `saltutil.vt` code that the `stderr` is received from the `term` inside the `stdout` stream. I'll try to understand why but I'm not familiar with that.

So a quick and dirty fix would be to ignore all stdout until the last `RSTR` string found.
