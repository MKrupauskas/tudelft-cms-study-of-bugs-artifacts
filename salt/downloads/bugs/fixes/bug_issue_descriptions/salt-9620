I was trying to do something like so in a sls:

``` yaml
/var/spool/cron/root:
  file.managed:
    - source:
      - salt://packages/cron/files/cron.{{ grains['host'] }}/root
      - salt://packages/cron/files/cron.{{ env }}-{{ grains['server_role']|default('') }}/root
      - salt://packages/cron/files/cron.{{ grains['server_role']|default('') }}/root
      - salt://packages/cron/files/cron.{{ env }}/root
    - user: root
    - group: root
```

and I noticed that if/when the source directory did not exist, salt would exit with an error like so:

```
    State: - file
    Name:      /var/spool/cron/root
    Function:  managed
        Result:    False
        Comment:   An exception occurred in this state: Traceback (most recent call last):
  File "/usr/lib/python2.6/site-packages/salt/state.py", line 1258, in call
    *cdata['args'], **cdata['kwargs'])
  File "/usr/lib/python2.6/site-packages/salt/states/file.py", line 1091, in managed
    **kwargs
  File "/usr/lib/python2.6/site-packages/salt/modules/file.py", line 1770, in check_managed
    **kwargs)
  File "/usr/lib/python2.6/site-packages/salt/modules/file.py", line 1588, in get_managed
    if salt._compat.urlparse(source).scheme == 'salt':
  File "/usr/lib64/python2.6/urlparse.py", line 129, in urlparse
    tuple = urlsplit(url, scheme, allow_fragments)
  File "/usr/lib64/python2.6/urlparse.py", line 162, in urlsplit
    cached = _parse_cache.get(key, None)
TypeError: unhashable type: 'list'
```

I'm not 100% sure this is a bug but it seems to me like if the source isn't matched then salt would just quietly move along.
