### Description of Issue/Question
s3.util is buffering objects to memory causing the minion process to be killed when dealing with large objects on low memory minions.
I believe the issue was introduced with the fix described in #34780 whereby the result content is loaded into response, voiding the request stream option.

### Steps to Reproduce Issue
```
salt-call --local s3.get bucket=[my-s3-bucket] path=[path-to-large-object] local_file=[path-to-local-file]
```

Debug output:
```
[DEBUG   ] Configuration file path: /etc/salt/minion
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/beacons.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/beacons.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/engine.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/engine.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/f_defaults.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/f_defaults.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/master.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/master.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/reactor.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/reactor.conf
[DEBUG   ] Please install 'virt-what' to improve results of the 'virtual' grain.
[DEBUG   ] Determining pillar cache
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] LazyLoaded s3.get
[DEBUG   ] LazyLoaded config.option
[DEBUG   ] LazyLoaded s3.query
[INFO    ] Starting new HTTP connection (1): 169.254.169.254
[DEBUG   ] "GET /latest/meta-data/iam/security-credentials/ HTTP/1.1" 200 38
[INFO    ] Starting new HTTP connection (1): 169.254.169.254
[DEBUG   ] "GET /latest/meta-data/iam/security-credentials/[instance-role] HTTP/1.1" 200 882
[DEBUG   ] S3 Request: https://[object-url]?
[DEBUG   ] S3 Headers::
[DEBUG   ]     Authorization: AWS4-HMAC-SHA256 Credential=XXXXXXXXXXXXXXXXXXXX/20170420/eu-west-1/s3/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
[INFO    ] Starting new HTTPS connection (1): [bucket-url]
[DEBUG   ] "GET [object-key] HTTP/1.1" 200 980930560
Killed
```

### Versions Report
```
Salt Version:
           Salt: 2016.11.3

Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.1
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.7.2
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: 0.21.1
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: 1.2.3
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
         Python: 2.7.12 (default, Sep  1 2016, 22:14:00)
   python-gnupg: Not Installed
         PyYAML: 3.10
          PyZMQ: 14.5.0
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.5

System Versions:
           dist:
        machine: x86_64
        release: 4.4.41-36.55.amzn1.x86_64
         system: Linux
        version: Not Installed
```

Issue noticed on 2016.11.3 but it should be present back to 2016.3 as well from looking at the history of s3 util.

PR on it's way.