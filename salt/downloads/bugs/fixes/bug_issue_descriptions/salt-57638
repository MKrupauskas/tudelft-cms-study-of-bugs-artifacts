**Description**
State mysql_query.run cannot use multiline queries in versions of PyMySQL after 0.7 (not sure about exact version). I suppose that this is intentional, but can we provide option to the state such as "client_flag: CLIENT.MULTI_STATEMENTS" in order to support multiline queries

**Setup**
```
state test multiline:
  mysql_query.run:
    - database: mysql
    - query: |
        SELECT * FROM user;
        SELECT * FROM db;
    - unix_socket: True
    - connection_unix_socket: /var/run/mysqld/mysqld.sock
```

**Steps to Reproduce the behavior**
Run the above state and receive error:
```
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "/usr/lib/python3/dist-packages/salt/state.py", line 1981, in call
                  **cdata['kwargs'])
                File "/usr/lib/python3/dist-packages/salt/loader.py", line 1977, in wrapper
                  return f(*args, **kwargs)
                File "/usr/lib/python3/dist-packages/salt/states/mysql_query.py", line 329, in run
                  query_result = __salt__['mysql.query'](database, query, **connection_args)
                File "/usr/lib/python3/dist-packages/salt/modules/mysql.py", line 748, in query
                  affected = _execute(cur, query)
                File "/usr/lib/python3/dist-packages/salt/modules/mysql.py", line 644, in _execute
                  return cur.execute(qry)
                File "/usr/local/lib/python3.6/dist-packages/pymysql/cursors.py", line 170, in execute
                  result = self._query(query)
                File "/usr/local/lib/python3.6/dist-packages/pymysql/cursors.py", line 328, in _query
                  conn.query(q)
                File "/usr/local/lib/python3.6/dist-packages/pymysql/connections.py", line 517, in query
                  self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                File "/usr/local/lib/python3.6/dist-packages/pymysql/connections.py", line 732, in _read_query_result
                  result.read()
                File "/usr/local/lib/python3.6/dist-packages/pymysql/connections.py", line 1075, in read
                  first_packet = self.connection._read_packet()
                File "/usr/local/lib/python3.6/dist-packages/pymysql/connections.py", line 684, in _read_packet
                  packet.check_error()
                File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
                  err.raise_mysql_exception(self._data)
                File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
                  raise errorclass(errno, errval)
              pymysql.err.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SELECT * FROM db' at line 2")
```

**Expected behavior**
To receive output for both queries.

**Versions Report**
```
Salt Version:
           Salt: 3000.3
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: Not Installed
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
         Jinja2: 2.8.1
        libgit2: Not Installed
       M2Crypto: 0.35.2
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.6.2
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 3.6.8 (default, Aug  7 2019, 17:28:10)
   python-gnupg: Not Installed
         PyYAML: 3.12
          PyZMQ: 15.3.0
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.1.4
 
System Versions:
           dist: centos 7.7.1908 Core
         locale: UTF-8
        machine: x86_64
        release: 3.10.0-1062.9.1.el7.x86_64
         system: Linux
        version: CentOS Linux 7.7.1908 Core
```
Salt-minion is also version 3000.3

**Additional context**
I think adding flag as option to the state such as: client_flag: CLIENT.MULTI_STATEMENTS can resolve the issue. Please let me know what do you think and if this is applicable.
