According to my understanding of the grain load order, custom grains are loaded first, then core grains, and finally file based grains. It would conceptually make sense that as each step went along, it would override a grain set with the same name prior. What I'm seeing though is that if a custom grain sets a value, and the file based grains sets the same value, the custom grain will win.

To work around this I have added code to my custom grain to read in `/etc/salt/grains`, and check for the existence of the grain. If it's present, then I skip the loading of the grain, and let it get set via the file. This shouldn't be necessary though, because file based grains are much more specific to a minion than a programmed one.
