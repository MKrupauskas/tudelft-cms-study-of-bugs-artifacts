# Description of Issue/Question

I've currently been trying to integrate and send basic commands from my slack to my salt Master/Minions. The commands that I've been running haven't been running as intended, I'm also receiving an error message trying to receive the messages.

## Versions Report

```
Salt Version:
           Salt: 2018.3.0

Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.5.3
      docker-py: Not Installed
          gitdb: 0.5.4
      gitpython: 0.3.2 RC1
          ioflo: Not Installed
         Jinja2: 2.7.2
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: 0.9.1
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: 1.2.5
      pycparser: Not Installed
       pycrypto: Not Installed
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.6 (default, Oct 26 2016, 20:30:19)
   python-gnupg: Not Installed
         PyYAML: 3.10
          PyZMQ: 14.0.1
           RAET: Not Installed
          smmap: 0.8.2
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.5

System Versions:
           dist: Ubuntu 14.04 trusty
         locale: UTF-8
        machine: x86_64
        release: 3.13.0-105-generic
         system: Linux
        version: Ubuntu 14.04 trusty
```

## Setup Engine.conf
```
engines:
  - slack:
      token: 'xoxb-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
      control: True
      fire_all: False
      groups_pillar_name: 'slack_engine:groups_pillar'
      groups:
        default:
          users:
            - etong
          commands:
            - test.ping
            - cmd.run
            - list_jobs
            - list_commands
          aliases:
            list_jobs:
              cmd: jobs.list_jobs
            list_commands:
              cmd: pillar.get salt:engines:slack:valid_commands target=saltmaster tgt_type=list
          default_target:
            target: saltmaster
            tgt_type: glob
          targets:
            test.ping:
              target: '*'
              tgt_type: glob
            cmd.run:
              target: saltmaster
              tgt_type: list
```

Below are the logs I've received from the debug

! test.ping

### Debug Reports

```
Arguments:
Function:
    test.ping
Minions:
    - stage-scm-dev
    - stage-scm-eng
    - stage-swagger
    - stage-web-test
Result:
    stage-scm-dev:
        ----------
        retcode:
            0
        return:
            True
        success:
            True
    stage-scm-eng:
        ----------
        retcode:
            0
        return:
            True
        success:
            True
    stage-swagger:
        ----------
        retcode:
            0
        return:
            True
        success:
            True
    stage-web-test:
        ----------
        retcode:
            0
        return:
            True
        success:
            True
StartTime:
    2018, Apr 17 17:48:19.650335
Target:
    unknown-target
Target-type:
    list
User:
    root
jid:
    20180417174819650335
```

And this is the yml text I receive back from slack

```
[0;36mstage-web-test:[0;0m
[0;32m    True[0;0m
[0;36mstage-scm-eng:[0;0m
[0;32m    True[0;0m
[0;36mstage-scm-dev:[0;0m
[0;32m    True[0;0m
[0;36mstage-swagger:[0;0m
[0;32m    True[0;0m
```

However, if I run
! test.ping target=stage-scm-eng
The targeting works correctly, but the Target states its an unknown target and the return doesn't function properly.

```
[DEBUG   ] Sending event: tag = salt/run/20180417175417256333/ret; data = {u'fun_args': [u'20180417175416024408'], u'jid': u'20180417175417256333', u'return': {u'Function': 'test.ping', u'jid': u'20180417175416024408', u'Result': {u'stage-scm-eng': {'return': "ERROR executing 'test.ping': The following keyword arguments are not valid: target=stage-scm-eng", 'success': False, u'out': 'nested'}}, u'Target': u'unknown-target', u'Target-type': u'list', u'User': u'root', u'StartTime': u'2018, Apr 17 17:54:16.024408', u'Minions': ['stage-scm-eng'], u'Arguments': []}, u'success': True, u'_stamp': '2018-04-17T17:54:17.539202', u'user': u'UNKNOWN', u'fun': u'runner.jobs.list_job'}
[DEBUG   ] LazyLoaded nested.output
Arguments:
Function:
    test.ping
Minions:
    - stage-scm-eng
Result:
    ----------
    stage-scm-eng:
        ----------
        out:
            nested
        return:
            ERROR executing 'test.ping': The following keyword arguments are not valid: target=stage-scm-eng
        success:
            False
StartTime:
    2018, Apr 17 17:54:16.024408
Target:
    unknown-target
Target-type:
    list
User:
    root
jid:
    20180417175416024408
```

lastly, running cmd.run doesn't succeed for me

```
Eric Tong [11:10 AM]
! cmd.run 'echo hello'

SaltStack APP [11:10 AM]
@etong's job is submitted as salt jid 0
```

```
[DEBUG   ] Sending event: tag = minion/refresh/stage-scm-eng; data = {u'Minion data cache refresh': 'stage-scm-eng', u'_stamp': '2018-04-17T18:12:31.994565'}
[DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
[DEBUG   ] salt.crypt.get_rsa_key: Loading private key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] LazyLoaded pillar.get
[DEBUG   ] Got pillar groups  from pillar slack_engine:groups_pillar
[DEBUG   ] pillar groups is
[DEBUG   ] pillar groups type is <type 'unicode'>
[INFO    ] Trying to get default and {u'aliases': {u'list_commands': {u'cmd': u'pillar.get salt:engines:slack:valid_commands target=saltmaster tgt_type=list'}, u'list_jobs': {u'cmd': u'jobs.list_jobs'}}, u'commands': [u'test.ping', u'cmd.run', u'list_jobs', u'list_commands'], u'default_target': {u'tgt_type': u'glob', u'target': u'saltmaster'}, u'targets': {u'test.ping': {u'tgt_type': u'glob', u'target': u'*'}, u'cmd.run': {u'tgt_type': u'list', u'target': u'saltmaster'}}, u'users': [u'etong']} to be useful
[DEBUG   ] Got the groups: {u'default': {u'targets': {u'test.ping': {u'tgt_type': u'glob', u'target': u'*'}, u'cmd.run': {u'tgt_type': u'list', u'target': u'saltmaster'}}, u'commands': set([u'test.ping', u'list_commands', u'cmd.run', u'list_jobs']), u'default_target': {u'tgt_type': u'glob', u'target': u'saltmaster'}, u'users': set([u'etong']), u'aliases': {u'list_commands': {u'cmd': u'pillar.get salt:engines:slack:valid_commands target=saltmaster tgt_type=list'}, u'list_jobs': {u'cmd': u'jobs.list_jobs'}}}}
[INFO    ] etong wants to run cmd.run with groups {u'default': {u'targets': {u'test.ping': {u'tgt_type': u'glob', u'target': u'*'}, u'cmd.run': {u'tgt_type': u'list', u'target': u'saltmaster'}}, u'commands': set([u'test.ping', u'list_commands', u'cmd.run', u'list_jobs']), u'default_target': {u'tgt_type': u'glob', u'target': u'saltmaster'}, u'users': set([u'etong']), u'aliases': {u'list_commands': {u'cmd': u'pillar.get salt:engines:slack:valid_commands target=saltmaster tgt_type=list'}, u'list_jobs': {u'cmd': u'jobs.list_jobs'}}}}
[INFO    ] Slack user etong permitted to run cmd.run
[DEBUG   ] slack_user_name is etong and the permitted group is (u'default', {u'targets': {u'test.ping': {u'tgt_type': u'glob', u'target': u'*'}, u'cmd.run': {u'tgt_type': u'list', u'target': u'saltmaster'}}, u'commands': set([u'test.ping', u'list_commands', u'cmd.run', u'list_jobs']), u'default_target': {u'tgt_type': u'glob', u'target': u'saltmaster'}, u'users': set([u'etong']), u'aliases': {u'list_commands': {u'cmd': u'pillar.get salt:engines:slack:valid_commands target=saltmaster tgt_type=list'}, u'list_jobs': {u'cmd': u'jobs.list_jobs'}}})
[DEBUG   ] this cmdline has target [u'cmd.run', u'echo hello'].
[DEBUG   ] Got target: {u'tgt_type': u'list', u'target': u'saltmaster'}, cmdline: [u'cmd.run', u'echo hello']
[DEBUG   ] Going to run a command async
[DEBUG   ] target_type is: list
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Including configuration from '/etc/salt/master.d/engine.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/engine.conf
[DEBUG   ] Including configuration from '/etc/salt/master.d/roots.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/roots.conf
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: stage-scm-eng
[DEBUG   ] Missing configuration file: /root/.saltrc
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Command cmd.run will run via local.cmd_async, targeting saltmaster
[DEBUG   ] Running saltmaster, cmd.run, [u'echo hello'], {}, list
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for (u'/etc/salt/pki/master', u'stage-scm-eng_master', u'tcp://127.0.0.1:4506', u'clear')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://127.0.0.1:4506
[DEBUG   ] Trying to connect to: tcp://127.0.0.1:4506
No minions matched the target. No command was sent, no jid was assigned.
[INFO    ] ret from local.cmd_async is 0
[DEBUG   ] Submitted a job and got jid: 0
[DEBUG   ] LazyLoaded local_cache.get_jid
[DEBUG   ] Got an error from trying to get the message text This is not a message
```

Using most of the other commands, provide me with a JID 0