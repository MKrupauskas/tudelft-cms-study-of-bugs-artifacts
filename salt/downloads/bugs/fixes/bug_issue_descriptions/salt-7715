Due to inherited file attributes, when the minion initially writes C:\salt\var\cache\salt\minion\sls.p, it is created read-only, meaning that future write attempts fail.

I temporarily fixed this by adding a `salt.utils.is_windows()` check to both `state.highstate` and `state.sls`, right before these functions attempt to write to the cache file, and if the minion is Windows then `attrib -R filename` is run, removing the read-only attribute.

However, this is not a long-term solution, as 1) this can't be the only affected file write, and 2) the read-only attribute shows up again every time the file is written.

It seems like a more long-term solution would be to add some sanity checks to `salt.utils.fopen()`, but my Windows-fu is not what it should be, so if anyone else has an idea, I'm all ears.
