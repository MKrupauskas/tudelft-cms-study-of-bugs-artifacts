**Description**
I noticed an interesting problem.

I tried to run salt-run state.orch with a `salt.function` module of the`saltutil.sync_all` and passed the saltenv via kwargs of both salt-run and saltutil.sync_all and 

**Steps to Reproduce the behavior**

orch file with the:
```
salt.sync.function.sync_all:
  salt.function:
    - tgt: "*"
    - name: saltutil.sync_all
    - expect_minions: True
    - kwarg:
        saltenv: base
```
Run it from CLI like:
`salt-run state.orch orch.utils.sync saltenv=release`

I get the following result:

```
          ID: salt.sync.runner.clear_file_cache
    Function: salt.runner
        Name: fileserver.clear_file_list_cache
      Result: True
     Comment: Runner function 'fileserver.clear_file_list_cache' executed.
     Started: 17:24:15.395684
    Duration: 317.598 ms
     Changes:
              ----------
              return:

                  Passed invalid arguments: clear_file_list_cache() got multiple values for argument 'saltenv'
[CUT]
```

Note that:
- `Result: True`. I think it should be False if salt thinks it's an issue
- ` got multiple values for argument 'saltenv'` so it took `saltenv` twice somehow? From CLI and from function definition?
- It seems to be run fine if we look at the debug logs?..

<details><summary>Logs</summary>

```
[INFO    ] Running state [saltutil.sync_all] at time 17:23:24.422456
[INFO    ] Executing state salt.function for [saltutil.sync_all]
[DEBUG   ] MasterEvent PUB socket URI: /opt/salt/run/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /opt/salt/run/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/run/20210527172321827626/args; data = {'type': 'function', 'tgt': '*', 'name': 'saltutil.sync_all', 'args': {'arg': [], 'kwarg': OrderedDict([('saltenv', 'base'), ('refresh', True)]), 'ret': '', 'timeout': None, 'tgt_type': 'glob', 'ssh': False, 'expect_minions': True, '_cmd_meta': True, 'failhard': True}, '_stamp': '2021-05-27T17:23:24.425638'}
[DEBUG   ] Closing IPCMessageClient instance
[DEBUG   ] Reading configuration from /opt/salt/master
[DEBUG   ] Including configuration from '/opt/salt/master.d/salt-file-server.conf'
[DEBUG   ] Reading configuration from /opt/salt/master.d/salt-file-server.conf
[DEBUG   ] Including configuration from '/opt/salt/master.d/salt-logging.conf'
[DEBUG   ] Reading configuration from /opt/salt/master.d/salt-logging.conf
[DEBUG   ] Including configuration from '/opt/salt/master.d/salt-pillar.conf'
[DEBUG   ] Reading configuration from /opt/salt/master.d/salt-pillar.conf
[DEBUG   ] Including configuration from '/opt/salt/master.d/salt-proxy.conf'
[DEBUG   ] Reading configuration from /opt/salt/master.d/salt-proxy.conf
[DEBUG   ] Including configuration from '/opt/salt/master.d/salt-security.conf'
[DEBUG   ] Reading configuration from /opt/salt/master.d/salt-security.conf
[DEBUG   ] Including configuration from '/opt/salt/master.d/salt-ssh.conf'
[DEBUG   ] Reading configuration from /opt/salt/master.d/salt-ssh.conf
[DEBUG   ] Including configuration from '/opt/salt/master.d/salt-tunning.conf'
[DEBUG   ] Reading configuration from /opt/salt/master.d/salt-tunning.conf
[DEBUG   ] Including configuration from '/opt/salt/master.d/salt-vault.conf'
[DEBUG   ] Reading configuration from /opt/salt/master.d/salt-vault.conf
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: delme-salt-privileged-rm.aws.internal
[DEBUG   ] Missing configuration file: /opt/salt/.saltrc
[DEBUG   ] MasterEvent PUB socket URI: /opt/salt/run/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /opt/salt/run/master/master_event_pull.ipc
[DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('/opt/salt/pki/master', 'delme-salt-privileged-rm.aws.internal_master', 'tcp://127.0.0.1:4506', 'clear')
[DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://127.0.0.1:4506
[DEBUG   ] Trying to connect to: tcp://127.0.0.1:4506
[DEBUG   ] Closing AsyncZeroMQReqChannel instance
[DEBUG   ] LazyLoaded local_cache.get_load
[DEBUG   ] Reading minion list from /opt/salt/cache-master/jobs/56/d8f02f81b4837a381724fdece68a92/.minions.p
[DEBUG   ] get_iter_returns for jid 20210527172324463950 sent to {'delme-salt-privileged-rms', 'delme-salt-privileged-03', 'delme-salt-privileged-02', 'delme-salt-privileged-rm', 'delme-salt-privileged-01'} will timeout at 17:23:54.468852
[DEBUG   ] jid 20210527172324463950 return from delme-salt-privileged-03
[DEBUG   ] jid 20210527172324463950 return from delme-salt-privileged-01
[DEBUG   ] jid 20210527172324463950 return from delme-salt-privileged-rms
[DEBUG   ] jid 20210527172324463950 return from delme-salt-privileged-02
[DEBUG   ] jid 20210527172324463950 return from delme-salt-privileged-rm
[DEBUG   ] jid 20210527172324463950 found all minions {'delme-salt-privileged-rms', 'delme-salt-privileged-03', 'delme-salt-privileged-02', 'delme-salt-privileged-rm', 'delme-salt-privileged-01'}
[DEBUG   ] Closing IPCMessageSubscriber instance
[INFO    ] {'out': 'highstate', 'ret': {'delme-salt-privileged-03': {'clouds': [], 'beacons': [], 'modules': [], 'states': [], 'sdb': [], 'grains': [], 'renderers': [], 'returners': [], 'output': [], 'utils': [], 'log_handlers': [], 'executors': [], 'proxymodules': [], 'engines': [], 'thorium': [], 'serializers': [], 'matchers': []}, 'delme-salt-privileged-01': {'clouds': [], 'beacons': [], 'modules': [], 'states': [], 'sdb': [], 'grains': [], 'renderers': [], 'returners': [], 'output': [], 'utils': [], 'log_handlers': [], 'executors': [], 'proxymodules': [], 'engines': [], 'thorium': [], 'serializers': [], 'matchers': []}, 'delme-salt-privileged-rms': {'clouds': [], 'beacons': [], 'modules': [], 'states': [], 'sdb': [], 'grains': [], 'renderers': [], 'returners': [], 'output': [], 'utils': [], 'log_handlers': [], 'executors': [], 'proxymodules': [], 'engines': [], 'thorium': [], 'serializers': [], 'matchers': []}, 'delme-salt-privileged-02': {'clouds': [], 'beacons': [], 'modules': [], 'states': [], 'sdb': [], 'grains': [], 'renderers': [], 'returners': [], 'output': [], 'utils': [], 'log_handlers': [], 'executors': [], 'proxymodules': [], 'engines': [], 'thorium': [], 'serializers': [], 'matchers': []}, 'delme-salt-privileged-rm': {'clouds': [], 'beacons': [], 'modules': [], 'states': [], 'sdb': [], 'grains': [], 'renderers': [], 'returners': [], 'output': [], 'utils': [], 'log_handlers': [], 'executors': [], 'proxymodules': [], 'engines': [], 'thorium': [], 'serializers': [], 'matchers': []}}}
[INFO    ] Completed state [saltutil.sync_all] at time 17:23:27.052828 (duration_in_ms=2630.372)
```
</details>

**Expected behavior**
- `saltenv `should be an override, so if I pass it in CLI and in function definition the latest should be used.
- If function failed to execute result should not be `True`

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
Salt Version:
           Salt: 3001.3

Dependency Versions:
           cffi: 1.14.5
       cherrypy: Not Installed
       dateutil: Not Installed
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
         Jinja2: 2.11.3
        libgit2: Not Installed
       M2Crypto: 0.37.1
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 1.0.0
   mysql-python: Not Installed
      pycparser: 2.20
       pycrypto: Not Installed
   pycryptodome: 3.9.7
         pygit2: Not Installed
         Python: 3.6.8 (default, Nov 16 2020, 16:55:22)
   python-gnupg: Not Installed
         PyYAML: 5.3.1
          PyZMQ: 19.0.2
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.3.2

System Versions:
           dist: centos 7 Core
         locale: UTF-8
        machine: x86_64
        release: 3.10.0-1062.18.1.el7.x86_64
         system: Linux
        version: CentOS Linux 7 Core
```
</details>
