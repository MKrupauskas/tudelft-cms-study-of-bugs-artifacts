**Description**
After upgrading from Salt 2019.2.8 to 3000.8 the `mysql` module returns strings instead of bytes.
This issue is still present in master.

**Steps to Reproduce the behavior**
Just call `salt-call -l debug mysql.db_list` on 2019.2.8 and 3000.8 and observe the debug output.

2019.2.8:
```
[DEBUG   ] Doing query: SHOW DATABASES
[DEBUG   ] [b'information_schema', b'mysql', b'performance_schema']
```
3000.8:
```
[DEBUG   ] Doing query: SHOW DATABASES
[DEBUG   ] ['information_schema', 'mysql', 'performance_schema']
```

**Expected behavior**
The returned data should be bytes not str.

**Versions Report**
<details><summary>salt --versions-report for 2019.2.8</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
$ salt --versions-report
Salt Version:
           Salt: 2019.2.8
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.7.3
      docker-py: Not Installed
          gitdb: 2.0.5
      gitpython: 2.1.11
          ioflo: Not Installed
         Jinja2: 2.10
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: 1.3.10
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 3.7.3 (default, Jul 25 2020, 13:03:44)
   python-gnupg: Not Installed
         PyYAML: 3.13
          PyZMQ: 17.1.2
           RAET: Not Installed
          smmap: 2.0.5
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.3.1
 
System Versions:
           dist: debian 10.8 
         locale: UTF-8
        machine: x86_64
        release: 4.19.0-14-amd64
         system: Linux
        version: debian 10.8
```

</details>

<details><summary>salt --versions-report for 3000.8</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
$ salt --versions-report
Salt Version:
           Salt: 3000.8
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.7.3
      docker-py: Not Installed
          gitdb: 2.0.5
      gitpython: 2.1.11
         Jinja2: 2.10
        libgit2: Not Installed
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: 1.3.10
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 3.7.3 (default, Jul 25 2020, 13:03:44)
   python-gnupg: Not Installed
         PyYAML: 3.13
          PyZMQ: 17.1.2
          smmap: 2.0.5
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.3.1
 
System Versions:
           dist: debian 10.8 
         locale: UTF-8
        machine: x86_64
        release: 4.19.0-14-amd64
         system: Linux
        version: debian 10.8 
```

</details>


**Additional context**
This issue is caused by the following code from https://github.com/saltstack/salt/blob/v3000.8/salt/modules/mysql.py#L424-L426 which was added with e871a3ff in saltstack/salt#56174:
```py
    for key in copy.deepcopy(connargs):
        if not connargs[key]:
            del connargs[key]
```
While this removes all connection arguments that only contain an empty string, it also removes the
```py
connargs["use_unicode"] = False
```
which, according to the [comment](https://github.com/saltstack/salt/blob/v3000.8/salt/modules/mysql.py#L413-L419) in the file, was set deliberately set to `False`.

Digging a little bit more, I found that the actual cause of this is a change in `config.option`, introduced with 16ea106c in saltstack/salt#55637. [Here](https://github.com/saltstack/salt/commit/16ea106c95d303882515fda8d765e690e58f2205#diff-b6f11311043ef0bdb52a2cb3e858515fa1e9c66d187c16a9730a069de881d684L133-R139), the default value of the `default` parameter was changed from `''` to `None`, only to change it [further down](https://github.com/saltstack/salt/commit/16ea106c95d303882515fda8d765e690e58f2205#diff-b6f11311043ef0bdb52a2cb3e858515fa1e9c66d187c16a9730a069de881d684R172-R173) either back to `''` or to `{}` depending on whether wildcard support is enabled or not.

This leads to unexpected behavior and also breaks all calls to this function, that previously set `None` explicitly, like for example in the mysql module right [here](https://github.com/saltstack/salt/blob/v3000.8/salt/modules/mysql.py#L393).
```py
__salt__['config.option']('foo', None)
```
now returns an empty string instead of `None` as instructed.

--

I think the "proper" fix would be to change the config module as follows:
```diff
--- /usr/lib/python3/dist-packages/salt/modules/config.py	2021-02-08 15:37:42.000000000 +0100
+++ config.py	2021-03-09 15:27:13.214106078 +0100
@@ -136,7 +136,7 @@
 
 def option(
         value,
-        default=None,
+        default='',
         omit_opts=False,
         omit_grains=False,
         omit_pillar=False,
@@ -200,8 +200,8 @@
     if omit_all:
         omit_opts = omit_grains = omit_pillar = omit_master = True
 
-    if default is None:
-        default = '' if not wildcard else {}
+    if wildcard:
+        default = {}
 
     if not wildcard:
         if not omit_opts:
```
and remove the deepcopy for-loop in the mysql module:
```diff
--- /usr/lib/python3/dist-packages/salt/modules/mysql.py	2021-02-08 15:37:42.000000000 +0100
+++ mysql.py	2021-03-09 15:30:08.941816096 +0100
@@ -421,10 +421,6 @@
     # Ensure MySQldb knows the format we use for queries with arguments
     MySQLdb.paramstyle = 'pyformat'
 
-    for key in copy.deepcopy(connargs):
-        if not connargs[key]:
-            del connargs[key]
-
     if connargs.get('passwd', True) is None:  # If present but set to None. (Extreme edge case.)
         log.warning('MySQL password of None found. Attempting passwordless login.')
         connargs.pop('passwd')
```
With this change, config.option no longer silently swallows `None` and the mysql module is returning bytes again.