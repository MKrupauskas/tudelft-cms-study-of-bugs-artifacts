If I run the following sls file under Salt:

```
some_id:
  mysql_user.absent:
    - host: localhost
    - connection_host: localhost
    - connection_user: root
    - connection_pass: # Note empty password here!
    - connection_charset: utf8
```

I currently get the following exception:

```
      ID: some_id_here
Function: mysql_user.absent
    Name:
  Result: False
 Comment: An exception occurred in this state: Traceback (most recent call last):
            File "/usr/lib/python2.6/site-packages/salt/state.py", line 1379, in call
              **cdata['kwargs'])
            File "/usr/lib/python2.6/site-packages/salt/states/mysql_user.py", line 239, in absent
              if __salt__['mysql.user_exists'](name, host, **connection_args):
            File "/usr/lib/python2.6/site-packages/salt/modules/mysql.py", line 991, in user_exists
              dbc = _connect(**connection_args)
            File "/usr/lib/python2.6/site-packages/salt/modules/mysql.py", line 256, in _connect
              dbc = MySQLdb.connect(**connargs)
            File "/usr/lib64/python2.6/site-packages/MySQLdb/__init__.py", line 81, in Connect
              return Connection(*args, **kwargs)
            File "/usr/lib64/python2.6/site-packages/MySQLdb/connections.py", line 187, in __init__
              super(Connection, self).__init__(*args, **kwargs2)
          TypeError: connect() argument 3 must be string, not None
 Changes:
```

It'd be nice to get an error message that points out the empty `connection_pass` instead of a traceback that looks completely unrelated to the cause of the problem.

(This is with RHEL 6.5, Salt 2014.1.7)
