### Description of Issue

I have a new deployment on Ubuntu 18.04. In this setup. The Master of Masters is running salt-master in AWS behind a Elastic IP address. The Syndic Master has salt-syndic and salt-master running on an internal system. The Syndic is able to connect to the MoM on both 4505 and 4506.

A salt-minion process was able to run on the Syndic box and connect to the master just fine. However, I can not make salt-syndic connect to the master properly.

[update]

After poking at this with a debugger, I found that the actual exception was being hidden by a try/except [1] block. The exception swallowed included a message about the minion certs being inaccessible to the salt-syndic process. These certs are inaccessible because salt-minion runs as root but salt-master and salt-syndic run as a salt user.

[1] https://github.com/saltstack/salt/blob/15895c4ff8d58bf7a86623cd99a57dabdd084bb3/salt/minion.py#L2942

### Versions Report

```
Salt Version:
           Salt: 2017.7.4
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.6.1
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.10
        libgit2: 0.26.0
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.5.4
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: 0.26.2
         Python: 3.6.5rc1 (default, Mar 14 2018, 06:54:23)
   python-gnupg: Not Installed
         PyYAML: 3.12
          PyZMQ: 16.0.2
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.2.3
 
System Versions:
           dist: Ubuntu 18.04 bionic
         locale: UTF-8
        machine: x86_64
        release: 4.15.0-1001-aws
         system: Linux
        version: Ubuntu 18.04 bionic
```