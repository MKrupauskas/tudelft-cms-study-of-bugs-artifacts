On the master created:

``` bash
_modules/dir_test/__init__.py
_modules/dir_test/test_mod.py
```

`__init__.py` looks like this:

``` python
__virtualname__ = 'dir_test'
from test_mod import data
```

`test_mod.py` looks like this:

``` python
# -*- coding: utf-8 -*-

def version():
    return "dir_test 1.0"

def data():
    return {"f1": "v1", "f2": "v2"}
```

Now when called from the master it produces an exception in minion.py:

``` bash
[root@master-1 dir_test]# salt minion-1.salt dir_test.data
minion-1.salt:
    The minion function caused an exception: Traceback (most recent call last):
      File "/usr/lib/python2.7/site-packages/salt/minion.py", line 1019, in _thread_return
        sys.modules[func.__module__].__context__['retcode'] = 0
    AttributeError: 'module' object has no attribute '__context__'
```

However it work all right when it's called from the minion:

``` bash
[root@minion-1 pvagrant]# salt-call dir_test.data
local:
    ----------
    f1:
        v1
    f2:
        v2
```
