Hello,

I am using salt 2014.1.13 and it has been working until recently. As far as I can tell nothing has changed on the host in terms of library versions (the states etc have been in constant flux). However when I recently went to re-provision a set of systems which we use a map file for in salt-cloud it came back with an AWS error (with no configuration change to the AWS profile).

The error is

```
[DEBUG   ] Tags to set for db.atl-dev.net: {'Environment': 'Architecture Sprint R&D', 'Owner': 'jlamb', 'Name': 'db.atl-dev.net'}
[DEBUG   ] EC2 Request: https://ec2.ap-southeast-2.amazonaws.com/?Tag.2.Value=db.atl-dev.net&AWSAccessKeyId=<KEY-ID>&ResourceId.1=i-ccc70a02&Timestamp=2015-02-20T23%3A52%3A58Z&Tag.2.Key=Name&Tag.0.Key=Environment&Tag.1.Value=jlamb&Tag.0.Value=Architecture+Sprint+R%26D&SignatureVersion=2&SignatureMethod=HmacSHA256&Version=2013-10-01&Tag.1.Key=Owner&Signature=JGwoOIn%2F0XgH4uEe8mVaW2p6mjUmgDNrKCpZQrVMF4o%3D&Action=CreateTags
[ERROR   ] EC2 Response Status Code and Error: [403 Forbidden] {'Errors': {'Error': {'Message': 'The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.', 'Code': 'SignatureDoesNotMatch'}}, 'RequestID': '58078670-354a-4c73-8e0e-30fef883a68e'}
```

My versions are as follows..

```
salt-cloud --versions
            Salt: 2014.1.13
          Python: 2.7.6 (default, Mar 22 2014, 22:59:56)
          Jinja2: 2.7.3
        M2Crypto: 0.21.1
  msgpack-python: 0.3.0
    msgpack-pure: Not Installed
        pycrypto: 2.6.1
          PyYAML: 3.10
           PyZMQ: 14.0.1
             ZMQ: 4.0.4
 Apache Libcloud: 0.15.1
```

What confuses me most is that the content and number of tags has not changed recently and as far as I know the library versions have not changed either. My configuration file looks like this.

```
  tag:
    Environment: 'Architecture Sprint R&D'
    Owner: 'jlamb'
```

If I remove the tag: section from the profile the tags correctly apply. (i.e. only the Name: tag get's applied but it successfully works). I have tried both tag: syntax types in the example configuration i.e.

```
tag:
   key: value
   key1: value1
```

and

```
tag: {'key': 'value', 'key1' : 'value1'}
```

As soon as the tag has a space in it the request will fail with a SignatureDoesNotMatch error.
