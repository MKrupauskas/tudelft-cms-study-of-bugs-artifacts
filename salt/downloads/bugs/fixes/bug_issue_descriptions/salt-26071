We are using a customer returner that looks like this:

``` python
import requests
import json

def returner(ret):
  '''
  Return information to an http server
  '''

  json_data = json.dumps(ret, ensure_ascii=False)

  url = "http://web.domain.tld/saltret"
  header_data = {'content-type': 'application/json'}

  r = requests.post(url, data=json_data, headers=header_data)
```

And when our http server gets the return data we are seeing the following (intentional) error when testing:

``` yaml
{ jid: '20150806133635648701',
  return:
   [ 'Pillar failed to render with the following messages:',
     'Rendering SLS \'firewalld\' failed. Please see master log for details.' ],
  success: true,
  schedule: 'highstate',
  pid: 7685,
  fun: 'state.highstate',
  id: 'server.domain.tld' }
```

There does not appear to be a retcode when a pillar fails. However when a state fails we are getting one:

``` yaml
{ fun_args: [],
  jid: '20150806133859381500',
  return: [ 'Rendering SLS \'base:system\' failed: mapping values are not allowed here; line 5\n\n---\n\n\nhelkjdslkfj\n\n/etc/resolv.conf:    <======================\n  file.managed:\n    - source:\n      - salt://system/files/resolv.conf\n    - user: root\n    - group: root\n[...]\n---' ],
  retcode: 0,
  success: true,
  fun: 'state.highstate',
  id: 'server.domain.tld' }
```

Is this intentional? It's very difficult to track errors and handle them when the returns state "success: true" with no retcode to tell if an error occurred.
