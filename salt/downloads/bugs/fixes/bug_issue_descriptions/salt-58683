**Description**
Hello,

While analyzing salt on SonarCloud I saw what looks like a bug in [`salt/modules/virt.py`](https://github.com/saltstack/salt/blob/beed28a59078e545988968664d588cb73debfb2e/salt/modules/virt.py#L5226). This conditional expression will always return `True`. You can see [the issue in SonarCloud here](https://sonarcloud.io/project/issues?id=nicolas-harraudeau-sonarsource_salt&issues=AXUIKzTTPoEr8CkZiQp_&open=AXUIKzTTPoEr8CkZiQp_).

When I look at the code it seems to me that the developer might have wanted to write instead:
```
"default": False if child.get("default") == "no" else True,
```
If this expression was intended replacing it with `True` would make the code less confusing:
```
"default": True,
```

**Setup**
There is no setup. This issue was detected by using the SonarCloud online service.
You can run the same analysis in a few clicks. I used [this configuration file](https://github.com/nicolas-harraudeau-sonarsource/salt/commit/aec7a4ce1e0ecad066703cfa9fc5c48378e15a64) to separate properly main code from test code.

**Screenshots**
<img width="1605" alt="Screenshot 2020-10-08 at 16 51 03" src="https://user-images.githubusercontent.com/40498978/95475432-806fa480-0986-11eb-8ab0-19c00f711f17.png">

**Versions Report**
This issue was found directly on the master branch of salt. I didn't check if it was present in any released version.

**Additional context**
In case you have any question, suggestion or if you see a False Positive on SonarCloud you can reach out on [SonarSource community forum](https://community.sonarsource.com/).

A few notes in case you want to use SonarCloud:
* SonarCloud can easily import pylint and flake8 issues in case you want to use a rule SonarCloud does not already provide. Note however that if you select a rule already covered by SonarCloud you might see different issues than what Pylint/Flake8 report. We design our code analyzers to avoid False Positives as much as possible and to detect complex bugs.
* SonarCloud is free for open-source projects.
