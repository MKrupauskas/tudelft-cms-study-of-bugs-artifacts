I have a situation where some paths are mounted via NFS into a virtual machine using Vagrant. One of the characteristics of such a shared filesystem is that the uid:gid seems to be immutable from within my guest VM without at least some sort of hack/workaround. If I have a state set up to create a symlink, e.g.:

```
/mnt/source/project/library/shared:
  file.symlink:
    - target: /mnt/source/framework/shared
```

...the result of the state run is a failure even though the symlink is successfully created:

```
----------
          ID: /mnt/source/project/library/shared
    Function: file.symlink
      Result: False
     Comment: Failed to set ownership of symlink /mnt/source/project/library/shared to root:root
     Changes:
```

I took a look at the [source for the file state](https://github.com/saltstack/salt/blob/v2014.1.10/salt/states/file.py#L823-L832) and I see that even if the `user` and `group` options are not provided for the state it will default them and attempt to set ownership anyway. Should this really be the desired behavior? I think that either:
1. it should not try to set the ownership unless values are provided or
2. some option should exist to tell it to skip setting ownership

Right now my only alternative is to set these symlinks up in a shell script instead of managing them in my Salt states.
