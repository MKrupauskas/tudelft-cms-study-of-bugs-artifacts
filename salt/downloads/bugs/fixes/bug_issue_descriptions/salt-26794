We were attempting to use archive extracted to download a tar file, extract it to /tmp/test.
Even though by default it is not suppose to cache the file since Keep='False' by default, according to the API. 
The state was failing with the error

```
Comment: An exception occurred in this state: Traceback (most recent call last):
                File "/tmp/.root_b63d5b__salt/salt/state.py", line 1560, in call
                  **cdata['kwargs'])
                File "/tmp/.root_b63d5b__salt/salt/states/archive.py", line 181, in extracted
                  with closing(tarfile.open(filename, 'r')) as tar:
                File "/usr/lib/python2.7/tarfile.py", line 1660, in open
                  return func(name, "r", fileobj, **kwargs)
                File "/usr/lib/python2.7/tarfile.py", line 1722, in gzopen
                  fileobj = bltn_open(name, mode + "b")
              IOError: [Errno 2] No such file or directory:
'/tmp/.root_b63d5b__salt/running_data/var/cache/salt/minion/files/base/_tmp_test_mprime.tar'
```

Editing the state file and adding `keep = False` seems to have fixed the issue. 

There also doesn't seem to be a good way (or at least good documentation) to extract archives which don't contain any subfolders. Even though it seems as though `if_missing` works for files also, not just directories, if so, it should be made more clear in the docs.
