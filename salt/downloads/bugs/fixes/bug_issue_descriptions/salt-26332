We love using git as our ext_pillar... we also love having out minions dynamically decide which pillars they have access to. We do this with the following pillar top.sls 

``` saltstack
base:

  '*':
{%- set pillars = salt['grains.get']('pillars', '') %}
{%- if pillars %}
    {%- for pillar in pillars.get('base',[]) %}
    - base.{{ pillar }}
    {%- endfor %}
    {%- for pillar in pillars.get('all',[]) %}
    - base.{{ pillar }}
    {%- endfor %}
{% endif %}
```

So basically we load the grains and decide which pillars should be loaded to a minion. It works great, but as we start scaling I am seeing things get slower and slower. The above is repeated for envrionments dev, stg, prd. 

In my logs I see a ton of this.... 

`2015-08-14 18:26:31,198 [salt.pillar.git_pillar][DEBUG   ][1151] Updating fileserver for git_pillar module`

It seems like for every run the salt-master is rebuilding the pillar for each machine running a job and each environment. 

This makes things pretty slow. I was hoping that there was some option to do cacheing or speed up this process. Otherwise we will probably start looking at other ext_pillar solutions. 
