**Description**
We're trying Salt-cloud to provision VMs on Vcenter, but facing a blocking issue. salt-cloud keeps waiting for IPv4 information and then timeouts later. I'm creating the new VM by cloning from one of the existing VMs where VM Tools is running just fine

**salt-cloud DEBUG log**
<details><summary>sudo salt-cloud -p profile_name new_vm_name -l debug</summary>

```
[DEBUG   ] Reading configuration from /etc/salt/cloud
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Including configuration from '/etc/salt/master.d/master.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/master.conf
[DEBUG   ] Including configuration from '/etc/salt/master.d/reactor.conf'
[DEBUG   ] Reading configuration from /etc/salt/master.d/reactor.conf
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: xxxxx-cm.xxxxx.com
[DEBUG   ] Missing configuration file: /etc/salt/cloud.providers
[DEBUG   ] Including configuration from '/etc/salt/cloud.providers.d/vmware.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.providers.d/vmware.conf
[DEBUG   ] Missing configuration file: /etc/salt/cloud.profiles
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/temp.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/temp.conf
[ERROR   ] Error parsing configuration file: /etc/salt/cloud.profiles.d/temp.conf - mapping values are not allowed in this context
  in "/etc/salt/cloud.profiles.d/temp.conf", line 17, column 10
[ERROR   ] Error parsing configuration file: /etc/salt/cloud.profiles.d/temp.conf - mapping values are not allowed in this context
  in "/etc/salt/cloud.profiles.d/temp.conf", line 17, column 10
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/vmware-profile.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/vmware-profile.conf
[DEBUG   ] Using pkg_resources to load entry points
[DEBUG   ] Override  __grains__: <module 'salt.loaded.int.log_handlers.sentry_mod' from '/usr/lib/python3.6/site-packages/salt/log/handlers/sentry_mod.py'>
[DEBUG   ] Configuration file path: /etc/salt/cloud
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[INFO    ] salt-cloud starting
[DEBUG   ] Using pkg_resources to load entry points
[DEBUG   ] Using pkg_resources to load entry points
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/minion.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/minion.conf
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: xxxxx-cm.xxxxx.com
[DEBUG   ] Using pkg_resources to load entry points
[DEBUG   ] Marking 'base64_encode' as a jinja filter
[DEBUG   ] Marking 'base64_decode' as a jinja filter
[DEBUG   ] Marking 'md5' as a jinja filter
[DEBUG   ] Marking 'sha1' as a jinja filter
[DEBUG   ] Marking 'sha256' as a jinja filter
[DEBUG   ] Marking 'sha512' as a jinja filter
[DEBUG   ] Marking 'hmac' as a jinja filter
[DEBUG   ] Marking 'hmac_compute' as a jinja filter
[DEBUG   ] Marking 'random_hash' as a jinja filter
[DEBUG   ] Marking 'rand_str' as a jinja filter
[DEBUG   ] Marking 'file_hashsum' as a jinja filter
[DEBUG   ] Marking 'http_query' as a jinja filter
[DEBUG   ] Marking 'strftime' as a jinja filter
[DEBUG   ] Marking 'date_format' as a jinja filter
[DEBUG   ] Marking 'raise' as a jinja global
[DEBUG   ] Marking 'match' as a jinja test
[DEBUG   ] Marking 'equalto' as a jinja test
[DEBUG   ] Marking 'skip' as a jinja filter
[DEBUG   ] Marking 'sequence' as a jinja filter
[DEBUG   ] Marking 'to_bool' as a jinja filter
[DEBUG   ] Marking 'indent' as a jinja filter
[DEBUG   ] Marking 'tojson' as a jinja filter
[DEBUG   ] Marking 'quote' as a jinja filter
[DEBUG   ] Marking 'regex_escape' as a jinja filter
[DEBUG   ] Marking 'regex_search' as a jinja filter
[DEBUG   ] Marking 'regex_match' as a jinja filter
[DEBUG   ] Marking 'regex_replace' as a jinja filter
[DEBUG   ] Marking 'uuid' as a jinja filter
[DEBUG   ] Marking 'unique' as a jinja filter
[DEBUG   ] Marking 'min' as a jinja filter
[DEBUG   ] Marking 'max' as a jinja filter
[DEBUG   ] Marking 'avg' as a jinja filter
[DEBUG   ] Marking 'union' as a jinja filter
[DEBUG   ] Marking 'intersect' as a jinja filter
[DEBUG   ] Marking 'difference' as a jinja filter
[DEBUG   ] Marking 'symmetric_difference' as a jinja filter
[DEBUG   ] Marking 'method_call' as a jinja filter
[DEBUG   ] Marking 'yaml_dquote' as a jinja filter
[DEBUG   ] Marking 'yaml_squote' as a jinja filter
[DEBUG   ] Marking 'yaml_encode' as a jinja filter
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' __virtual__ returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad vmware.optimize_providers: 'vmware.optimize_providers' is not available.
[DEBUG   ] The 'vmware' cloud driver is unable to be optimized.
[DEBUG   ] Using pkg_resources to load entry points
[DEBUG   ] Using pkg_resources to load entry points
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' __virtual__ returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] LazyLoaded cloud.fire_event
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/instance_name/creating; data = {'provider': 'xxxxx-vc:vmware', 'name': 'instance_name', 'profile': xxx', 'driver': 'vmware', 'event': 'starting create', '_stamp': '2022-01-31T04:27:34.905322'}
[DEBUG   ] Closing IPCMessageClient instance
[ERROR   ] Specified folder: 'TPX_xxxxx_ESXI7.0' does not exist
[DEBUG   ] Using folder in which vm xxx is present
[DEBUG   ] Virtual hardware version already set to vmx-11
[DEBUG   ] Setting cpu to: 2
[DEBUG   ] Setting memory to: 2048 MB
[DEBUG   ] clone_spec set to:
(vim.vm.CloneSpec) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   location = (vim.vm.RelocateSpec) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      service = <unset>,
      folder = <unset>,
      datastore = 'vim.Datastore:datastore-11',
      diskMoveType = <unset>,
      pool = 'vim.ResourcePool:resgroup-90',
      host = 'vim.HostSystem:host-91',
      disk = (vim.vm.RelocateSpec.DiskLocator) [],
      transform = <unset>,
      deviceChange = (vim.vm.device.VirtualDeviceSpec) [],
      profile = (vim.vm.ProfileSpec) [],
      cryptoSpec = <unset>
   },
   template = false,
   config = (vim.vm.ConfigSpec) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      changeVersion = <unset>,
      name = <unset>,
      version = <unset>,
      createDate = <unset>,
      uuid = <unset>,
      instanceUuid = <unset>,
      npivNodeWorldWideName = (long) [],
      npivPortWorldWideName = (long) [],
      npivWorldWideNameType = <unset>,
      npivDesiredNodeWwns = <unset>,
      npivDesiredPortWwns = <unset>,
      npivTemporaryDisabled = <unset>,
      npivOnNonRdmDisks = <unset>,
      npivWorldWideNameOp = <unset>,
      locationId = <unset>,
      guestId = <unset>,
      alternateGuestName = <unset>,
      annotation = 'Created by Salt-Cloud',
      files = <unset>,
      tools = <unset>,
      flags = <unset>,
      consolePreferences = <unset>,
      powerOpInfo = <unset>,
      numCPUs = 2,
      vcpuConfig = (vim.vm.VcpuConfig) [],
      numCoresPerSocket = <unset>,
      memoryMB = 2048,
      memoryHotAddEnabled = <unset>,
      cpuHotAddEnabled = <unset>,
      cpuHotRemoveEnabled = <unset>,
      virtualICH7MPresent = <unset>,
      virtualSMCPresent = <unset>,
      deviceChange = (vim.vm.device.VirtualDeviceSpec) [],
      cpuAllocation = <unset>,
      memoryAllocation = <unset>,
      latencySensitivity = <unset>,
      cpuAffinity = <unset>,
      memoryAffinity = <unset>,
      networkShaper = <unset>,
      cpuFeatureMask = (vim.vm.ConfigSpec.CpuIdInfoSpec) [],
      extraConfig = (vim.option.OptionValue) [],
      swapPlacement = <unset>,
      bootOptions = <unset>,
      vAppConfig = <unset>,
      ftInfo = <unset>,
      repConfig = <unset>,
      vAppConfigRemoved = <unset>,
      vAssertsEnabled = <unset>,
      changeTrackingEnabled = <unset>,
      firmware = <unset>,
      maxMksConnections = <unset>,
      guestAutoLockEnabled = <unset>,
      managedBy = <unset>,
      memoryReservationLockedToMax = <unset>,
      nestedHVEnabled = <unset>,
      vPMCEnabled = <unset>,
      scheduledHardwareUpgradeInfo = <unset>,
      vmProfile = (vim.vm.ProfileSpec) [],
      messageBusTunnelEnabled = <unset>,
      crypto = <unset>,
      migrateEncryption = <unset>,
      sgxInfo = <unset>,
      ftEncryptionMode = <unset>,
      guestMonitoringModeInfo = <unset>,
      sevEnabled = <unset>,
      pmemFailoverEnabled = <unset>,
      vmOpNotificationToAppEnabled = <unset>,
      pmem = <unset>
   },
   customization = <unset>,
   powerOn = true,
   snapshot = <unset>,
   memory = <unset>
}
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/instance_name/requesting; data = {'priv_key': None, 'provider': 'xxxxx-vc:vmware', 'profile': 'xxx', 'url': 'xxx', 'folder': 'TPX_xxxxx_ESXI7.0', 'clonefrom': 'xxx', 'memory': '2GB', 'hardware_version': 11, 'image': 'centos7_64Guest', 'template': False, 'host': 'xxx', 'name': 'instance_name', 'datacenter': 'TPX_xxxxx_ESXI7.0', 'user': 'xxxxx.local\\salt-user', 'num_cpus': 2, 'annotation': 'Created by Salt-Cloud', 'resourcepool': 'Resources', 'power_on': True, 'os': 'bootstrap-salt', 'verify_ssl': False, 'datastore': 'vms10_nas1', 'inline_script': None, 'deploy': False, 'pub_key': None, 'private_key': '/home/sys/.ssh/id_rsa_xxxxx_6_sys', 'driver': 'vmware', 'network': {'Network adapter 1': {'name': 'LAN4089', 'switch_type': 'standard', 'ip': '111.222.3.223', 'gateway': '111.222.3.1', 'subnet_mask': '255.255.255.0'}}, 'ssh_username': sys, 'customization': True, 'event': 'requesting instance', '_stamp': '2022-01-31T04:27:35.240336'}
[DEBUG   ] Closing IPCMessageClient instance
[INFO    ] Creating instance_name from vm(xxx)
[INFO    ] [ instance_name ] Waiting for clone task to finish [0 s]
[INFO    ] [ instance_name ] Waiting for clone task to finish [5 s]
[INFO    ] [ instance_name ] Waiting for clone task to finish [10 s]
. . . .
[INFO    ] [ instance_name ] Successfully completed clone task in 454 seconds
[INFO    ] [ instance_name ] Waiting for VMware tools to be running [0 s]
[INFO    ] [ instance_name ] Waiting for VMware tools to be running [5 s]
. . . 
[INFO    ] [ instance_name ] Successfully got VMware tools running on the guest in 49 seconds
[INFO    ] [ instance_name ] Waiting to retrieve IPv4 information [0 s]
[INFO    ] [ instance_name ] Waiting to retrieve IPv4 information [5 s]
[INFO    ] [ instance_name ] Waiting to retrieve IPv4 information [10 s]
. . It keeps waiting for 1200 seconds and then timeouts.

```
</details>

Here are the version details:

```
VMware vCenter Server 7.0.3 build-18901211
VMware Tools daemon, version 11.0.5.17716 (build-15389592)
```
**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. ) 

```
Salt Version:
          Salt: 3003.3

Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: Not Installed
     docker-py: Not Installed
         gitdb: Not Installed
     gitpython: Not Installed
        Jinja2: 2.11.1
       libgit2: Not Installed
      M2Crypto: 0.35.2
          Mako: Not Installed
       msgpack: 0.6.2
  msgpack-pure: Not Installed
  mysql-python: 1.3.12
     pycparser: Not Installed
      pycrypto: Not Installed
  pycryptodome: Not Installed
        pygit2: Not Installed
        Python: 3.6.8 (default, Nov 16 2020, 16:55:22)
  python-gnupg: Not Installed
        PyYAML: 3.13
         PyZMQ: 17.0.0
         smmap: Not Installed
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.1.4

System Versions:
          dist: centos 7 Core
        locale: UTF-8
       machine: x86_64
       release: 3.10.0-1160.42.2.el7.x86_64
        system: Linux
       version: CentOS Linux 7 Core
```
</details>

The VM that I'm cloning FROM has a network interface already configured and is assigned a static IP. 
Below is the profile:

```
profile_name:
  provider: xxx
  clonefrom: xxx

  ## Optional arguments
  num_cpus: 2
  memory: 2GB
  network:
    Network adapter 1:
      name: LAN4089
      switch_type: standard
      ip: 111.222.3.223
      gateway: 111.222.3.1
      subnet_mask: 255.255.255.0
  resourcepool: Resources
  datastore: vms10_nas1
  datacenter: DC_01
  folder: DC_01
  host: xx.xxx.x.xx
  template: False
  power_on: True
  deploy: False
  customization: True
  private_key: /home/sys/.ssh/id_rsa_6_sys
  ssh_username: sys
  hardware_version: 11
  image: centos7_64Guest
```

Some details about the VM that I'm cloning from:
- salt-minion is already installed and running in the clone VM (irrelevant for this, but specifying anyways)
- Running on Centos 7 OS 
- Has VM tools installed and running 
- Has the following Network Config (`/etc/sysconfig/network-scripts/ifcfg-ens32`): 
```
NM_CONTROLLED=yes
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=static
IPADDR=111.222.3.220
NETMASK=255.255.255.0
GATEWAY= 111.222.3.1
DNS1= xxx
DNS2= xxx
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
IPV6_ADDR_GEN_MODE=stable-privacy
NAME=ens32
###UUID=4c24345-a889-555-ace0-f5143c1a2609
DEVICE=ens32
ONBOOT=yes
```
**Expected behavior**
It should successfully obtain the IPv4 information and take it further from there.

@nmadhok Might be able to help us here. 