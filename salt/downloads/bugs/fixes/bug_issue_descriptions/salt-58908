**Description**
the resize in lvm.lv present state unfortunately also makes the lvm smaller without worrying about the file system.
It destroyed some filesystems for me.

**Steps to Reproduce the behavior**
creates an LVM via SALT with 1GB size.
Then formatted it with XFS

Since SALT could not resize / extend until now, a resize had to be done manually.
So the LVM and file system expanded manually.
lvextend -L + 1G / dev/vg1/test
xfs_resize /dev/vg1/test

Then let SALT run over it again and the file system is broken.

the LV test is now 1G again but the XFS expects a LV of 2G.
This means that nothing can be written to the mount point.
Input / output error.

DRBD then simply says "diskless" and "no meta data found"

**Expected behavior**
Expected behavior would only allow shrink if the option shrink_allow = true.
and the file system used can do that too.

**Versions Report**
<details><summary>Salt Version:
           Salt: 3000.5

Dependency Versions:
           cffi: 1.9.1
       cherrypy: 2.3.0
       dateutil: 2.5.3
      docker-py: Not Installed
          gitdb: 2.0.0
      gitpython: 2.1.1
         Jinja2: 2.10
        libgit2: 0.24.5
       M2Crypto: 0.24.0
           Mako: 1.0.6
   msgpack-pure: Not Installed
 msgpack-python: 0.6.2
   mysql-python: Not Installed
      pycparser: 2.17
       pycrypto: 2.6.1
   pycryptodome: 3.6.1
         pygit2: 0.24.2
         Python: 2.7.13 (default, Aug 22 2020, 10:03:02)
   python-gnupg: 0.4.3
         PyYAML: 3.13
          PyZMQ: 16.0.2
          smmap: 2.0.1
        timelib: 0.2.4
        Tornado: 4.5.3
            ZMQ: 4.2.1

System Versions:
           dist: debian 9.13
         locale: UTF-8
        machine: x86_64
        release: 4.19.0-0.bpo.9-amd64
         system: Linux
        version: debian 9.13
</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
PASTE HERE
```
</details>

**Additional context**
Add any other context about the problem here.
