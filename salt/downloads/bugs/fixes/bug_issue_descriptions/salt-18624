For Good Reasons I'm switching users in the middle of some modules/jobs - this causes them to fail depending on logging level:

```
The minion function caused an exception: Traceback (most recent call last):
  File "salt/minion.py", line 1019, in _thread_return
  File "c:\salt\var\cache\salt\minion\extmods\modules\localmagic.py", line 99, in run
    fire_master(cmd, 'ok')
  File "c:\salt\var\cache\salt\minion\extmods\modules\localmagic.py", line 63, in fire_master
    }, "fire_master")
  File "salt/utils/event.py", line 407, in fire_event
  File "logging/__init__.py", line 1137, in debug
  File "salt/log/setup.py", line 185, in _log
  File "logging/__init__.py", line 1268, in _log
  File "logging/__init__.py", line 1278, in handle
  File "logging/__init__.py", line 1318, in callHandlers
  File "logging/__init__.py", line 749, in handle
  File "logging/handlers.py", line 415, in emit
WindowsError: [Error 5] Access is denied: 'c:\\salt\\var\\log\\salt\\minion.debug'
```

If the log could be opened once and kept open, that would be nice. At the very least, it would be nice if it didn't unexpectedly abort the job.
