### Description of Issue/Question
When the [Kubernetes python client](https://github.com/kubernetes-incubator/client-python) released version 4.0 last week, it caused some test failures in our test suite:
- unit.modules.test_kubernetes.KubernetesTestCase.test_create_deployments
- unit.modules.test_kubernetes.KubernetesTestCase.test_setup_client_key_file

After some initial investigation, this is because they have changed the way they're handling the the configuration.py attributes. From their CHANGELOG:

> Configuration is not a singleton object anymore. Please use Configuraion.set_default to change default configuration.

This causes issues whenever these attributes are called. Here's a stacktrace from last test listed above, as an example:
```
*** unit.modules.test_kubernetes.KubernetesTestCase.test_setup_client_key_file Tests  ********************************************
 --------  Tests with Errors  ----------------------------------------------------------------------------------------------------
   -> unit.modules.test_kubernetes.KubernetesTestCase.test_setup_client_key_file  ................................................
       Traceback (most recent call last):
         File "/root/SaltStack/salt/tests/unit/modules/test_kubernetes.py", line 161, in test_setup_client_key_file
           config = kubernetes._setup_conn()
         File "/root/SaltStack/salt/salt/modules/kubernetes.py", line 139, in _setup_conn
           kubernetes.client.configuration.host != host or
       AttributeError: 'module' object has no attribute 'host'
```

Salt's kubernetes execution module needs to handle the new configuration structure as well as for older versions.

The stacktrace above is from running the test on develop, but this will need to be fixed on 2017.7 and then merged-forward.

### Setup
Run the kubernetes execution module unit tests after upgrading to the newest version of the kubernetes python client.

### Versions Report
Relevant to the `2017.7` and `develop` branches.

@flavio @brejoc @meaksh @mcalmer Is this something you folks would be willing to look into fixing?
