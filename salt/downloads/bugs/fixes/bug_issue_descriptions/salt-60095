### Description of Issue
state module archive.extracted with specific user and group leads to extracted data which is owned by group root

### Setup
source file for kibana: https://artifacts.elastic.co/downloads/kibana/kibana-7.12.1-linux-x86_64.tar.gz

Minion runs with user root

### Steps to Reproduce Issue
State contains extraction of kibana tgz file. Extracted content should be owned by user/group: "soa"
Pillar data for {{ kibana_ver }} is "7.12.1"

Attached state file is simplified regarding pillar data etc. to reproduce issue

[test.zip](https://github.com/saltstack/salt/files/6392296/test.zip)


####outcome###
group of directory is root instead of soa
underlying directory is owned by root:root
( how to enforce_ownership_on: with wildcard?? )

my typical workaround is a simple cmd.run with chown -R soa:soa in this case, but I think the state module does not work as it should.

    extracted directory:
    ID: show_directory
        Function: cmd.run
            Name: ls -lah /app/soa/softwareag/kibana/7.12.1/
          Result: True
         Comment: Command "ls -lah /app/soa/softwareag/kibana/7.12.1/" run
         Started: 15:53:36.567981
        Duration: 96.947 ms
         Changes:
                  ----------
                  pid:
                      28574
                  retcode:
                      0
                  stderr:
                  stdout:
                      total 0
                      drwxr-xr-x.  3 soa  **root**  40 Apr 28 15:53 .
                      drwx------.  4 soa  soa   52 Apr 28 15:53 ..
                      drwxr-xr-x. 10 **root root** 210 Apr 28 15:53 kibana-7.12.1-linux-x86_64


### Versions Report
    #####Master#######: 
    salt --versions-report
    Salt Version:
                Salt: 3003

    Dependency Versions:
              cffi: 1.11.5
          cherrypy: Not Installed
          dateutil: 2.6.1
         docker-py: Not Installed
             gitdb: Not Installed
         gitpython: Not Installed
            Jinja2: 2.10.1
           libgit2: Not Installed
          M2Crypto: 0.35.2
              Mako: Not Installed
           msgpack: 0.6.2
      msgpack-pure: Not Installed
      mysql-python: Not Installed
         pycparser: 2.14
          pycrypto: Not Installed
      pycryptodome: Not Installed
            pygit2: Not Installed
            Python: 3.6.8 (default, Aug 18 2020, 08:33:21)
      python-gnupg: Not Installed
            PyYAML: 3.12
             PyZMQ: 19.0.0
             smmap: Not Installed
           timelib: Not Installed
           Tornado: 4.5.3
               ZMQ: 4.3.4
    
    System Versions:
              dist: rhel 8.3 Ootpa
            locale: UTF-8
           machine: x86_64
           release: 4.18.0-240.22.1.el8_3.x86_64
            system: Linux
           version: Red Hat Enterprise Linux 8.3 Ootpa

    #####Minion#######:
    salt-minion --versions-report
    Salt Version:
              Salt: 3003
    
    Dependency Versions:
              cffi: Not Installed
          cherrypy: Not Installed
          dateutil: Not Installed
         docker-py: Not Installed
             gitdb: Not Installed
         gitpython: Not Installed
            Jinja2: 2.11.1
           libgit2: Not Installed
          M2Crypto: 0.35.2
              Mako: Not Installed
           msgpack: 0.6.2
      msgpack-pure: Not Installed
      mysql-python: Not Installed
         pycparser: Not Installed
          pycrypto: 2.6.1
      pycryptodome: Not Installed
            pygit2: Not Installed
            Python: 3.6.8 (default, Aug 13 2020, 07:46:32)
      python-gnupg: Not Installed
            PyYAML: 3.13
             PyZMQ: 17.0.0
             smmap: Not Installed
           timelib: Not Installed
           Tornado: 4.5.3
               ZMQ: 4.1.4
    
    System Versions:
              dist: rhel 7.9 Maipo
            locale: UTF-8
           machine: x86_64
           release: 3.10.0-1160.24.1.el7.x86_64
            system: Linux
           version: Red Hat Enterprise Linux Server 7.9 Maipo