im not sure if this was supported.. it was working fine for me for a long while...
But now im haveing no luck.

Im running latest develop.

cat /srv/salt/base/_modules/openssl.py

```
import salt.utils

def __virtual__():
    '''
    '''
    if salt.utils.is_windows() or salt.utils.which('openssl') is None:
        return False
    return True


def decrypt(value, dfile='/root/.pass'):
    '''
    salt-call openssl.decrypt U2FsdGVkX1+uNDhmDwGjiVk3wpt3uQ=
    '''
    r = __salt__['cmd.run']('echo -e "{0}" | openssl enc -aes-256-cbc -a -d -pass file:{1}'.format(value, dfile))
    return r


def encrypt(value, dfile='/root/.pass'):
    '''
    echo 'decrypt_password' > /root/.pass
    salt-call openssl.encrypt passwordToHide
    '''
    r = __salt__['cmd.run']('echo -e "{0}" | openssl enc -aes-256-cbc -a -pass file:{1}'.format(value, dfile))
    return r
```

ensure works:

```
salt minion saltutil.sync_all
: good
salt minion openssl.decrypt Woot
: good
```

sls top file:

```
# test renders
# {{ salt['openssl.decrypt']("U2FsdGVkX19/GOZN65LL/mpYeXSQR2OEWhr350Me7no=") }}
base:
    'minion':
        - woot
```

```
salt minion state.highstate
: good
```

pillar top file:

```
# test renders
# {{ salt['openssl.decrypt']("U2FsdGVkX19/GOZN65LL/mpYeXSQR2OEWhr350Me7no=") }}
base:
    'minion':
        - woot
```

```
salt minion state.highstate
minion:
    Data failed to compile:
----------
    Pillar failed to render with the following messages:
----------
    Rendering Primary Top file failed, render error:
Jinja variable 'dict' object has no attribute 'openssl.decrypt'
```

How can I be sure the master has this module loaded so it can be used when rendering pillars?
....
I tried to cp base/_modules to: /srv/salt/_extmods/modules
and in master config:
extension_modules: /srv/salt/_extmods

still no luck...
Strange that things were working fine a few weeks ago.
