**Description**

if "init" SLS is access using it's explicit name - i.e. `path.to.init` instead of `path.to` - the "init" part shows up as a directory component in various `sls*` context parmeters

**Setup**
Set up following file `slspath/init.sls`:
```
test:
  test.nop:
    - context:
        slspath: "{{ slspath }}"
        slsdotpath: "{{ slsdotpath }}"
        slscolonpath: "{{ slscolonpath }}"
        sls_path: "{{sls_path}}"
```

**Steps to Reproduce the behavior**

Run: `salt-call state.show_sls slspath.init --output=yaml`

Result:
```
# [INFO    ] Loading fresh modules for state activity
local:
  test:
    test:
    - context:
        slspath: slspath/init
        slsdotpath: slspath.init
        slscolonpath: slspath:init
        sls_path: slspath_init
    - nop
    - order: 10000
    __sls__: slspath.init
    __env__: base
```

As you see, "init" becomes a directory name, even though no such directory exists

**Expected behavior**

Expecting `slspath` to alway reflect actual path of the sls - i.e. in this case it should be `slspath`

