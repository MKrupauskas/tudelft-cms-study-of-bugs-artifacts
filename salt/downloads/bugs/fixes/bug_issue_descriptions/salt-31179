So i was attempting to use the artifactory state instead of a cmd.run wget but was running in to an error that was not being solved. I keep getting the error 

From Master:

```
Passed invalid arguments to state.sls: can't serialize ArtifactoryError()
```

From Minion:

```
[ERROR   ][24006] "Cannot find requested classifier 'jar-with-dependencies' in the snapshot version metadata.\n 
```

now please note in the artifactory repository i am pulling from in the snapshot folder there are 4 files 
2 jar files
1 base jar
1 base jar with dependencies (with classifier  'jar-with-dependencies')
1 pom file
1 maven xml

the actual artifactory xml:

```
<?xml version="1.0" encoding="UTF-8"?>
<metadata>
  <groupId>Master</groupId>
  <artifactId>Master</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <versioning>
    <snapshot>
      <timestamp>20160212.192747</timestamp>
      <buildNumber>251</buildNumber>
    </snapshot>
    <lastUpdated>20160212192814</lastUpdated>
    <snapshotVersions>
      <snapshotVersion>
        <extension>jar</extension>
        <value>0.0.1-20160212.192747-251</value>
        <updated>20160212192747</updated>
      </snapshotVersion>
      <snapshotVersion>
        <extension>pom</extension>
        <value>0.0.1-20160212.192747-251</value>
        <updated>20160212192747</updated>
      </snapshotVersion>
      <snapshotVersion>
        <classifier>jar-with-dependencies</classifier>
        <extension>jar</extension>
        <value>0.0.1-20160212.192747-251</value>
        <updated>20160212192747</updated>
      </snapshotVersion>
    </snapshotVersions>
  </versioning>
</metadata>
```

If i remove the classifier it will download the base jar. I can even download the base pom. Yet when i try to downloading the "jar-with-dependencies" it will fail with the issue listed above.

after reviewing the artifactory module the following code stood out: 

```
       if has_classifier and classifier not in snapshot_version_metadata['snapshot_versions']:
            error_message = '''Cannot find requested classifier '{classifier}' in the snapshot version metadata.
                      artifactory_url: {artifactory_url}
                      repository: {repository}
                      group_id: {group_id}
                      artifact_id: {artifact_id}
                      packaging: {packaging}
                      classifier: {classifier}
                      version: {version}'''.format(
                        artifactory_url=artifactory_url,
                        repository=repository,
                        group_id=group_id,
                        artifact_id=artifact_id,
                        packaging=packaging,
                        classifier=classifier,
                        version=version)
            raise ArtifactoryError(error_message)

```

so the packaging type is a required field in the artifactory module so i have to specify jar. there is more then one jar though and xml contains multiple snapshotVersion. so from my non python coding interpretation it (the code) is just looking at the first snapshotVersion in the xml that is a jar.. which in my case does not have a classifier and "bombs out" on me. 

I disabled the lines above from the python module and salt state artifactory worked perfect with the classifier and now downloads the file. 

now i talked to one of my devs and he did mention in many cases there will only be 1 file not this multiple jar situation, but he did mention there are time where you will have more then one as you do thing like having "jar-with-dependencies"

imho it looks like it the check above needs to be refined. 

And the default information: 

Salt Master: 

```
salt-master --versions-report 
Salt Version:
           Salt: 2015.8.5

Dependency Versions:
         Jinja2: 2.7.2
       M2Crypto: 0.21.1
           Mako: 0.9.1
         PyYAML: 3.10
          PyZMQ: 14.0.1
         Python: 2.7.6 (default, Jun 22 2015, 17:58:13)
           RAET: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.4
           cffi: Not Installed
       cherrypy: 3.2.4
       dateutil: 2.4.2
          gitdb: 0.5.4
      gitpython: 0.3.2 RC1
          ioflo: Not Installed
        libgit2: Not Installed
        libnacl: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.3.0
   mysql-python: 1.2.3
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
   python-gnupg: Not Installed
          smmap: 0.8.2
        timelib: Not Installed

System Versions:
           dist: Ubuntu 14.04 trusty
        machine: x86_64
        release: 3.13.0-77-generic
         system: Ubuntu 14.04 trusty
```

Tested with Minion:

```
salt-minion --versions-report
Salt Version:
           Salt: 2015.8.5

Dependency Versions:
         Jinja2: 2.2.1
       M2Crypto: 0.20.2
           Mako: Not Installed
         PyYAML: 3.11
          PyZMQ: 14.5.0
         Python: 2.6.6 (r266:84292, Jul 23 2015, 15:22:56)
           RAET: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.5
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.4.2
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
        libgit2: Not Installed
        libnacl: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
   python-gnupg: Not Installed
          smmap: Not Installed
        timelib: Not Installed

System Versions:
           dist: centos 6.7 Final
        machine: x86_64
        release: 2.6.32-573.12.1.el6.x86_64
         system: CentOS 6.7 Final
```
