Using Python LocalClient, issuing commands to minions via cmd_iter() and cmd_iter_no_block(), the resulting generator will report results as expected but after all results are in it will block until the timeout period expires.

For example:

```
17:41:22 >>> 
17:41:23 >>> import salt.client
17:41:37 >>> sc = salt.client.LocalClient()
17:41:44 >>> ret = sc.cmd_iter_no_block('elitatest-ubuntu-trusty', 'test.ping', [], timeout=20 )
17:42:15 >>> for r in ret:
17:42:16 ...     print(r)
17:42:16 ... 
{'elitatest-ubuntu-trusty': {'ret': True}}
17:42:44 >>> 
17:43:07 >>> ret = sc.cmd_iter('elitatest-ubuntu-trusty', 'test.ping', [], timeout=20 )
17:43:19 >>> for r in ret:
17:43:20 ...     print(r)
17:43:20 ... 
{'elitatest-ubuntu-trusty': {'ret': True}}
17:43:45 >>> 
```

Note the timestamps. The first result line returns instantly, but then the command blocks (and the interpreter hangs) until the timeout expires (20 seconds in this case).

This severely impairs the usefulness of these LocalClient methods, making them no better (or worse) than synchronous calls.

I've verified this with salt-master 2014.1.2 through 2014.1.4. 
