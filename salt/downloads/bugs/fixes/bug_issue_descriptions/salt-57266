**Description**
We first noticed this problem after upgrading to 2019.2.4 from 2018.3.4, but highstate would fail every time with an error. Quick diagnostics and it was traced to pillar, as test.ping would work fine. It would also work if we removed M2Crypto, as the affected line wasn't being called.

**Setup**
Install 2019.2.4 from saltstack repo. Manually pip install the wheel package for M2Crypto 0.35.2 from:

- https://ci.appveyor.com/project/m2crypto/m2crypto/builds/32180192/job/mo7q8abwqh1fowuu/artifacts

**Steps to Reproduce the behavior**
<details><summary>salt-call saltutil.refresh_pillar<br/>
AttributeError: 'RsaKey' object has no attribute 'private_decrypt'</summary>

```
PS C:\salt> salt-call saltutil.refresh_pillar
[ERROR   ] An un-handled exception was caught by salt's global exception handler:
AttributeError: 'RsaKey' object has no attribute 'private_decrypt'
Traceback (most recent call last):
  File "C:\salt\bin\Scripts\salt-call", line 11, in <module>
    salt_call()
  File "C:\salt\bin\lib\site-packages\salt\scripts.py", line 431, in salt_call
    client.run()
  File "C:\salt\bin\lib\site-packages\salt\cli\call.py", line 47, in run
    caller = salt.cli.caller.Caller.factory(self.config)
  File "C:\salt\bin\lib\site-packages\salt\cli\caller.py", line 80, in factory
    return ZeroMQCaller(opts, **kwargs)
  File "C:\salt\bin\lib\site-packages\salt\cli\caller.py", line 332, in __init__
    super(ZeroMQCaller, self).__init__(opts)
  File "C:\salt\bin\lib\site-packages\salt\cli\caller.py", line 106, in __init__
    self.minion = salt.minion.SMinion(opts)
  File "C:\salt\bin\lib\site-packages\salt\minion.py", line 846, in __init__
    self.gen_modules(initial_load=True)
  File "C:\salt\bin\lib\site-packages\salt\minion.py", line 442, in gen_modules
    pillarenv=self.opts.get('pillarenv'),
  File "C:\salt\bin\lib\site-packages\salt\pillar\__init__.py", line 247, in compile_pillar
    dictkey='pillar',
  File "C:\salt\bin\lib\site-packages\salt\utils\asynchronous.py", line 64, in wrap
    ret = self._block_future(ret)
  File "C:\salt\bin\lib\site-packages\salt\utils\asynchronous.py", line 74, in _block_future
    return future.result()
  File "C:\salt\bin\lib\site-packages\tornado\concurrent.py", line 238, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 4, in raise_exc_info
  File "C:\salt\bin\lib\site-packages\tornado\gen.py", line 1069, in run
    yielded = self.gen.send(value)
  File "C:\salt\bin\lib\site-packages\salt\transport\zeromq.py", line 303, in crypted_transfer_decode_dictentry
    aes = key.private_decrypt(ret['key'],
AttributeError: 'RsaKey' object has no attribute 'private_decrypt'
Traceback (most recent call last):
  File "C:\salt\bin\Scripts\salt-call", line 11, in <module>
    salt_call()
  File "C:\salt\bin\lib\site-packages\salt\scripts.py", line 431, in salt_call
    client.run()
  File "C:\salt\bin\lib\site-packages\salt\cli\call.py", line 47, in run
    caller = salt.cli.caller.Caller.factory(self.config)
  File "C:\salt\bin\lib\site-packages\salt\cli\caller.py", line 80, in factory
    return ZeroMQCaller(opts, **kwargs)
  File "C:\salt\bin\lib\site-packages\salt\cli\caller.py", line 332, in __init__
    super(ZeroMQCaller, self).__init__(opts)
  File "C:\salt\bin\lib\site-packages\salt\cli\caller.py", line 106, in __init__
    self.minion = salt.minion.SMinion(opts)
  File "C:\salt\bin\lib\site-packages\salt\minion.py", line 846, in __init__
    self.gen_modules(initial_load=True)
  File "C:\salt\bin\lib\site-packages\salt\minion.py", line 442, in gen_modules
    pillarenv=self.opts.get('pillarenv'),
  File "C:\salt\bin\lib\site-packages\salt\pillar\__init__.py", line 247, in compile_pillar
    dictkey='pillar',
  File "C:\salt\bin\lib\site-packages\salt\utils\asynchronous.py", line 64, in wrap
    ret = self._block_future(ret)
  File "C:\salt\bin\lib\site-packages\salt\utils\asynchronous.py", line 74, in _block_future
    return future.result()
  File "C:\salt\bin\lib\site-packages\tornado\concurrent.py", line 238, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 4, in raise_exc_info
  File "C:\salt\bin\lib\site-packages\tornado\gen.py", line 1069, in run
    yielded = self.gen.send(value)
  File "C:\salt\bin\lib\site-packages\salt\transport\zeromq.py", line 303, in crypted_transfer_decode_dictentry
    aes = key.private_decrypt(ret['key'],
AttributeError: 'RsaKey' object has no attribute 'private_decrypt'
```
</details>

**Expected behavior**
Pillar refreshes without error, allowing highstate to run without error

**Screenshots**
Log as above

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
C:\salt> salt-call --versions-report
Salt Version:
           Salt: 2019.2.4
Dependency Versions:
           cffi: 1.12.2
       cherrypy: 17.4.1
       dateutil: 2.8.0
      docker-py: Not Installed
          gitdb: 0.6.4
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.10.1
        libgit2: Not Installed
        libnacl: 1.6.1
       M2Crypto: 0.35.2
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: Not Installed
      pycparser: 2.19
       pycrypto: Not Installed
   pycryptodome: 3.8.1
         pygit2: Not Installed
         Python: 3.5.4 (v3.5.4:3f56838, Aug  8 2017, 02:17:05) [MSC v.1900 64 bit (AMD64)]
   python-gnupg: 0.4.4
         PyYAML: 3.13
          PyZMQ: 18.0.1
           RAET: Not Installed
          smmap: 0.9.0
        timelib: 0.2.4
        Tornado: 4.5.3
            ZMQ: 4.3.1
System Versions:
           dist:
         locale: cp1252
        machine: AMD64
        release: 2019Server
         system: Windows
        version: 2019Server 10.0.17763 SP0 Multiprocessor Free
```
</details>

**Additional context**
We've been using a manually built version of M2Crypto for a while now (v0.30.1) but both that version and version 0.35.2 from the link above exhibit the above error on the servers that are failing. However, other Windows minions don't have this problem, with either version of M2Crypto installed and 2019.2.4.
