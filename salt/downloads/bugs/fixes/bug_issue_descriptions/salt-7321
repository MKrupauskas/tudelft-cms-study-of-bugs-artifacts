Running without init will cause the service.running function to throw an IndexError exception due to '/sbin/runlevel' returning 'unknown'

```
    State: - service
    Name:      postgres
    Function:  running
        Result:    False
        Comment:   An exception occurred in this state: Traceback (most recent call last):
  File "/usr/local/salt/virtualenv/lib/python2.7/site-packages/salt/state.py", line 1237, in call
    *cdata['args'], **cdata['kwargs'])
  File "/usr/local/salt/virtualenv/lib/python2.7/site-packages/salt/states/service.py", line 273, in running
    ret = _available(name, ret)
  File "/usr/local/salt/virtualenv/lib/python2.7/site-packages/salt/states/service.py", line 241, in _available
    ret['available'] = name in __salt__['service.get_all']()
  File "/usr/local/salt/virtualenv/lib/python2.7/site-packages/salt/modules/debian_service.py", line 75, in get_all
    return sorted(ret | set(get_enabled()))
  File "/usr/local/salt/virtualenv/lib/python2.7/site-packages/salt/modules/debian_service.py", line 41, in get_enabled
    prefix = '/etc/rc[S{0}].d/S'.format(_get_runlevel())
  File "/usr/local/salt/virtualenv/lib/python2.7/site-packages/salt/modules/debian_service.py", line 30, in _get_runlevel
    return __salt__['cmd.run']('runlevel').split()[1]
IndexError: list index out of range
```

There has already been a similar fix applied for Red Hat in kickstart environments. I'd like to see this applied for Debian as well. A pull request is forthcoming.
