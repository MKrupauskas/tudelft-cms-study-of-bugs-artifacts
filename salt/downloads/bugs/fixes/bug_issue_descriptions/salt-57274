**Description**
Minions don't pick up pillar data passed to states from state.orchestrate calls

**Setup**
1. Set up a state that requires some custom nested pillar data:
```yaml
{# /srv/salt/orch/run_test.sls #}
do a thing:
  cmd.run:
    - name: echo "{{ pillar['mystrings']['string_one'] }}"
```

2. Call this state from the orchestrate runner:
```yaml
{# /srv/salt/orch/test.sls #}
do the thing:
  salt.state:
    - tgt: minion_mcminionface
    - sls: orch.run_test
    - pillar:
        mystrings:
          string_one: hello world
```

**Steps to Reproduce the behavior**
run `salt-run state.orch orch.test` on the salt-master

**Expected behavior**
targeted minion prints `hello world`

**Actual behavior**
target minion errors with `dict object contains no value "string_one"`

**Versions Report**
same on master and minions
```
Salt Version:
           Salt: 2019.2.4
 
Dependency Versions:
           cffi: 1.6.0
       cherrypy: 5.6.0
       dateutil: 1.5
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.7.2
        libgit2: 0.25.1
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: Not Installed
      pycparser: 2.14
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: 0.25.1
         Python: 2.7.5 (default, Aug  4 2017, 00:39:18)
   python-gnupg: Not Installed
         PyYAML: 3.11
          PyZMQ: 15.3.0
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.1.4
 
System Versions:
           dist: centos 7.4.1708 Core
         locale: UTF-8
        machine: x86_64
        release: 3.10.0-693.21.1.el7.x86_64
         system: Linux
        version: CentOS Linux 7.4.1708 Core
```
