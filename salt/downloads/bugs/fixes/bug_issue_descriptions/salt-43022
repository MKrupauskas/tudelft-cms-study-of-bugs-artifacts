### Description of Issue/Question

### Setup
salt minion on windows apply a state or highstate.

```
    Data failed to compile:
----------
    Traceback (most recent call last):
  File "c:\Salt-Dev\salt\salt\state.py", line 3644, in call_highstate
    top = self.get_top()
  File "c:\Salt-Dev\salt\salt\state.py", line 3101, in get_top
    tops = self.get_tops()
  File "c:\Salt-Dev\salt\salt\state.py", line 2799, in get_tops
    saltenv
  File "c:\Salt-Dev\salt\salt\fileclient.py", line 193, in cache_file
    return self.get_url(path, u'', True, saltenv, cachedir=cachedir)
  File "c:\Salt-Dev\salt\salt\fileclient.py", line 512, in get_url
    result = self.get_file(url, dest, makedirs, saltenv, cachedir=cachedir)
  File "c:\Salt-Dev\salt\salt\fileclient.py", line 1058, in get_file
    path, senv = salt.utils.url.split_env(path)
  File "c:\Salt-Dev\salt\salt\utils\url.py", line 136, in split_env
    path, senv = parse(url)
  File "c:\Salt-Dev\salt\salt\utils\url.py", line 43, in parse
    path = salt.utils.sanitize_win_path_string(path)
  File "c:\Salt-Dev\salt\salt\utils\__init__.py", line 1396, in sanitize_win_path_string
    winpath = winpath.translate(trantab)
TypeError: character mapping must return integer, None or unicode
```

My preference would be to see this function removed, or raise an error.
Also note trantab ends up being a extremely long string, could be all of the unicode chars.

If it must be kept try

```
def sanitize_win_path_string(winpath): 
    return re.sub(u'[\/:*?"<>|]',u'_',winpath,flags=re.UNICODE)
```

I add code to print the winpath value and type. When value passed is Unicode it breaks.
```
2017-08-18 21:46:49,667 [salt.utils       .sanitize_win_path_string][ERROR   ] top.sls
2017-08-18 21:46:49,667 [salt.utils       .sanitize_win_path_string][ERROR   ] <type 'str'>
2017-08-18 21:47:01,229 [salt.utils       .sanitize_win_path_string][ERROR   ] top.sls
2017-08-18 21:47:01,229 [salt.utils       .sanitize_win_path_string][ERROR   ] <type 'unicode'>  <-Causes the issue
```
I have raise this just encase some else comes across it.

Also interest it top.sls starts as a PY2 string and then becomes PY2 unicode latter on.
(I assume it will be fixed when all general strings have been prefixed with `u` across all python files)

### Versions Report
develop on windows as of 2017-08-17