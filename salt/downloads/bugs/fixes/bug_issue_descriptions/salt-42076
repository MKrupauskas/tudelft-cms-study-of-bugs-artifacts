### Description of Issue/Question
When applying the `dockerng.volume_present` state with `test=True`, if no change would be applied the `Result` property comes back as `None`, which is the same as if a change would be applied.

When scanning through the output of a highstate it makes it look as though a change would be applied because the colouring is different to all the other states which also wouldn't result in a change; you have to look at the `Comment` to realise that actually nothing will happen.

For example:
```
user@host ~ $ sudo salt '*' state.apply test=True
...
----------
          ID: api-network
    Function: dockerng.network_present
        Name: api
      Result: True
     Comment: Network 'api' already exists.
     Started: 05:58:23.083014
    Duration: 5.364 ms
     Changes:   
----------
          ID: existent-volume
    Function: dockerng.volume_present
        Name: existent-volume
      Result: None
     Comment: Volume 'existent-volume' already exists.
     Started: 05:58:23.088540
    Duration: 3.736 ms
     Changes:   
----------
          ID: new-volume
    Function: dockerng.volume_present
        Name: new-volume
      Result: None
     Comment: The volume 'new-volume' will be created
     Started: 05:58:23.092434
    Duration: 2.98 ms
     Changes:
...
```

I can see how this could be fixed in the code and am happy to submit a pull request, but am hesitant because returning `Result: None` actually seems more appropriate for the case when no change occurs, particularly as (with my setup at least) it results in a dull grey, whereas `Result: True` results in a yellow 'highlight' colour, which you might expect if you were being alerted to a change.  Results with `Result: None` also contribute to the `unchanged` count at the bottom, whereas `Result: True` contributes to the `Succeeded` count.

I expect the right answer here is just to make this state consistent with everything else, but wanted to raise it just so I can understand a little better what's going on.

### Setup
SLS used in above example:
```
# ./docker/volumes.sls
existent-volume:
  dockerng.volume_present
test-volume:
  dockerng.volume_present
```

### Steps to Reproduce Issue
Apply state using `test=True`:
```
salt '<host-name>' state.apply test=True
```

With a `docker
### Versions Report
```
Salt Version:
           Salt: 2016.11.6
 
Dependency Versions:
           cffi: 1.6.0
       cherrypy: Not Installed
       dateutil: Not Installed
      docker-py: 1.10.6
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.7.2
        libgit2: 0.24.6
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: Not Installed
      pycparser: 2.14
       pycrypto: 2.6.1
   pycryptodome: 3.4.3
         pygit2: 0.24.2
         Python: 2.7.5 (default, Nov  6 2016, 00:28:07)
   python-gnupg: Not Installed
         PyYAML: 3.11
          PyZMQ: 15.3.0
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.1.4
 
System Versions:
           dist: centos 7.3.1611 Core
        machine: x86_64
        release: 3.10.0-514.16.1.el7.x86_64
         system: Linux
        version: CentOS Linux 7.3.1611 Core
```