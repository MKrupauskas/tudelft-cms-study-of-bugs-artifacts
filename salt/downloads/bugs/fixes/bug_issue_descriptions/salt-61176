**Description**
state.\*, pillar.\* etc fail with
```
root@node1 ~ # salt-call pillar.items
local:
    ----------
    _errors:
        - Rendering Primary Top file failed, render error:
          unsupported operand type(s) for &=: 'list' and 'set'
```

**Setup**
```
file_roots:
  alias1:
    - /root/salt4/salt/alias1
    - /root/salt4/salt/base
  alias2:
    - /root/salt4/salt/alias2
    - /root/salt4/salt/base
pillar_source_merging_strategy: none
```
  
**Steps to Reproduce the behavior**

call `salt-call pillar.items` or `salt-call state.apply` on master or any minion.

```
2021-11-03 12:15:26,611 [salt.pillar      :691 ][ERROR   ][874238] Pillar rendering failed for minion saltmaster
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/salt/pillar/__init__.py", line 671, in get_tops
    saltenvs &= {self.saltenv or "base"}
TypeError: unsupported operand type(s) for &=: 'list' and 'set'
2021-11-03 12:15:26,611 [salt.pillar      :1220][CRITICAL][874238] Pillar render error: Rendering Primary Top file failed, render error:
unsupported operand type(s) for &=: 'list' and 'set'
2021-11-03 12:15:26,778 [salt.pillar      :691 ][ERROR   ][874240] Pillar rendering failed for minion saltmaster
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/salt/pillar/__init__.py", line 671, in get_tops
    saltenvs &= {self.saltenv or "base"}
TypeError: unsupported operand type(s) for &=: 'list' and 'set'
2021-11-03 12:15:26,779 [salt.pillar      :1220][CRITICAL][874240] Pillar render error: Rendering Primary Top file failed, render error:
unsupported operand type(s) for &=: 'list' and 'set'
```

**Versions Report**

<details>
Salt Version:
          Salt: 3004
 
Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: 2.7.3
     docker-py: Not Installed
         gitdb: Not Installed
     gitpython: Not Installed
        Jinja2: 2.10.1
       libgit2: Not Installed
      M2Crypto: Not Installed
          Mako: Not Installed
       msgpack: 0.6.2
  msgpack-pure: Not Installed
  mysql-python: 1.4.4
     pycparser: Not Installed
      pycrypto: Not Installed
  pycryptodome: 3.6.1
        pygit2: Not Installed
        Python: 3.8.10 (default, Sep 28 2021, 16:10:42)
  python-gnupg: 0.4.5
        PyYAML: 5.3.1
         PyZMQ: 18.1.1
         smmap: Not Installed
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.3.2
 
System Versions:
          dist: ubuntu 20.04 focal
        locale: utf-8
       machine: x86_64
       release: 5.4.0-89-generic
        system: Linux
       version: Ubuntu 20.04 focal
</details>

**Additional context**

```/usr/lib/python3/dist-packages/salt/pillar/__init__.py```

```
        try:
            saltenvs = set()
            if self.opts["pillarenv"]:
                # If the specified pillarenv is not present in the available
                # pillar environments, do not cache the pillar top file.
                if self.opts["pillarenv"] not in self.opts["pillar_roots"]:
                    log.debug(
                        "pillarenv '%s' not found in the configured pillar "
                        "environments (%s)",
                        self.opts["pillarenv"],
                        ", ".join(self.opts["pillar_roots"]),
                    )
                else:
                    saltenvs.add(self.opts["pillarenv"])
            else:
                saltenvs = self._get_envs()
                if self.opts.get("pillar_source_merging_strategy", None) == "none":
                    saltenvs &= {self.saltenv or "base"}
```