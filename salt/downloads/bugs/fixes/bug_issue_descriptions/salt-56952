**Description**

I have some minions behind a firewall that cannot connect to https://repo.saltstack.com. When pkg.installed is invoked to install a package from an https server, but the server cannot be reached, we get a big stacktrace instead of just an error message. 

**Setup**
Here is one hypothetical sls file which could be called _housekeeping.sls_:

```
salt minion installed:
    pkg.installed:
      - name: salt-minion-py3
      - version: "3000.1"
```


**Steps to Reproduce the behavior**

1. Start with a windows minion running salt version 3000 py3 and be sure that the minion cannot connect via https to _repo.saltstack.com_. Firewalling is one way to do this.

2. Apply the above sls file with something like
    ``` 
    salt-call state.apply housekeeping
    ```
3. You will see output like this

```    
         ID: salt minion installed
    Function: pkg.installed
        Name: salt-minion-py3
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "c:\salt\bin\lib\site-packages\salt-3000-py3.5.egg\salt\state.py", line 1981, in call
                  **cdata['kwargs'])
                File "c:\salt\bin\lib\site-packages\salt-3000-py3.5.egg\salt\loader.py", line 1977, in wrapper
                  return f(*args, **kwargs)
                File "c:\salt\bin\lib\site-packages\salt-3000-py3.5.egg\salt\states\pkg.py", line 1769, in installed
                  **kwargs)
                File "c:\salt\bin\lib\site-packages\salt-3000-py3.5.egg\salt\modules\win_pkg.py", line 1563, in install
                  cached_pkg = __salt__['cp.cache_file'](installer, saltenv)
                File "c:\salt\bin\lib\site-packages\salt-3000-py3.5.egg\salt\modules\cp.py", line 517, in cache_file
                  result = _client().cache_file(path, saltenv, source_hash=source_hash)
                File "c:\salt\bin\lib\site-packages\salt-3000-py3.5.egg\salt\fileclient.py", line 193, in cache_file
                  path, '', True, saltenv, cachedir=cachedir, source_hash=source_hash)
                File "c:\salt\bin\lib\site-packages\salt-3000-py3.5.egg\salt\fileclient.py", line 700, in get_url
                  raise MinionError('Error: {0} reading {1}'.format(query['error'], url))
              salt.exceptions.MinionError: Error: HTTP 599: Timeout while connecting reading https://repo.saltstack.com/windows/Salt-Minion-3000.1-Py3-AMD64-Setup.exe
     Started: 13:15:13.946101
    Duration: 38125.01 ms
     Changes:
```

**Expected behavior**
Ideally we might just report the exception string instead of having the whole stack trace in the comment.

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
Salt Version:
           Salt: 3000.1
 
Dependency Versions:
           cffi: 1.12.3
       cherrypy: Not Installed
       dateutil: 2.8.0
      docker-py: Not Installed
          gitdb: 2.0.3
      gitpython: 3.0.2
         Jinja2: 2.10.1
        libgit2: 0.28.2
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.6.2
   mysql-python: Not Installed
      pycparser: 2.14
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: 0.28.2
         Python: 3.7.7 (default, Mar 13 2020, 10:23:39)
   python-gnupg: Not Installed
         PyYAML: 3.13
          PyZMQ: 18.0.2
          smmap: 2.0.3
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.3.2
 
System Versions:
           dist: fedora 31 Thirty One
         locale: UTF-8
        machine: x86_64
        release: 5.6.6-200.fc31.x86_64
         system: Linux
        version: Fedora 31 Thirty One
```
</details>

