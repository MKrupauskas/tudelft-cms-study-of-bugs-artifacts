boto_secgroup insists on IP protocol values from the list 'tcp', 'udp', 'icmp', 'all', '-1', however AWS accepts custom protocols. For example IP protocol '47' represents GRE traffic. In the AWS GUI, you can type 'GRE' and it's accepted, but converted to the numeric 47. It would probably be sufficient in boto_secgroup to accept numbers. E.g.

``` python
        supported_protocols = ['tcp', 'udp', 'icmp', 'all', '-1']
        if ip_protocol not in supported_protocols and not ip_protocol.isdigit():
            msg = ('Invalid ip_protocol {0} specified in security group rule.')
            raise SaltInvocationError(msg.format(ip_protocol))
```
