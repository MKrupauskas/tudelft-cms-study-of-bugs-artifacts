**Description**
The salt loader injects the salt dunders into each of the loaded functions globals, while the loader mock mixin injects those at the module global scope.

The side effects of this little change is that, the module's private functions don't have access to the salt dunders, when loaded with the salt loader, as opposed to the loader mock moxin where all functions, wrongly, have access to the salt dunders.

The issue here is that, if a module has private functions which rely on salt dunders, while unit tests will pass, at runtime, that same code will fail.

At least, this is the theory which should be investigated.

Refs:
* https://github.com/saltstack/salt/pull/58384
* https://github.com/saltstack/salt/pull/58409