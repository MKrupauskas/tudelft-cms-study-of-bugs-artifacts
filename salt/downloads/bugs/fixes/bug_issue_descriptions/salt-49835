### Description of Issue/Question
There's a long-running setup, using the sitewide config template which have `ipv6:True` set everywhere, to make the system prefer v6. After upgrade one specific cluster, where the ipv6 was temporarily removed we started to lose minions on upgrade, and it turned out that they all were busy doing
```
2018-09-28 14:41:02,306 [salt.utils.network:1819][ERROR   ][178998] DNS lookup or connection check of 'salt2.x.y' failed.
2018-09-28 14:41:02,307 [salt.minion      :166 ][ERROR   ][178998] Master hostname: 'salt2.x.y' not found or not responsive. Retrying in 30 seconds
2018-09-28 14:41:32,335 [salt.utils.network:1819][ERROR   ][178998] DNS lookup or connection check of 'salt2.x.y' failed.
2018-09-28 14:41:32,336 [salt.minion      :166 ][ERROR   ][178998] Master hostname: 'salt2.x.y' not found or not responsive. Retrying in 30 seconds
```
After some bewildered search I have ended up on `/usr/lib/python3/dist-packages/salt/utils/network.py` and it's `dns_check` function. It is supposed to **prefer** IPv6, but it seems **exclusively select it**. The documentation isn't quite clear about that:

> Whether the master should be connected over IPv6. By default salt minion will try to automatically detect IPv6 connectivity to master.

I guess the **"exclusively"** word is badly missing there. :-) (The main problem is that it seems to have worked in the past.)
Or, if the intent was preferring them then the logic definitely should be altered, like doing a two-pass lookup or cache the second-pass results away in a variable and use them if pass1 results are empty.
