Please see http://bit.ly/1vcw435 for the modules and configs in question.

```
Note: I coopted log.critical for my diagnostics
```

I'm not sure what the proper flow through Pillar.compile_pillar() is supposed to be for a py-rendered pillar sls.  This module is very straight forward.  It takes a minion_id in the form of 'app-01.mt.widpi.lab.iad3.caltesting.org' and breaks it down (in-order): subcomponent-instance.component.project.environment.location (environment is not salt-related) and returns a dictionary with the mentioned keys having the associated values.  

The sls calls an external module (/srv/modules/modules/id_info.explode())

The included master log, line 139 shows the external module returning a valid dictionary.

There is an error returned by salt.pillar "global name 'log' is not defined" (line 151).   Kinda ironic as it is complaining about the log handler that produced line 148.

Removing the log handler definition and log.debug statement does make this error message go away, but it doesn't change the disposition of Pillar when trying to do something with the id_info() dictionary.

The only change I made to /srv/modules/pillar/id_info.py was s/run/ext_pillar/ and I had to take out a reference to saltenv--apparently not available to external pillars.

As an external pillar, this works.  As a /srv/pillar/base/#!py.sls module it gives me this.  

 I'm not 100% certain that this worked without errors under 2014.1.14, but it did return the dictionaries that I required to the proper hosts.  Under 2014.7.0 it does not work at all.

The results are no different without my logging and trace elements.  I have also tested with and without my additional external pillars in place.

Please let me know if you need further information.

Thanks!
