No error message when using itself:

<pre>
A:
  cmd.run:
    - name: echo "A"
    - use:
        cmd: A
</pre>

Nothing on a simple face to face:

<pre>
A:
  cmd.run:
    - name: echo "A"
    - onlyif: return False
    - use:
        cmd: B

B:
  cmd.run:
    - name: echo "B"
    - unless: return False
    - use:
        cmd: A
</pre>

Strangely here, only A gets `onlyif execution failed`

Or a more complex ones:

<pre>
#
# A &lt;--+ ---u--+
#      |       |
# B -u-+ &lt;-+   |
#          |   |
# C -u-----+ &lt;-+

A:
  cmd.run:
    - name: echo "A"
    - use:
        cmd: C

B:
  cmd.run:
    - name: echo "B"
    - use:
        cmd: C

C:
  cmd.run:
    - name: echo "B"
    - use:
        cmd: A
</pre>


All theses states perform, but they should not, as attributes values could not be decided if they cycle in inheritance. Well, actually because of #8796 use does not inherit inherited attributes. But if that would happen such cycle would maybe set shared default values and overwrite a part of it in each state. But without use inheritance I'm not sure we could decide which values of B are inherited from A, on some case A may already have the C attributes, and and others not yet. Complex things, a better thing would be to detect the loops and prevent it.
