When I use mysql module to change charset of a database it fails with a syntax error as it tries to build the sql command using binary strings.

### Setup
I have this error in a masterless configuration

Ubuntu 18.04.4 LTS
mysql  Ver 15.1 Distrib 10.1.44-MariaDB

/etc/salt/minion
```
mysql.conv:
mysql.host: 'localhost'
mysql.port: 3306
mysql.pass: *****
mysql.user: 'root'
mysql.unix_socket: '/var/run/mysqld/mysqld.sock'
mysql.db: 'mysql'
mysql.charset: 'utf8mb4'
mysql.use_unicode: True
mysql.binary_prefix: True

```


### Steps to Reproduce Issue

```
salt-call   --local  mysql.db_create 'db1' 'utf8' 'utf8_general_ci'
local:
    True
```

```
salt-call -c /etc/salt.local --local  mysql.alter_db db1 mysql.charset="utf8mb4"

[ERROR   ] An un-handled exception was caught by salt's global exception handler:
ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'b'utf8' COLLATE b'utf8_general_ci'' at line 1")
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    load_entry_point('salt==3001', 'console_scripts', 'salt-call')()
  File "/usr/lib/python3/dist-packages/salt/scripts.py", line 472, in salt_call
    client.run()
  File "/usr/lib/python3/dist-packages/salt/cli/call.py", line 58, in run
    caller.run()
  File "/usr/lib/python3/dist-packages/salt/cli/caller.py", line 121, in run
    ret = self.call()
  File "/usr/lib/python3/dist-packages/salt/cli/caller.py", line 229, in call
    self.opts, data, func, args, kwargs
  File "/usr/lib/python3/dist-packages/salt/executors/direct_call.py", line 12, in execute
    return func(*args, **kwargs)
  File "/var/cache/salt/minion/extmods/modules/mysql.py", line 1019, in alter_db
    _execute(cur, qry, args)
  File "/var/cache/salt/minion/extmods/modules/mysql.py", line 604, in _execute
    return cur.execute(qry)
  File "/usr/lib/python3/dist-packages/MySQLdb/cursors.py", line 250, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python3/dist-packages/MySQLdb/connections.py", line 50, in defaulterrorhandler
    raise errorvalue
  File "/usr/lib/python3/dist-packages/MySQLdb/cursors.py", line 247, in execute
    res = self._query(query)
  File "/usr/lib/python3/dist-packages/MySQLdb/cursors.py", line 411, in _query
    rowcount = self._do_query(q)
  File "/usr/lib/python3/dist-packages/MySQLdb/cursors.py", line 374, in _do_query
    db.query(q)
  File "/usr/lib/python3/dist-packages/MySQLdb/connections.py", line 292, in query
    _mysql.connection.query(self, query)
_mysql_exceptions.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'b'utf8' COLLATE b'utf8_general_ci'' at line 1")
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    load_entry_point('salt==3001', 'console_scripts', 'salt-call')()
  File "/usr/lib/python3/dist-packages/salt/scripts.py", line 472, in salt_call
    client.run()
  File "/usr/lib/python3/dist-packages/salt/cli/call.py", line 58, in run
    caller.run()
  File "/usr/lib/python3/dist-packages/salt/cli/caller.py", line 121, in run
    ret = self.call()
  File "/usr/lib/python3/dist-packages/salt/cli/caller.py", line 229, in call
    self.opts, data, func, args, kwargs
  File "/usr/lib/python3/dist-packages/salt/executors/direct_call.py", line 12, in execute
    return func(*args, **kwargs)
  File "/var/cache/salt/minion/extmods/modules/mysql.py", line 1019, in alter_db
    _execute(cur, qry, args)
  File "/var/cache/salt/minion/extmods/modules/mysql.py", line 604, in _execute
    return cur.execute(qry)
  File "/usr/lib/python3/dist-packages/MySQLdb/cursors.py", line 250, in execute
    self.errorhandler(self, exc, value)
  File "/usr/lib/python3/dist-packages/MySQLdb/connections.py", line 50, in defaulterrorhandler
    raise errorvalue
  File "/usr/lib/python3/dist-packages/MySQLdb/cursors.py", line 247, in execute
    res = self._query(query)
  File "/usr/lib/python3/dist-packages/MySQLdb/cursors.py", line 411, in _query
    rowcount = self._do_query(q)
  File "/usr/lib/python3/dist-packages/MySQLdb/cursors.py", line 374, in _do_query
    db.query(q)
  File "/usr/lib/python3/dist-packages/MySQLdb/connections.py", line 292, in query
    _mysql.connection.query(self, query)
_mysql_exceptions.ProgrammingError: (1064, "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'b'utf8' COLLATE b'utf8_general_ci'' at line 1")

```

### Versions Report

Salt Version:
           Salt: 3001

Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.6.1
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
         Jinja2: 2.10
        libgit2: Not Installed
       M2Crypto: Not Installed
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.5.6
   mysql-python: 1.3.10
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: 3.4.7
         pygit2: Not Installed
         Python: 3.6.9 (default, Jul 17 2020, 12:50:27)
   python-gnupg: 0.4.1
         PyYAML: 3.12
          PyZMQ: 17.1.2
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.5.3
            ZMQ: 4.3.1

System Versions:
           dist: ubuntu 18.04 Bionic Beaver
         locale: utf8
        machine: x86_64
        release: 4.15.0-112-generic
         system: Linux
        version: Ubuntu 18.04 Bionic Beaver

### Workaround

If I add conversion (.decode("utf-8") to the binary strings in /var/cache/salt/minion/extmods/modules/mysql.py Line 1016/1017 the command succeeds ...

```
1013     existing = db_get(name, **connection_args)
1014     qry = 'ALTER DATABASE `{0}` CHARACTER SET {1} COLLATE {2};'.format(
1015         name.replace('%', r'\%').replace('_', r'\_'),
1016         (character_set or existing.get('character_set')).decode("utf-8"),
1017         (collate or existing.get('collate').decode("utf-8")))
1018     args = {}
1019     _execute(cur, qry, args)

`Â´`