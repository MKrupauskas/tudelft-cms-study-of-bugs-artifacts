**Description**
The 3003rc1 minion appears unable to communicate with the 3002.5 master.

```
[ERROR] An un-handled exception was caught by salt's global exception handler:
AttributeError: 'NoneType' object has no attribute '__iter__'
Traceback (most recent call last):
  File "/usr/bin/salt-call", line 11, in <module>
    load_entry_point('salt==3003rc1', 'console_scripts', 'salt-call')()
  File "/usr/lib/python3/dist-packages/salt/scripts.py", line 449, in salt_call
    client.run()
  File "/usr/lib/python3/dist-packages/salt/cli/call.py", line 58, in run
    caller.run()
  File "/usr/lib/python3/dist-packages/salt/cli/caller.py", line 112, in run
    ret = self.call()
  File "/usr/lib/python3/dist-packages/salt/cli/caller.py", line 219, in call
    ret["return"] = self.minion.executors[fname](
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 1235, in __call__
    return self.loader.run(run_func, *args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 2262, in run
    return self._last_context.run(self._run_as, _func_or_method, *args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 2277, in _run_as
    return _func_or_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/executors/direct_call.py", line 12, in execute
    return func(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 1235, in __call__
    return self.loader.run(run_func, *args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 2262, in run
    return self._last_context.run(self._run_as, _func_or_method, *args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 2277, in _run_as
    return _func_or_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/modules/state.py", line 806, in test
    ret = apply_(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/modules/state.py", line 793, in apply_
    return highstate(**kwargs)
  File "/usr/lib/python3/dist-packages/salt/modules/state.py", line 1115, in highstate
    ret = st_.call_highstate(
  File "/usr/lib/python3/dist-packages/salt/state.py", line 4482, in call_highstate
    matches = self.top_matches(top)
  File "/usr/lib/python3/dist-packages/salt/state.py", line 3957, in top_matches
    ext_matches = self._master_tops()
  File "/usr/lib/python3/dist-packages/salt/state.py", line 3976, in _master_tops
    return self.client.master_tops()
  File "/usr/lib/python3/dist-packages/salt/fileclient.py", line 1418, in master_tops
    return self.channel.send(load)
  File "/usr/lib/python3/dist-packages/salt/utils/asynchronous.py", line 126, in wrap
    six.reraise(*results[1])
  File "/usr/lib/python3/dist-packages/salt/ext/six.py", line 693, in reraise
    raise value
  File "/usr/lib/python3/dist-packages/salt/utils/asynchronous.py", line 132, in _target
    result = io_loop.run_sync(lambda: getattr(self.obj, key)(*args, **kwargs))
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/ioloop.py", line 459, in run_sync
    return future_cell[0].result()
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/concurrent.py", line 249, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 4, in raise_exc_info
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/gen.py", line 1064, in run
    yielded = self.gen.throw(*exc_info)
  File "/usr/lib/python3/dist-packages/salt/transport/zeromq.py", line 443, in send
    ret = yield self._crypted_transfer(
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/gen.py", line 1056, in run
    value = future.result()
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/concurrent.py", line 249, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 4, in raise_exc_info
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/gen.py", line 1064, in run
    yielded = self.gen.throw(*exc_info)
  File "/usr/lib/python3/dist-packages/salt/transport/zeromq.py", line 413, in _crypted_transfer
    ret = yield _do_transfer()
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/gen.py", line 1056, in run
    value = future.result()
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/concurrent.py", line 249, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 4, in raise_exc_info
  File "/usr/lib/python3/dist-packages/salt/ext/tornado/gen.py", line 309, in wrapper
    yielded = next(result)
  File "/usr/lib/python3/dist-packages/salt/transport/zeromq.py", line 394, in _do_transfer
    self._package_load(self.auth.crypticle.dumps(load)),
  File "/usr/lib/python3/dist-packages/salt/crypt.py", line 1538, in dumps
    return self.encrypt(self.PICKLE_PAD + self.serial.dumps(obj))
  File "/usr/lib/python3/dist-packages/salt/payload.py", line 195, in dumps
    return salt.utils.msgpack.packb(
  File "/usr/lib/python3/dist-packages/salt/utils/msgpack.py", line 133, in packb
    return msgpack.packb(o, **_sanitize_msgpack_kwargs(kwargs))
  File "/usr/lib/python3/dist-packages/msgpack/__init__.py", line 46, in packb
    return Packer(**kwargs).pack(o)
  File "msgpack/_packer.pyx", line 284, in msgpack._cmsgpack.Packer.pack
  File "msgpack/_packer.pyx", line 290, in msgpack._cmsgpack.Packer.pack
  File "msgpack/_packer.pyx", line 287, in msgpack._cmsgpack.Packer.pack
  File "msgpack/_packer.pyx", line 234, in msgpack._cmsgpack.Packer._pack
  File "msgpack/_packer.pyx", line 234, in msgpack._cmsgpack.Packer._pack
  File "msgpack/_packer.pyx", line 277, in msgpack._cmsgpack.Packer._pack
  File "/usr/lib/python3/dist-packages/salt/payload.py", line 190, in ext_type_encoder
    return dict(obj)
  File "/usr/lib/python3.8/_collections_abc.py", line 720, in __iter__
    yield from self._mapping
  File "/usr/lib/python3/dist-packages/salt/loader_context.py", line 90, in __iter__
    return self.value().__iter__()
```

**Steps to Reproduce the behavior**
```sh
salt-call state.test
```

**Expected behavior**
> **Please note:** we do support differing versions between master and minions.
>
> â€” [Slack announcement](https://saltstackcommunity.slack.com/archives/CNZKJMQ1E/p1615235945031100)

**Versions Report**
<details><summary>minion</summary>

```
Salt Version:
          Salt: 3003rc1

Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: 2.7.3
     docker-py: Not Installed
         gitdb: Not Installed
     gitpython: Not Installed
        Jinja2: 2.10.1
       libgit2: 0.28.3
      M2Crypto: 0.31.0
          Mako: Not Installed
       msgpack: 0.6.2
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: Not Installed
      pycrypto: Not Installed
  pycryptodome: 3.6.1
        pygit2: 1.0.3
        Python: 3.8.5 (default, Jan 27 2021, 15:41:15)
  python-gnupg: 0.4.5
        PyYAML: 5.3.1
         PyZMQ: 18.1.1
         smmap: Not Installed
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.3.2

System Versions:
          dist: ubuntu 20.04 focal
        locale: utf-8
       machine: x86_64
       release: 5.4.0-66-generic
        system: Linux
       version: Ubuntu 20.04 focal
```
</details>
<details><summary>master</summary>

```
Salt Version:
          Salt: 3002.5

Dependency Versions:
          cffi: Not Installed
      cherrypy: Not Installed
      dateutil: 2.7.3
     docker-py: Not Installed
         gitdb: 2.0.6
     gitpython: 3.0.7
        Jinja2: 2.10.1
       libgit2: 0.28.3
      M2Crypto: 0.31.0
          Mako: Not Installed
       msgpack: 0.6.2
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: Not Installed
      pycrypto: Not Installed
  pycryptodome: 3.6.1
        pygit2: 1.0.3
        Python: 3.8.5 (default, Jan 27 2021, 15:41:15)
  python-gnupg: 0.4.5
        PyYAML: 5.3.1
         PyZMQ: 18.1.1
         smmap: 2.0.5
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.3.2

System Versions:
          dist: ubuntu 20.04 focal
        locale: utf-8
       machine: x86_64
       release: 5.4.0-66-generic
        system: Linux
       version: Ubuntu 20.04 focal
```
</details>

**Additional context**
<details><summary>Debug logs</summary>

```
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/default_env.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/default_env.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/events.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/events.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/logging.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/logging.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/misc.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/misc.conf
[DEBUG   ] Including configuration from '/etc/salt/minion.d/output.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/output.conf
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: my-minion.example.com
[DEBUG   ] Using pkg_resources to load entry points
[DEBUG   ] Override  __grains__: <module 'salt.loaded.int.log_handlers.sentry_mod' from '/usr/lib/python3/dist-packages/salt/log/handlers/sentry_mod.py'>
[INFO    ] Processing `log_handlers.logstash`
[DEBUG   ] Adding the 'logstash' provided logging handler: '<DatagramLogstashHandler (DEBUG)>'
[DEBUG] Configuration file path: /etc/salt/minion
[WARNING] Insecure logging configuration detected! Sensitive data may be logged.
[DEBUG] Grains cache last modified 495 seconds ago and cache expiration is set to 300. Grains cache expired. Refreshing.
[DEBUG] Reading configuration from /etc/salt/minion
[DEBUG] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG] Including configuration from '/etc/salt/minion.d/default_env.conf'
[DEBUG] Reading configuration from /etc/salt/minion.d/default_env.conf
[DEBUG] Including configuration from '/etc/salt/minion.d/events.conf'
[DEBUG] Reading configuration from /etc/salt/minion.d/events.conf
[DEBUG] Including configuration from '/etc/salt/minion.d/logging.conf'
[DEBUG] Reading configuration from /etc/salt/minion.d/logging.conf
[DEBUG] Including configuration from '/etc/salt/minion.d/misc.conf'
[DEBUG] Reading configuration from /etc/salt/minion.d/misc.conf
[DEBUG] Including configuration from '/etc/salt/minion.d/output.conf'
[DEBUG] Reading configuration from /etc/salt/minion.d/output.conf
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Override  __utils__: <module 'salt.loaded.int.grains.zfs' from '/usr/lib/python3/dist-packages/salt/grains/zfs.py'>
[DEBUG] Elapsed time getting FQDNs: 0.020638465881347656 seconds
[DEBUG] Loading static grains from /etc/salt/grains
[DEBUG] LazyLoaded zfs.is_supported
[DEBUG] Connecting to master. Attempt 1 of 1
[DEBUG] "salt" Not an IP address? Assuming it is a hostname.
[DEBUG] Master URI: tcp://192.168.140.30:4506
[DEBUG] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'my-minion.example.com', 'tcp://192.168.140.30:4506')
[DEBUG] Generated random reconnect delay between '1000ms' and '11000ms' (1315)
[DEBUG] Setting zmq_reconnect_ivl to '1315ms'
[DEBUG] Setting zmq_reconnect_ivl_max to '11000ms'
[DEBUG] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'my-minion.example.com', 'tcp://192.168.140.30:4506', 'clear')
[DEBUG] Connecting the Minion to the Master URI (for the return server): tcp://192.168.140.30:4506
[DEBUG] Trying to connect to: tcp://192.168.140.30:4506
[DEBUG] salt.crypt.get_rsa_pub_key: Loading public key
[DEBUG] Decrypting the current master AES key
[DEBUG] salt.crypt.get_rsa_key: Loading private key
[DEBUG] salt.crypt._get_key_with_evict: Loading private key
[DEBUG] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG] salt.crypt.get_rsa_pub_key: Loading public key
[DEBUG] Closing AsyncZeroMQReqChannel instance
[DEBUG] Connecting the Minion to the Master publish port, using the URI: tcp://192.168.140.30:4505
[DEBUG] salt.crypt.get_rsa_key: Loading private key
[DEBUG] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG] Determining pillar cache
[DEBUG] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'my-minion.example.com', 'tcp://192.168.140.30:4506', 'aes')
[DEBUG] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'my-minion.example.com', 'tcp://192.168.140.30:4506')
[DEBUG] Connecting the Minion to the Master URI (for the return server): tcp://192.168.140.30:4506
[DEBUG] Trying to connect to: tcp://192.168.140.30:4506
[DEBUG] salt.crypt.get_rsa_key: Loading private key
[DEBUG] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG] Closing AsyncZeroMQReqChannel instance
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded jinja.render
[DEBUG] LazyLoaded yaml.render
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded state.test
[DEBUG] LazyLoaded direct_call.execute
[DEBUG] Override  __grains__: <module 'salt.loaded.int.module.grains' from '/usr/lib/python3/dist-packages/salt/modules/grains.py'>
[DEBUG] LazyLoaded grains.get
[DEBUG] LazyLoaded saltutil.is_running
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'my-minion.example.com', 'tcp://192.168.140.30:4506', 'aes')
[DEBUG] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'my-minion.example.com', 'tcp://192.168.140.30:4506')
[DEBUG] Connecting the Minion to the Master URI (for the return server): tcp://192.168.140.30:4506
[DEBUG] Trying to connect to: tcp://192.168.140.30:4506
[DEBUG] Gathering pillar data for state run
[DEBUG] Finished gathering pillar data for state run
[INFO] Loading fresh modules for state activity
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded jinja.render
[DEBUG] LazyLoaded yaml.render
[DEBUG] Using pkg_resources to load entry points
[DEBUG] In saltenv 'base', looking at rel_path 'top.sls' to resolve 'salt://top.sls'
[DEBUG] In saltenv 'base', ** considering ** path '/var/cache/salt/minion/files/base/top.sls' to resolve 'salt://top.sls'
[DEBUG] compile template: /var/cache/salt/minion/files/base/top.sls
[DEBUG] Jinja search path: ['/var/cache/salt/minion/files/base']
[DEBUG] Using pkg_resources to load entry points
[DEBUG] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'my-minion.example.com', 'tcp://192.168.140.30:4506', 'aes')
[DEBUG] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'my-minion.example.com', 'tcp://192.168.140.30:4506')
[DEBUG] Connecting the Minion to the Master URI (for the return server): tcp://192.168.140.30:4506
[DEBUG] Trying to connect to: tcp://192.168.140.30:4506
[PROFILE] Time (in seconds) to render '/var/cache/salt/minion/files/base/top.sls' using 'jinja' renderer: 0.015806913375854492
[DEBUG] Rendered data from file: /var/cache/salt/minion/files/base/top.sls:
base:
  'kernel:Linux':
    - match: grain
    - ufw

  'os_family:Debian':
    - match: grain
    - apt.apt_conf
    - apt.unattended
    - cacerts

  'domain:exammple.com':
    - match: grain
    - kerberos
    - my.network

  'manufacturer:Dell Inc.':
    - match: grain
    - dell

  'my-*':
    - my.defaults


[PROFILE] Time (in seconds) to render '/var/cache/salt/minion/files/base/top.sls' using 'yaml' renderer: 0.0016546249389648438
[DEBUG] LazyLoaded confirm_top.confirm_top
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded grain_match.match
[DEBUG] grains target: kernel:Linux
[DEBUG] Attempting to match 'Linux' in 'kernel' using delimiter ':'
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded grain_match.match
[DEBUG] grains target: os_family:Debian
[DEBUG] Attempting to match 'Debian' in 'os_family' using delimiter ':'
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded grain_match.match
[DEBUG] grains target: domain:example.com
[DEBUG] Attempting to match 'example.com' in 'domain' using delimiter ':'
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded grain_match.match
[DEBUG] grains target: manufacturer:Dell Inc.
[DEBUG] Attempting to match 'Dell Inc.' in 'manufacturer' using delimiter ':'
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded compound_match.match
[DEBUG] Using pkg_resources to load entry points
[DEBUG] compound_match: my-minion.example.com ? my-*
[DEBUG] LazyLoaded glob_match.match
[DEBUG] compound_match my-minion.example.com ? "my-*" => "True"
[DEBUG] Using pkg_resources to load entry points
[DEBUG] LazyLoaded compound_match.match
[DEBUG] The _ext_nodes master function has been renamed to _master_tops. To ensure compatibility when using older Salt masters we will continue to invoke the function as _ext_nodes until the 3002 release.
[DEBUG] salt.crypt.get_rsa_key: Loading private key
[DEBUG] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG] Closing AsyncZeroMQReqChannel instance
[DEBUG] Closing AsyncZeroMQReqChannel instance
```
</details>
