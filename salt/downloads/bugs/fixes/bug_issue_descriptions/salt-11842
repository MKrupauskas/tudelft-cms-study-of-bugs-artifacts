Some packages on Windows don't provide any version information which causes some trouble, e.g. [ImageJ](http://imagej.nih.gov/ij/):

**win_repo definition**:

``` YAML
imagej:
    147:
        # a JRE needs to be provided as separate required pkg
        installer: http://imagej.nih.gov/ij/download/win32/ij147-nojre-setup.exe
        full_name: 'ImageJ 1.47v'
        install_flags: ' /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-'
        msiexec: False
        uninstaller: '"%PROGRAMFILES%"\ImageJ\unins000.exe'
        uninstall_flags: ' /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-'
```

Installing this package "fails" (package is installed, but not properly recognized by Salt) when applying the highstate:

```
          ID: imagej
    Function: pkg.installed
      Result: False
     Comment: The following packages failed to install/update: imagej=147.
     Changes:
```

The result in `pkg.list_pkgs` is:

```
    imagej:
        Not Found
```

which then leads to a new attempt to install the package each time the state is applied.

I'm not sure how this could be handled by Salt/the Windows package provider.
Maybe use the version from the win repo definition and identify the package using its full_name. This would require the full_name to be different for each version which is actually quite often the case for such packages.

Any other ideas?

In this case I [reported](https://github.com/imagej/ij1-installer/issues/3) the issue, but in the wild there are also a lot of proprietary/legacy packages doing the same where a fix won't be available.
