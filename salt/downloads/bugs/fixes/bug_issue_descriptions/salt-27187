salt version: 2015.5.5
OS: CentOS 6.7

Exemplary SLS file:

```
known_host:
  ssh_known_hosts.present:
    - user: root
    - name: 192.168.0.4
    - enc: ssh-rsa
    - key: [...]
    - hash_hostname: False
```

Before applying that state the `/root/.ssh/known_hosts` file looks like this:

```
192.168.0.1 ssh-rsa AAAAB3NzaC...
192.168.0.2 ssh-rsa AAAAB3NzaC...
192.168.0.3 ssh-rsa AAAAB3NzaC...
```

After applying that state it looks like this:

```
|1|eARx2TlDt45pwTmz9ZX8s6TfouI=|PPkpMvzEG9G2gAafWGLHDMvGC5E= ssh-rsa AAAAB3NzaC...
|1|nw8iwPXezpFbtLQMsgPuvHA+vqw=|hZ4UixkEUG+oCzddtaT1e36bMSs= ssh-rsa AAAAB3NzaC...
|1|fYdCFyp6FgL+k4AyH6m4j1AQW00=|o26GjFZgFXIFpblFckqJ+3CLZh0= ssh-rsa AAAAB3NzaC...
192.168.0.4 ssh-rsa AAAAB3NzaC...
```

In https://github.com/saltstack/salt/blob/develop/salt/modules/ssh.py#L971 `ssh.hash_known_hosts` is called regardless of `hash_hostname` which leads to this unexpected side effect. Line 970 could be changed to `if hash_hostname:` but I would still not expect to have all my hostnames getting hashed when I add a single entry. It's better to just hash this one hostname which is being added when `hash_hostname: true`.
