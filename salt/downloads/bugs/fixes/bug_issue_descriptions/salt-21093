If `show_changes` is `False`, and `append_if_not_found` or `prepend_if_not_found` are `True`, then `file.replace` will overwrite the file so it only contains the `repl`/`not_found_content` string. This is because the code relies on the `newfile` parameter to write out the changes, but `newfile` is only populated if `show_changes` is `True`.

Behavior is the same on 2014.7, 2015.2, and develop.
https://github.com/saltstack/salt/blob/2014.7/salt/modules/file.py#L1176

```
# echo 'abc' > ~/foo
# salt-call --local file.replace path=~/foo pattern='xyz' repl='xyz' append_if_not_found=True show_changes=False
local:
    True
# cat foo
xyz
```

```
# salt-call --local file.replace path=~/foo pattern='baz' repl='none' not_found_content='some string' append_if_not_found=True show_changes=False
local:
    True
# cat foo
some string
```

I've overhauled much of `file.replace` in PR https://github.com/saltstack/salt/pull/21030, but I haven't yet addressed this behavior. To correct it, I think the append/prepend block might need to read through the file itself.
