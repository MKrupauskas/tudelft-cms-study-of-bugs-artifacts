I am using pyobjects, silly me...
The following code doesn't work: 

```
    password = ''.join(random.SystemRandom().choice(
        string.ascii_letters + string.digits) for _ in range(20))
```

it fails with this message:

```
    Data failed to compile:
----------
    Rendering SLS failed, render error: global name 'random' is not defined
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/salt/state.py", line 2425, in render_state
    sls, rendered_sls=mods
  File "/usr/lib/python2.7/dist-packages/salt/template.py", line 84, in compile_template
    ret = render(input_data, saltenv, sls, **render_kwargs)
  File "/usr/lib/python2.7/dist-packages/salt/renderers/pyobjects.py", line 450, in render
    exec final_template in _globals, _locals
  File "<string>", line 12, in <module>
  File "<string>", line 12, in <genexpr>
NameError: global name 'random' is not defined
```

However, it works fine when I separate the line.

```
    charlist = [random.SystemRandom().choice(
        string.ascii_letters + string.digits) for _ in range(20)]
    password = ''.join(charlist)
```

Of course, I have `import random, string` at the top of the file

Does this really hand-parse python up to an arbitrary level of complexity? If yes, please document this, so people don't expect too much.
