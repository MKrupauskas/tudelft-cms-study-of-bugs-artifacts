On CentOS7 or RHEL7 add following into `minion` config file:

```
providers:
  service: systemd
```

The try to run `salt-call state.hightstate`. The result is this:

```
# salt-call state.highstate test=true
[ERROR   ] An un-handled exception was caught by salt's global exception handler:
NameError: global name '__salt__' is not defined
Traceback (most recent call last):
  File "/bin/salt-call", line 11, in <module>
    salt_call()
  File "/usr/lib/python2.7/site-packages/salt/scripts.py", line 227, in salt_call
    client.run()
  File "/usr/lib/python2.7/site-packages/salt/cli/call.py", line 69, in run
    caller.run()
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 236, in run
    ret = self.call()
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 138, in call
    ret['return'] = func(*args, **kwargs)
  File "/usr/lib/python2.7/site-packages/salt/modules/state.py", line 468, in highstate
    if _disabled(['highstate']):
  File "/usr/lib/python2.7/site-packages/salt/modules/state.py", line 1277, in _disabled
    _disabled = __salt__['grains.get']('state_runs_disabled')
NameError: global name '__salt__' is not defined
Traceback (most recent call last):
  File "/bin/salt-call", line 11, in <module>
    salt_call()
  File "/usr/lib/python2.7/site-packages/salt/scripts.py", line 227, in salt_call
    client.run()
  File "/usr/lib/python2.7/site-packages/salt/cli/call.py", line 69, in run
    caller.run()
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 236, in run
    ret = self.call()
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 138, in call
    ret['return'] = func(*args, **kwargs)
  File "/usr/lib/python2.7/site-packages/salt/modules/state.py", line 468, in highstate
    if _disabled(['highstate']):
  File "/usr/lib/python2.7/site-packages/salt/modules/state.py", line 1277, in _disabled
    _disabled = __salt__['grains.get']('state_runs_disabled')
NameError: global name '__salt__' is not defined
```

Specifying systemd as a service provider in a state doesn't work either.

This might be related to this issue, that happens when providers are enabled:

```
# salt-call -l debug service.get_all
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Configuration file path: /etc/salt/minion
[DEBUG   ] Reading configuration from /etc/salt/minion
[DEBUG   ] Including configuration from '/etc/salt/minion.d/_schedule.conf'
[DEBUG   ] Reading configuration from /etc/salt/minion.d/_schedule.conf
[DEBUG   ] Initializing new SAuth for ('/etc/salt/pki/minion', 'cs71', 'tcp://192.168.2.102:4506')
[DEBUG   ] Decrypting the current master AES key
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
[DEBUG   ] Error loading module.ipmi: No module named pyghmi.ipmi
[DEBUG   ] Error loading module.tls: ['PyOpenSSL must be installed before this module can be used.']
[DEBUG   ] Error loading module.nacl: libnacl import error, perhaps missing python libnacl package
[DEBUG   ] Error loading module.npm: npm execution module could not be loaded because the npm binary could not be located
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
Passed invalid arguments: list indices must be integers, not str
Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/salt/cli/caller.py", line 138, in call
    ret['return'] = func(*args, **kwargs)
  File "/usr/lib/python2.7/site-packages/salt/modules/systemd.py", line 222, in get_all
    + list(_get_all_legacy_init_scripts().keys())))
  File "/usr/lib/python2.7/site-packages/salt/modules/systemd.py", line 87, in _get_all_units
    out = __salt__['cmd.run_stdout'](
TypeError: list indices must be integers, not str
```

If I do not specify a provider then everything works Ok. 
