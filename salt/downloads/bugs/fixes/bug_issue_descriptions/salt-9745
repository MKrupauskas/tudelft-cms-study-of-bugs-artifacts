My situation is thus:

The master server runs 0.17.4 on ubuntu.
The minion I'm attempting to add runs gentoo and the salt-9999 package, so it's version specified as "2014.1.0-379-ga2de041"

It would appear that the minion is unable to receive pillar data from the master.

```
#  `---> salt 'l4-a22-p53' pillar.items
l4-a22-p53:
    ----------
```

If the node were working it would receive quite a bit of data, such as this one that should get identical pillar data:

```
#  `---> salt 'l3-a22-p53' pillar.items|wc -l
73
```

My pillar top.sls looks like this:

```
base:
  '*':
    - basics
  'l3-a22-p53':
    - s_template2
  'l4-a22-p53':
    - s_template2
```

So it should have gotten some from the \* even if the name match failed.

I've flipped on debug logging on the minion and this is it:

```
2014-01-14 22:31:51,862 [salt.minion                                 ][INFO    ] User sudo_dcstaff Executing command pillar.items with jid 20140114223124762258
2014-01-14 22:31:51,864 [salt.minion                                 ][DEBUG   ] Command details {'tgt_type': 'glob', 'jid': '20140114223124762258', 'tgt': 'l4-a22-p53', 'ret': '', 'user': 'sudo_dcstaff', 'arg': [], 'fun': 'pillar.items'}
2014-01-14 22:31:51,929 [salt.minion                                 ][DEBUG   ] Parsed args: []
2014-01-14 22:31:51,931 [salt.minion                                 ][DEBUG   ] Parsed kwargs: {}
2014-01-14 22:31:51,939 [salt.crypt                                  ][DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
2014-01-14 22:31:52,026 [salt.crypt                                  ][DEBUG   ] Decrypting the current master AES key
2014-01-14 22:31:52,027 [salt.crypt                                  ][DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
2014-01-14 22:31:52,201 [salt.crypt                                  ][DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
2014-01-14 22:31:52,288 [salt.minion                                 ][INFO    ] Returning information for job: 20140114223124762258
```

I tried saltutil.refresh_pillar as well, but that is not particularly helpful.  Lots of stuff added to module, some virtuals, but nothing that seems to indicate why there's no pillar data beings sent.

Any ideas?  Any thoughts on where to start digging?
