**Description**

When running all unit tests with pytest, `test_salt_ext_six_import_override` fails for all four variants:

```python
tmp_path = PosixPath('/tmp/pytest-of-bdrung/pytest-0/test_salt_ext_six_import_overr0')
six_import_line = 'import salt.ext.six'
six_print_line = 'print(salt.ext.six.__name__, salt.ext.six.__file__)'

    @pytest.mark.parametrize(
        "six_import_line,six_print_line",
        (
            ("import salt.ext.six", "print(salt.ext.six.__name__, salt.ext.six.__file__)"),
            ("import salt.ext.six as six", "print(six.__name__, six.__file__)"),
            ("from salt.ext import six", "print(six.__name__, six.__file__)"),
            ("import six", "print(six.__name__, six.__file__)"),
        ),
    )
    def test_salt_ext_six_import_override(tmp_path, six_import_line, six_print_line):
        """
        Ensure we are not using, the now non existent, vendor'ed six
        """
        test_source = """
        import salt
        {}
        {}
        """.format(
            six_import_line, six_print_line
        )
        with pytest.helpers.temp_file(
            "test.py", directory=tmp_path, contents=test_source
        ) as test_source_path:
            env = os.environ.copy()
            env["PYTHONPATH"] = os.pathsep.join(sys.path)
            ret = subprocess.run(
                [sys.executable, str(test_source_path)],
                stderr=subprocess.PIPE,
                stdout=subprocess.PIPE,
                env=env,
                shell=False,
                check=False,
                universal_newlines=True,
            )
            assert ret.returncode == 0
>           assert ret.stdout.strip() == "six {}".format(six.__file__)
E           AssertionError: assert 'six /usr/sha...ny.whl/six.py' == 'six /usr/lib...ckages/six.py'
E             - six /usr/lib/python3/dist-packages/six.py
E             + six /usr/share/python-wheels/six-1.16.0-py2.py3-none-any.whl/six.py
```

**Setup**

Debian unstable (python3-six 1.16.0-2) and Ubuntu 21.04 (python3-six 1.15.0-2).
  
**Steps to Reproduce the behavior**

Run the test cases locally or as part of the Debian package build:
```
LC_ALL=C.UTF-8 NO_INTERNET=1 python3 -m pytest -ra tests/unit tests/pytests/unit/test_ext_importers.py
```

Some tests in `tests/unit` causes this behavior change. Only running the tests in `tests/pytests/unit` will work.

**Versions Report**

salt 3004 and also the master branch as of today (2021-10-29).