### Description of Issue
The `_get_pkg_info` function from `salt.modules.dpkg_lowpkg` is comparing the `osrelease_info` grain against a tuple in order to determine the correct keywords to use when querying dpkg. The issue is that the `osrelease_info` grain returns a list (or at least it does on my systems) and is being compared against a tuple. This is shown in the following snippet from `salt.modules.dpkg_lowpkg`:

This is grabbed from near
https://github.com/saltstack/salt/blob/develop/salt/modules/dpkg_lowpkg.py#L301
```
def _get_pkg_info(*packages, **kwargs):
    '''
    Return list of package information. If 'packages' parameter is empty,
    then data about all installed packages will be returned.

    :param packages: Specified packages.
    :param failhard: Throw an exception if no packages found.
    :return:
    '''
...
    if __grains__['os'] == 'Ubuntu' and __grains__['osrelease_info'] < (12, 4):
        bin_var = '${binary}'
    else:
        bin_var = '${Package}'
```

On Python2, comparing a list against a tuple with `<` will always return `True`. On Python3, this will raise an exception. On ubuntu releases >= 12.4 (assuming based on the code), dpkg uses `${Package}` to insert the package name, whereas on earlier versions `${binary}` represents the package name. Due to the success of this check, the `else` case will never get executed on Python2 if the `osrelease_info` grain returns a list.

Some callers of `_get_pkg_info` depend on the "package" key being available in the dictionary that is returned. Due to this test always succeeding, this results in the "package" key potentially being non-existent on releases later than 12.4.

### Setup
Install Ubuntu newer than 12.4 and try salt-call

### Steps to Reproduce Issue
```
$ salt --async $id pkg.info_installed
Executed command with job ID: 20191006202640409841
$ salt-run jobs.lookup_jid 20191006202640409841
hyEowqOAC7PQnONCkaMI:
    The minion function caused an exception: Traceback (most recent call last):
      File "/usr/lib/python2.7/dist-packages/salt/minion.py", line 1663, in _thread_return
        return_data = minion_instance.executors[fname](opts, data, func, args, kwargs)
      File "/usr/lib/python2.7/dist-packages/salt/executors/direct_call.py", line 12, in execute
        return func(*args, **kwargs)
      File "/usr/lib/python2.7/dist-packages/salt/modules/aptpkg.py", line 2792, in info_installed
        for pkg_name, pkg_nfo in __salt__['lowpkg.info'](*names, failhard=failhard).items():
      File "/usr/lib/python2.7/dist-packages/salt/modules/dpkg_lowpkg.py", line 420, in info
        for pkg_ext_k, pkg_ext_v in dselect_pkg_avail.get(pkg['package'], {}).items():
    KeyError: u'package'
```

### Versions Report
```
Salt Version:
           Salt: 2019.2.1

Dependency Versions:
           cffi: Not Installed
       cherrypy: 17.4.1
       dateutil: 2.7.5
      docker-py: Not Installed
          gitdb: 2.0.5
      gitpython: 2.1.10
          ioflo: Not Installed
         Jinja2: 2.10
        libgit2: Not Installed
        libnacl: 1.6.1
       M2Crypto: Not Installed
           Mako: 1.0.7
   msgpack-pure: Not Installed
 msgpack-python: 0.6.2
   mysql-python: Not Installed
      pycparser: 2.19
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.16 (default, Jul  9 2019, 16:43:02)
   python-gnupg: 0.4.3
         PyYAML: 3.13
          PyZMQ: 17.1.2
           RAET: Not Installed
          smmap: 2.0.5
        timelib: 0.2.4
        Tornado: 5.1.1
            ZMQ: 4.3.1

System Versions:
           dist: Ubuntu 19.04 disco
         locale: UTF-8
        machine: x86_64
        release: 5.0.0-29-generic
         system: Linux
        version: Ubuntu 19.04 disco
```