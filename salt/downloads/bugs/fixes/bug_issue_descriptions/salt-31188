Minion version = 2015.8.7
Master version = 2015.8.7

Command run: `salt Win* state.sls winstates.network`

Exception:

```
Win2012r2:
----------
          ID: network_managed
    Function: network.managed
        Name: saltnet
      Result: False
     Comment: An exception occurred in this state: Traceback (most recent call last):
                File "C:\salt\bin\lib\site-packages\salt\state.py", line 1624, in call
                  **cdata['kwargs'])
                File "C:\salt\bin\lib\site-packages\salt\loader.py", line 1491, in wrapper
                  return f(*args, **kwargs)
                File "C:\salt\bin\lib\site-packages\salt\states\win_network.py", line 288, in managed
                  result = __salt__['ip.enable'](name)
                File "C:\salt\bin\lib\site-packages\salt\modules\win_ip.py", line 187, in enable
                  if is_enabled(iface):
                File "C:\salt\bin\lib\site-packages\salt\modules\win_ip.py", line 160, in is_enabled
                  raise CommandExecutionError('Interface {0!r} not found'.format(iface))
              CommandExecutionError: Interface 'saltnet' not found
     Started: 14:51:45.032000
    Duration: 235.0 ms
     Changes:

Summary for Win2012r2
------------
Succeeded: 0
Failed:    1
------------
Total states run:     1
ERROR: Minions returned with non-zero exit code
```

Here is the state:

```
network_managed:
  network.managed:
    - name: saltnet
    - dns_proto: static
    - dns_servers: 
      - "4.2.2.2"
    - ip_proto: static
    - ip_addrs:
      - 10.0.0.10
    - gateway: 10.0.0.1
```

I'm expecting the state to create the new interface. Maybe I'm misunderstanding the function of network.managed and it only applies to existing interfaces.
