Two recent regressions in the mysql_cache module have broken it fairly significantly.  One is a generic function argument ordering bug which breaks the module globally, while the other only manifests when using PyMySQL (instead of MySQLdb) as the db connector.

I can't seem to push PRs anymore, so here's a tiny patch instead :)
```
index 87ad78eade..7f01cc2473 100644
--- a/salt/cache/mysql_cache.py
+++ b/salt/cache/mysql_cache.py
@@ -90,7 +90,7 @@ def __virtual__():
     return bool(MySQLdb), "No python mysql client installed." if MySQLdb is None else ""


-def run_query(conn, query, retries=3, args=None):
+def run_query(conn, query, args=None, retries=3):
     """
     Get a cursor and run a query. Reconnect up to `retries` times if
     needed.
@@ -203,7 +203,6 @@ def store(bank, key, data):
     query = "REPLACE INTO {} (bank, etcd_key, data) values(%s,%s,%s)".format(
         __context__["mysql_table_name"]
     )
-    query = salt.utils.stringutils.to_bytes(query)
     args = (bank, key, data)

     cur, cnt = run_query(__context__.get("mysql_client"), query, args)
```