### Description of Issue/Question
Currently, module `vault.read_secret` raises exception when there is no secret present at given location (endpoint returns http status code 404). This behavior does not allow much flexibility when used in jinja templates as there is no possibility to catch exceptions, causing sls rendering to fail. I'd suggest changing this behavior to handle exception and return `None` instead.

Example below showcases potential benefit of using this module if it returned `None`.

### Setup
Example state:
```
{% set secret = salt.vault.read_secret('/secrets/secret') %}
/tmp/mysecret:
  file.managed:
    - contents:
      - {{ secret or 'hunter2' }}
```

### Steps to Reproduce Issue
`salt-call state.apply file-with-state-above`

### Versions Report
```
Salt Version:
           Salt: 2017.7.1
 
Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.4.2
      docker-py: Not Installed
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.8
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: 0.21.1
           Mako: 1.0.3
   msgpack-pure: Not Installed
 msgpack-python: 0.4.6
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.12 (default, Nov 19 2016, 06:48:10)
   python-gnupg: Not Installed
         PyYAML: 3.11
          PyZMQ: 15.2.0
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.1.4
 
System Versions:
           dist: Ubuntu 16.04 xenial
         locale: ANSI_X3.4-1968
        machine: x86_64
        release: 4.13.7-1-macbook
         system: Linux
        version: Ubuntu 16.04 xenial
 ```