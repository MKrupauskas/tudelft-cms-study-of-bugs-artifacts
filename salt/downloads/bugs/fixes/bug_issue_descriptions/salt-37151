@Ch3LL  talked extensively to @nmadhok and to @cro.  Nmadhok requested that I put this in and tag him, he knows the fix.  He and I have exchanged a ton of emails over the last week or so about this. What information do you need on this?  In a nutshell, if you don't clone, but create a new vm, the salt-cloud does not get or respond to any of the host, cluster, etc parameters.  the folder and the name of the vm are the only two items that are followed.

@nmadhok 
### Description of Issue/Question

when deploying using salt-cloud to vmware from an iso (i.e. building a new vm) and not cloning, it ignores the cluster and host you tell it to deploy to.
### Setup

(Please provide relevant configs and/or SLS files (Be sure to remove sensitive info).)
 salt --version
salt 2016.11.0-187-g8b9648c

esxi 6.0
vsphere
multiple clusters and 4 different servers
### Steps to Reproduce Issue

(Include debug logs if possible and relevant.)
bmccormick@autodeploy-dhcp:~/build/saltscripts/autodeployment$ sudo ./vmAutoDeploy.py jsons/barry3node.json
vcenter01:
    ----------
    vmware:
        ----------
        BarryNode1:
            True
vm BarryNode1 deleted
[DEBUG   ] Reading configuration from /etc/salt/cloud
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: slc-dhcp-dns.digitalguardian.com
[DEBUG   ] Missing configuration file: /etc/salt/cloud.providers
[DEBUG   ] Including configuration from '/etc/salt/cloud.providers.d/vsphere.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.providers.d/vsphere.conf
[DEBUG   ] Missing configuration file: /etc/salt/cloud.profiles
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/old.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/old.conf
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/tempprofile.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/tempprofile.conf
[DEBUG   ] Configuration file path: /etc/salt/cloud
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[INFO    ] salt-cloud starting
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' **virtual** returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Could not LazyLoad vmware.optimize_providers: 'vmware.optimize_providers' is not available.
[DEBUG   ] The 'vmware' cloud driver is unable to be optimized.
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' **virtual** returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Generating minion keys for 'BarryNode1'
[DEBUG   ] LazyLoaded cloud.fire_event
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode1/creating; data = {'profile': 'tempprofile', 'event': 'starting create', '_stamp': '2016-10-21T14:15:19.772885', 'name': 'BarryNode1', 'provider': 'vcenter01:vmware'}
[DEBUG   ] Setting cpu to: 8
[DEBUG   ] Setting memory to: 65536 MB
[DEBUG   ] Networks adapters to create: ['Network adapter 1', 'Network adapter 2']
[DEBUG   ] SCSI controllers to create: ['SCSI controller 0']
[DEBUG   ] IDE controllers to create: ['IDE 0']
[DEBUG   ] Hard disks to create: ['Hard disk 1']
[DEBUG   ] CD/DVD drives to create: ['CD/DVD drive 1']
[DEBUG   ] config_spec set to:
(vim.vm.ConfigSpec) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   changeVersion = <unset>,
   name = 'BarryNode1',
   version = <unset>,
   uuid = <unset>,
   instanceUuid = <unset>,
   npivNodeWorldWideName = (long) [],
   npivPortWorldWideName = (long) [],
   npivWorldWideNameType = <unset>,
   npivDesiredNodeWwns = <unset>,
   npivDesiredPortWwns = <unset>,
   npivTemporaryDisabled = <unset>,
   npivOnNonRdmDisks = <unset>,
   npivWorldWideNameOp = <unset>,
   locationId = <unset>,
   guestId = 'rhel7_64Guest',
   alternateGuestName = <unset>,
   annotation = <unset>,
   files = (vim.vm.FileInfo) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      vmPathName = '[UT-DEV03] BarryNode1/BarryNode1.vmx',
      snapshotDirectory = <unset>,
      suspendDirectory = <unset>,
      logDirectory = <unset>,
      ftMetadataDirectory = <unset>
   },
   tools = <unset>,
   flags = <unset>,
   consolePreferences = <unset>,
   powerOpInfo = <unset>,
   numCPUs = 8,
   numCoresPerSocket = <unset>,
   memoryMB = 65536,
   memoryHotAddEnabled = <unset>,
   cpuHotAddEnabled = <unset>,
   cpuHotRemoveEnabled = <unset>,
   virtualICH7MPresent = <unset>,
   virtualSMCPresent = <unset>,
   deviceChange = (vim.vm.device.VirtualDeviceSpec) [
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4055,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 1',
               summary = 'DEV5'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-150',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4082,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 2',
               summary = '3nodeautodeploy'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-1020',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualLsiLogicController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -1034,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'SCSI controller 0',
               summary = 'LSI Logic'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 0,
            device = (int) [],
            hotAddRemove = <unset>,
            sharedBus = 'noSharing',
            scsiCtlrUnitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualIDEController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = 11,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'IDE 0',
               summary = 'IDE 0'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 1,
            device = (int) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = 'create',
         device = (vim.vm.device.VirtualDisk) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -2076,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Hard disk 1',
               summary = '100.0 GB'
            },
            backing = (vim.vm.device.VirtualDisk.FlatVer2BackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '',
               datastore = <unset>,
               backingObjectId = <unset>,
               diskMode = 'persistent',
               split = <unset>,
               writeThrough = <unset>,
               thinProvisioned = false,
               eagerlyScrub = <unset>,
               uuid = <unset>,
               contentId = <unset>,
               changeId = <unset>,
               parent = <unset>,
               deltaDiskFormat = <unset>,
               digestEnabled = <unset>,
               deltaGrainSize = <unset>,
               deltaDiskFormatVariant = <unset>,
               sharing = <unset>
            },
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = -1034,
            unitNumber = 0,
            capacityInKB = 104857600,
            capacityInBytes = <unset>,
            shares = <unset>,
            storageIOAllocation = <unset>,
            diskObjectId = <unset>,
            vFlashCacheConfigInfo = <unset>,
            iofilter = (str) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualCdrom) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -3022,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'CD/DVD drive 1',
               summary = 'ISO [build-artifacts] manual-B723/DG8-manual-B-723.iso'
            },
            backing = (vim.vm.device.VirtualCdrom.IsoBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '[build-artifacts] manual-B723/DG8-manual-B-723.iso',
               datastore = 'vim.Datastore:datastore-284',
               backingObjectId = <unset>
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = 11,
            unitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      }
   ],
   cpuAllocation = <unset>,
   memoryAllocation = <unset>,
   latencySensitivity = <unset>,
   cpuAffinity = <unset>,
   memoryAffinity = <unset>,
   networkShaper = <unset>,
   cpuFeatureMask = (vim.vm.ConfigSpec.CpuIdInfoSpec) [],
   extraConfig = (vim.option.OptionValue) [],
   swapPlacement = <unset>,
   bootOptions = <unset>,
   vAppConfig = <unset>,
   ftInfo = <unset>,
   repConfig = <unset>,
   vAppConfigRemoved = <unset>,
   vAssertsEnabled = <unset>,
   changeTrackingEnabled = <unset>,
   firmware = <unset>,
   maxMksConnections = <unset>,
   guestAutoLockEnabled = <unset>,
   managedBy = <unset>,
   memoryReservationLockedToMax = <unset>,
   nestedHVEnabled = <unset>,
   vPMCEnabled = <unset>,
   scheduledHardwareUpgradeInfo = <unset>,
   vmProfile = (vim.vm.ProfileSpec) [],
   messageBusTunnelEnabled = <unset>
}
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode1/requesting; data = {'_stamp': '2016-10-21T14:15:20.094430', 'event': 'requesting instance', 'kwargs': {'profile': 'tempprofile', 'resourcepool': 'Resources', 'dns_servers': ['75.75.75.75'], 'datacenter': 'UT-Dev8', 'minion': {'master': '10.81.9.4'}, 'ssh_username': 'sysadmin', 'image': 'rhel7_64Guest', 'driver': 'vcenter01:vmware', 'cluster': None, 'host': 'UT-DEV8-DEV', 'priv_key': '-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAyRGvT2ymfvFcJHfj37h1CozkDHBGARawBxxsOXd90M49+s9A\nIFZWDNrIO0IpSYImeSd6UUyY26Uh2w6V0iRkLkQIPvf1v3qp1oJGZC3Asa3YZJ3F\nlWICbOnN5LZfEO1eaK0xl08LZSOSLQaQzqQmko6zYyhjZzvVO/RCYLfL2VdGmA82\nmX4Rj6t05HkdkzNjQaBSzIn3v8r3Vxn13PAAs2a8/ilFIrPvlh3g3S8mhI8hF4RQ\nW0MQjtDPiJ25anVvFwGGn3gm0gBqsghtI9O8pSYRpzeXsvrRA5I5m0yhj1F55NoV\nc33XivstchaPA9VnOqNdBCD4S2cHlf6VpufBmQIDAQABAoIBAQDIjoVJOdzRHjqE\nfbmkO78y6NnHtm19RH4MecNRhujOUAnulK8oEjX+2HOE+DdqhRGPI1uUoEyQOiSM\n9f1nALmUlHONK5PKjLW/q24/GovsLrV7lwuwN3Sn4oZmraohnkLfMnIWtNdu6I4z\nryrdk0qOQRyZuX19SWcmSDu1cV85x1f1yqoYT5s3XARpZleqa/RFwjwhhAxES0Ak\nsnp2Fto8cFPe3tvBsgPdgCPv+d5GDGCkEAMLiHoTdaYZH3dHnyV/ndNjSTgkCKPv\ng56d0P4IPCM3Gs+/APLjqhWnz2T4G0RwBTY1TzxLC25SoB6xz6pTJ7QfF78o2msj\nSsVz6MdJAoGBANBJMrHJX8g8+fMAY4W4J2pxGdHd3VqsA+7RwSWaHyyob2q9MXay\n1bdbe3yEjaNxtsoNPiYUiDVNBaHvWkueHqAHJzUkys8YAnNMN0sq+3tmvVTwBLIe\nQZXRh1jKCgSMtlZXl93aK8OVevpGnX9s5GOq2eunWJd4/xHeSuhUwJNvAoGBAPch\nQlLwzceXmvV/obOkTNow9IZidYOQ5KVJDRgAxK/YM9cv+A34gw2NchWVcSN07Unv\nVgt3NMSzOwKOlPA/10c/BZSHCsDe6yE2xxNR6GXc7VtCw15pQlo3i3jh+GYbgQwW\nwboNY+XpXJq4kBs2jCYFT58Xo6zFDbk2wif2/9d3AoGAPVxDFgM4N3pXPFJx/1PY\nMNBvBdexvWONqQ6cMyKranGYmT5xUwGuWl0WDQHT5EG80tuB4qAL3H/7V9B2rm4/\noW9aCprzMH1nQ2ZBp+Baw+jpgBtRltO5CJT4pZynxN1bXiZh9Baw6+aemxqwjXib\n9AzCNF1RiRY5Np9hO/6z2PsCgYEAwtrMis0n08or+opKG3Tey+Nxykvz0Gr8fX6d\n/mEMtIHKTk+aTJm364WtgGs2q/hT6Mn3lE7HopiXXKrDsLMFsT11zuizh+O8jZG9\nYfRhQ3/w/tYjaVuhX7UQGZ5C12+0Tq3azjIkpHFd/PitV2epFYl2gECJY350Faeh\naxWMIH0CgYEAnnoGyDVz/CJCaXRwttm4+f5C2wJjauwdZbU2ROBL8gLAarb/gffT\nt/A6JhEiOVqJoNafHv6JwS3PIAUAeD8BGw4BPncela/9z6MrEuWD9JUthYLoHeWB\nBkqhpm3U3VBcMXgjEIWsL63eytg61NLrSM1zRTPDl4h5jp9aN6Qn4bM=\n-----END RSA PRIVATE KEY-----', 'user': 'Dev8\jenkinsmaster', 'customization': True, 'datastore': 'UT-DEV03', 'password': 'digitalguardian!', 'pub_key': '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyRGvT2ymfvFcJHfj37h1\nCozkDHBGARawBxxsOXd90M49+s9AIFZWDNrIO0IpSYImeSd6UUyY26Uh2w6V0iRk\nLkQIPvf1v3qp1oJGZC3Asa3YZJ3FlWICbOnN5LZfEO1eaK0xl08LZSOSLQaQzqQm\nko6zYyhjZzvVO/RCYLfL2VdGmA82mX4Rj6t05HkdkzNjQaBSzIn3v8r3Vxn13PAA\ns2a8/ilFIrPvlh3g3S8mhI8hF4RQW0MQjtDPiJ25anVvFwGGn3gm0gBqsghtI9O8\npSYRpzeXsvrRA5I5m0yhj1F55NoVc33XivstchaPA9VnOqNdBCD4S2cHlf6VpufB\nmQIDAQAB\n-----END PUBLIC KEY-----', 'power_on': False, 'name': 'BarryNode1', 'url': '10.81.8.6', 'num_cpus': 8, 'deploy': True, 'devices': {'cd': {'CD/DVD drive 1': {'controller': 'IDE 0', 'device_type': 'datastore_iso_file', 'iso_path': '[build-artifacts] manual-B723/DG8-manual-B-723.iso'}}, 'scsi': {'SCSI controller 0': {'type': 'lsilogic'}}, 'disk': {'Hard disk 1': {'controller': 'SCSI controller 0', 'size': 100}}, 'network': {'Network adapter 2': {'switch_type': 'distributed', 'ip': '172.30.0.1', 'adapter_type': 'e1000', 'name': '3nodeautodeploy', 'subnet_mask': '255.255.0.0'}, 'Network adapter 1': {'switch_type': 'distributed', 'subnet_mask': '255.255.252.0', 'name': 'DEV5', 'ip': '10.81.28.111', 'adapter_type': 'e1000', 'gateway': ['10.81.28.1']}}, 'ide': {'IDE 0': {'type': 'sata'}}}, 'template': False, 'memory': '64GB', 'folder': 'DEV5-Barry', 'os': 'bootstrap-salt', 'inline_script': None}}
[INFO    ] Creating BarryNode1
[INFO    ] [ BarryNode1 ] Waiting for create task to finish [0 s]
[INFO    ] [ BarryNode1 ] Successfully completed create task in 1 seconds
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode1/created; data = {'profile': 'tempprofile', 'event': 'created instance', '_stamp': '2016-10-21T14:15:22.071191', 'name': 'BarryNode1', 'provider': 'vcenter01:vmware'}
[DEBUG   ] LazyLoaded nested.output
Virtual Machine(s) have been powered on successfully
primary_mac = 00:50:56:96:70:2f
vcenter01:
    ----------
    vmware:
        ----------
        BarryNode2:
            True
vm BarryNode2 deleted
[DEBUG   ] Reading configuration from /etc/salt/cloud
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: slc-dhcp-dns.digitalguardian.com
[DEBUG   ] Missing configuration file: /etc/salt/cloud.providers
[DEBUG   ] Including configuration from '/etc/salt/cloud.providers.d/vsphere.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.providers.d/vsphere.conf
[DEBUG   ] Missing configuration file: /etc/salt/cloud.profiles
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/old.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/old.conf
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/tempprofile.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/tempprofile.conf
[DEBUG   ] Configuration file path: /etc/salt/cloud
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[INFO    ] salt-cloud starting
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' __virtual__ returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Could not LazyLoad vmware.optimize_providers: 'vmware.optimize_providers' is not available.
[DEBUG   ] The 'vmware' cloud driver is unable to be optimized.
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' **virtual** returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Generating minion keys for 'BarryNode2'
[DEBUG   ] LazyLoaded cloud.fire_event
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode2/creating; data = {'profile': 'tempprofile', 'event': 'starting create', '_stamp': '2016-10-21T14:15:43.572016', 'name': 'BarryNode2', 'provider': 'vcenter01:vmware'}
[DEBUG   ] Setting cpu to: 8
[DEBUG   ] Setting memory to: 65536 MB
[DEBUG   ] Networks adapters to create: ['Network adapter 1', 'Network adapter 2']
[DEBUG   ] SCSI controllers to create: ['SCSI controller 0']
[DEBUG   ] IDE controllers to create: ['IDE 0']
[DEBUG   ] Hard disks to create: ['Hard disk 1']
[DEBUG   ] CD/DVD drives to create: ['CD/DVD drive 1']
[DEBUG   ] config_spec set to:
(vim.vm.ConfigSpec) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   changeVersion = <unset>,
   name = 'BarryNode2',
   version = <unset>,
   uuid = <unset>,
   instanceUuid = <unset>,
   npivNodeWorldWideName = (long) [],
   npivPortWorldWideName = (long) [],
   npivWorldWideNameType = <unset>,
   npivDesiredNodeWwns = <unset>,
   npivDesiredPortWwns = <unset>,
   npivTemporaryDisabled = <unset>,
   npivOnNonRdmDisks = <unset>,
   npivWorldWideNameOp = <unset>,
   locationId = <unset>,
   guestId = 'rhel7_64Guest',
   alternateGuestName = <unset>,
   annotation = <unset>,
   files = (vim.vm.FileInfo) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      vmPathName = '[UT-DEV03] BarryNode2/BarryNode2.vmx',
      snapshotDirectory = <unset>,
      suspendDirectory = <unset>,
      logDirectory = <unset>,
      ftMetadataDirectory = <unset>
   },
   tools = <unset>,
   flags = <unset>,
   consolePreferences = <unset>,
   powerOpInfo = <unset>,
   numCPUs = 8,
   numCoresPerSocket = <unset>,
   memoryMB = 65536,
   memoryHotAddEnabled = <unset>,
   cpuHotAddEnabled = <unset>,
   cpuHotRemoveEnabled = <unset>,
   virtualICH7MPresent = <unset>,
   virtualSMCPresent = <unset>,
   deviceChange = (vim.vm.device.VirtualDeviceSpec) [
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4000,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 1',
               summary = 'DEV5'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-150',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4014,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 2',
               summary = '3nodeautodeploy'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-1020',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualLsiLogicController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -1017,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'SCSI controller 0',
               summary = 'LSI Logic'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 0,
            device = (int) [],
            hotAddRemove = <unset>,
            sharedBus = 'noSharing',
            scsiCtlrUnitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualIDEController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -7,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'IDE 0',
               summary = 'IDE 0'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 1,
            device = (int) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = 'create',
         device = (vim.vm.device.VirtualDisk) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -2084,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Hard disk 1',
               summary = '100.0 GB'
            },
            backing = (vim.vm.device.VirtualDisk.FlatVer2BackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '',
               datastore = <unset>,
               backingObjectId = <unset>,
               diskMode = 'persistent',
               split = <unset>,
               writeThrough = <unset>,
               thinProvisioned = false,
               eagerlyScrub = <unset>,
               uuid = <unset>,
               contentId = <unset>,
               changeId = <unset>,
               parent = <unset>,
               deltaDiskFormat = <unset>,
               digestEnabled = <unset>,
               deltaGrainSize = <unset>,
               deltaDiskFormatVariant = <unset>,
               sharing = <unset>
            },
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = -1017,
            unitNumber = 0,
            capacityInKB = 104857600,
            capacityInBytes = <unset>,
            shares = <unset>,
            storageIOAllocation = <unset>,
            diskObjectId = <unset>,
            vFlashCacheConfigInfo = <unset>,
            iofilter = (str) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualCdrom) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -3001,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'CD/DVD drive 1',
               summary = 'ISO [build-artifacts] manual-B723/DG8-manual-B-723.iso'
            },
            backing = (vim.vm.device.VirtualCdrom.IsoBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '[build-artifacts] manual-B723/DG8-manual-B-723.iso',
               datastore = 'vim.Datastore:datastore-284',
               backingObjectId = <unset>
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = -7,
            unitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      }
   ],
   cpuAllocation = <unset>,
   memoryAllocation = <unset>,
   latencySensitivity = <unset>,
   cpuAffinity = <unset>,
   memoryAffinity = <unset>,
   networkShaper = <unset>,
   cpuFeatureMask = (vim.vm.ConfigSpec.CpuIdInfoSpec) [],
   extraConfig = (vim.option.OptionValue) [],
   swapPlacement = <unset>,
   bootOptions = <unset>,
   vAppConfig = <unset>,
   ftInfo = <unset>,
   repConfig = <unset>,
   vAppConfigRemoved = <unset>,
   vAssertsEnabled = <unset>,
   changeTrackingEnabled = <unset>,
   firmware = <unset>,
   maxMksConnections = <unset>,
   guestAutoLockEnabled = <unset>,
   managedBy = <unset>,
   memoryReservationLockedToMax = <unset>,
   nestedHVEnabled = <unset>,
   vPMCEnabled = <unset>,
   scheduledHardwareUpgradeInfo = <unset>,
   vmProfile = (vim.vm.ProfileSpec) [],
   messageBusTunnelEnabled = <unset>
}
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode2/requesting; data = {'_stamp': '2016-10-21T14:15:44.012145', 'event': 'requesting instance', 'kwargs': {'profile': 'tempprofile', 'resourcepool': 'Resources', 'dns_servers': ['75.75.75.75'], 'datacenter': 'UT-Dev8', 'minion': {'master': '10.81.9.4'}, 'ssh_username': 'sysadmin', 'image': 'rhel7_64Guest', 'driver': 'vcenter01:vmware', 'cluster': None, 'host': 'UT-DEV8-DEV', 'priv_key': '-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEA0T6uY7f2RsJcnA419mOBRHT/XGCLNz5KgvISQDqJlQ7RvUyO\nRyOBe2t+pNszZ2J47U0OgICSMMwg7bGddem5qDtabBd8v3m2FK89wz6hHL/Ey8Ub\n+FKCs/kuyPu24qlEmJBIytgZ0hAtV+V6gjZaPN/92Ag5tfOTAejTx5mYbF6+/T+T\n6iuowgKOFg2zu9MCcu/LFs1Z23Wl45bj25fpUhebTmmb7VsQHqBmnEjGclwSSI+g\nP06uDxdQdA0AFz6H+xxVcY5OFAAm+ePoD7e0IKGXnW1tR3bR1ANbS2rvJTHiQffg\nyTqfrtrz6/Py8npDVktnVuiNFe/kx4/W+h7IPQIDAQABAoIBAHvzK466nNLRs9Zl\nvKWV0C9jNxnbvtwctDrZduJBStrXinsebHHLoJoh1UWG6+5kMMoxiVOp1e++HAtx\n2ZrNt0Lm1euOBkHOsYOTQ3zzDrFfEA69VpJFHlPKWmKIaY/fQVk2r0gptzHuj02w\nDGAyHkZNUau1Q6p6/Sx2ZW2pmNcoPq+Jp8qn/anH2Cyb51gIm6WdQJWKpkUanaKZ\njBB7gm+1FDO7rL8Z7Pq3Np2CwU8ExTEsVO/9/FWkfv5RF6wGKiblUFe5LKXp93Rf\nCgEukM6maf7rJqZPYaoFfHLbYPdyNWAwjo6881NV45hnuyCvJFGPagxby3oCTAOA\n5Hmbx0ECgYEA42PjcAli1B7HrTnpe7591D7BNuYCbj5n2ucCe7QOpRCemKksXVCv\nyKvHPaO639sRKr3Rev9eWr96287W9gJjUslGXdJVrekw9oAL4JQp4SvfZdEMtIT6\nhxtG168Vh6Q5397D2Ee35qfYFTj3ekxjWGatOZmED8ageFneq9yVxbkCgYEA65JX\naPGTI3dXnb294IZICKRNxKO4rpsHvAyiqLziagTw7tuGA9bg0s5jPzpoetfgK1tp\nqO8MWT+Kzi0QcHgFW1QaUIgDRrCgwdYUjF4S/MS7R5BIrp8TD9OAUbQZqXra1MeH\nIN6Y+/8GM1BhiXzVnYdWx33ddF6OuktKblH1GKUCgYAvZhn5t6snJkdfH4xA5CNc\ng7xI0kc9bbq+UZsd6BmJZN56WgFKblBGFzCP87o3gXWhoDGzXtnvNqzIduQuIa9M\niXIminqbptky+NwA80GLk1ac5aetVW7XjOMGgJOPU7dQqCHQyppV9TTAr8A+eP/Y\nZIbFU+/IThITJECbOH7r2QKBgAOpq9hC4VHM2jzmpVwnWllgDKGBFi8I1A71d1X+\nUdrqJsDgAu5uWeKNOPfTtaorTx39duAcj2mX1lWsV7QX+aVY4mvcIYjo2CcLaBhi\nohLyECNlt+uXJ5m4ZSdgEIIVGe/zBkPZkjFg3rzPhCS6Hywq3YuOhnH3wmpdH1Ql\nzBTNAoGAWUQJx+oovycATH30vyDoAf08cQTF4u+Hs18XJLPRBjn+0woE9yjQoH+j\nws3XVeKeH6MMoTnIzCDkjRuQFdwnqjSm2desRjqi4+BFVe+jdTf235TLuCEXPseU\n0xNvcqe4hn4swosPhlXC6hWjRZahPizXhSyjhvGqM2SL8dBZymU=\n-----END RSA PRIVATE KEY-----', 'user': 'Dev8\jenkinsmaster', 'customization': True, 'datastore': 'UT-DEV03', 'password': 'digitalguardian!', 'pub_key': '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0T6uY7f2RsJcnA419mOB\nRHT/XGCLNz5KgvISQDqJlQ7RvUyORyOBe2t+pNszZ2J47U0OgICSMMwg7bGddem5\nqDtabBd8v3m2FK89wz6hHL/Ey8Ub+FKCs/kuyPu24qlEmJBIytgZ0hAtV+V6gjZa\nPN/92Ag5tfOTAejTx5mYbF6+/T+T6iuowgKOFg2zu9MCcu/LFs1Z23Wl45bj25fp\nUhebTmmb7VsQHqBmnEjGclwSSI+gP06uDxdQdA0AFz6H+xxVcY5OFAAm+ePoD7e0\nIKGXnW1tR3bR1ANbS2rvJTHiQffgyTqfrtrz6/Py8npDVktnVuiNFe/kx4/W+h7I\nPQIDAQAB\n-----END PUBLIC KEY-----', 'power_on': False, 'name': 'BarryNode2', 'url': '10.81.8.6', 'num_cpus': 8, 'deploy': True, 'devices': {'cd': {'CD/DVD drive 1': {'controller': 'IDE 0', 'device_type': 'datastore_iso_file', 'iso_path': '[build-artifacts] manual-B723/DG8-manual-B-723.iso'}}, 'scsi': {'SCSI controller 0': {'type': 'lsilogic'}}, 'disk': {'Hard disk 1': {'controller': 'SCSI controller 0', 'size': 100}}, 'network': {'Network adapter 2': {'switch_type': 'distributed', 'ip': '172.30.0.2', 'adapter_type': 'e1000', 'name': '3nodeautodeploy', 'subnet_mask': '255.255.0.0'}, 'Network adapter 1': {'switch_type': 'distributed', 'subnet_mask': '255.255.252.0', 'name': 'DEV5', 'ip': '10.81.28.112', 'adapter_type': 'e1000', 'gateway': ['10.81.28.1']}}, 'ide': {'IDE 0': {'type': 'sata'}}}, 'template': False, 'memory': '64GB', 'folder': 'DEV5-Barry', 'os': 'bootstrap-salt', 'inline_script': None}}
[INFO    ] Creating BarryNode2
[INFO    ] [ BarryNode2 ] Waiting for create task to finish [0 s]
[INFO    ] [ BarryNode2 ] Successfully completed create task in 1 seconds
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode2/created; data = {'profile': 'tempprofile', 'event': 'created instance', '_stamp': '2016-10-21T14:15:46.060069', 'name': 'BarryNode2', 'provider': 'vcenter01:vmware'}
[DEBUG   ] LazyLoaded nested.output
Virtual Machine(s) have been powered on successfully
primary_mac = 00:50:56:96:56:c8
vcenter01:
    ----------
    vmware:
        ----------
        BarryNode3:
            True
vm BarryNode3 deleted
[DEBUG   ] Reading configuration from /etc/salt/cloud
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: slc-dhcp-dns.digitalguardian.com
[DEBUG   ] Missing configuration file: /etc/salt/cloud.providers
[DEBUG   ] Including configuration from '/etc/salt/cloud.providers.d/vsphere.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.providers.d/vsphere.conf
[DEBUG   ] Missing configuration file: /etc/salt/cloud.profiles
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/old.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/old.conf
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/tempprofile.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/tempprofile.conf
[DEBUG   ] Configuration file path: /etc/salt/cloud
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[INFO    ] salt-cloud starting
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' __virtual__ returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Could not LazyLoad vmware.optimize_providers: 'vmware.optimize_providers' is not available.
[DEBUG   ] The 'vmware' cloud driver is unable to be optimized.
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' **virtual** returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Generating minion keys for 'BarryNode3'
[DEBUG   ] LazyLoaded cloud.fire_event
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode3/creating; data = {'profile': 'tempprofile', 'event': 'starting create', '_stamp': '2016-10-21T14:16:07.561124', 'name': 'BarryNode3', 'provider': 'vcenter01:vmware'}
[DEBUG   ] Setting cpu to: 8
[DEBUG   ] Setting memory to: 65536 MB
[DEBUG   ] Networks adapters to create: ['Network adapter 1', 'Network adapter 2']
[DEBUG   ] SCSI controllers to create: ['SCSI controller 0']
[DEBUG   ] IDE controllers to create: ['IDE 0']
[DEBUG   ] Hard disks to create: ['Hard disk 1']
[DEBUG   ] CD/DVD drives to create: ['CD/DVD drive 1']
[DEBUG   ] config_spec set to:
(vim.vm.ConfigSpec) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   changeVersion = <unset>,
   name = 'BarryNode3',
   version = <unset>,
   uuid = <unset>,
   instanceUuid = <unset>,
   npivNodeWorldWideName = (long) [],
   npivPortWorldWideName = (long) [],
   npivWorldWideNameType = <unset>,
   npivDesiredNodeWwns = <unset>,
   npivDesiredPortWwns = <unset>,
   npivTemporaryDisabled = <unset>,
   npivOnNonRdmDisks = <unset>,
   npivWorldWideNameOp = <unset>,
   locationId = <unset>,
   guestId = 'rhel7_64Guest',
   alternateGuestName = <unset>,
   annotation = <unset>,
   files = (vim.vm.FileInfo) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      vmPathName = '[UT-DEV03] BarryNode3/BarryNode3.vmx',
      snapshotDirectory = <unset>,
      suspendDirectory = <unset>,
      logDirectory = <unset>,
      ftMetadataDirectory = <unset>
   },
   tools = <unset>,
   flags = <unset>,
   consolePreferences = <unset>,
   powerOpInfo = <unset>,
   numCPUs = 8,
   numCoresPerSocket = <unset>,
   memoryMB = 65536,
   memoryHotAddEnabled = <unset>,
   cpuHotAddEnabled = <unset>,
   cpuHotRemoveEnabled = <unset>,
   virtualICH7MPresent = <unset>,
   virtualSMCPresent = <unset>,
   deviceChange = (vim.vm.device.VirtualDeviceSpec) [
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4043,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 1',
               summary = 'DEV5'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-150',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4051,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 2',
               summary = '3nodeautodeploy'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-1020',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualLsiLogicController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -1032,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'SCSI controller 0',
               summary = 'LSI Logic'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 0,
            device = (int) [],
            hotAddRemove = <unset>,
            sharedBus = 'noSharing',
            scsiCtlrUnitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualIDEController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -36,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'IDE 0',
               summary = 'IDE 0'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 1,
            device = (int) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = 'create',
         device = (vim.vm.device.VirtualDisk) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -2012,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Hard disk 1',
               summary = '100.0 GB'
            },
            backing = (vim.vm.device.VirtualDisk.FlatVer2BackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '',
               datastore = <unset>,
               backingObjectId = <unset>,
               diskMode = 'persistent',
               split = <unset>,
               writeThrough = <unset>,
               thinProvisioned = false,
               eagerlyScrub = <unset>,
               uuid = <unset>,
               contentId = <unset>,
               changeId = <unset>,
               parent = <unset>,
               deltaDiskFormat = <unset>,
               digestEnabled = <unset>,
               deltaGrainSize = <unset>,
               deltaDiskFormatVariant = <unset>,
               sharing = <unset>
            },
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = -1032,
            unitNumber = 0,
            capacityInKB = 104857600,
            capacityInBytes = <unset>,
            shares = <unset>,
            storageIOAllocation = <unset>,
            diskObjectId = <unset>,
            vFlashCacheConfigInfo = <unset>,
            iofilter = (str) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualCdrom) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -3018,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'CD/DVD drive 1',
               summary = 'ISO [build-artifacts] manual-B723/DG8-manual-B-723.iso'
            },
            backing = (vim.vm.device.VirtualCdrom.IsoBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '[build-artifacts] manual-B723/DG8-manual-B-723.iso',
               datastore = 'vim.Datastore:datastore-284',
               backingObjectId = <unset>
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = -36,
            unitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      }
   ],
   cpuAllocation = <unset>,
   memoryAllocation = <unset>,
   latencySensitivity = <unset>,
   cpuAffinity = <unset>,
   memoryAffinity = <unset>,
   networkShaper = <unset>,
   cpuFeatureMask = (vim.vm.ConfigSpec.CpuIdInfoSpec) [],
   extraConfig = (vim.option.OptionValue) [],
   swapPlacement = <unset>,
   bootOptions = <unset>,
   vAppConfig = <unset>,
   ftInfo = <unset>,
   repConfig = <unset>,
   vAppConfigRemoved = <unset>,
   vAssertsEnabled = <unset>,
   changeTrackingEnabled = <unset>,
   firmware = <unset>,
   maxMksConnections = <unset>,
   guestAutoLockEnabled = <unset>,
   managedBy = <unset>,
   memoryReservationLockedToMax = <unset>,
   nestedHVEnabled = <unset>,
   vPMCEnabled = <unset>,
   scheduledHardwareUpgradeInfo = <unset>,
   vmProfile = (vim.vm.ProfileSpec) [],
   messageBusTunnelEnabled = <unset>
}
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode3/requesting; data = {'_stamp': '2016-10-21T14:16:07.877500', 'event': 'requesting instance', 'kwargs': {'profile': 'tempprofile', 'resourcepool': 'Resources', 'dns_servers': ['75.75.75.75'], 'datacenter': 'UT-Dev8', 'minion': {'master': '10.81.9.4'}, 'ssh_username': 'sysadmin', 'image': 'rhel7_64Guest', 'driver': 'vcenter01:vmware', 'cluster': None, 'host': 'UT-DEV8-DEV', 'priv_key': '-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArqB9nrmoyttWUsjiq5bm89PU+DivCA+TmQo57eLzfnj0YbYo\ncpdNBcpGYAJ+0Gin01rwW21cMLghwz4rEKuoLl4T0mB6pH1l+wuSlwkLKFRX0iVB\nFqd7cHaGFwJjXF78ogDFP7a+zbj9uxMXPl6BokZttRsD5z978Bx5C1HQnfxBh6NA\nxwaJ+umx1Kd/xq2vvN9DTKhcSue0QoYHE9Q0fBI0PTqMi8jtBrGGj6pYANXYjWa/\npSKrJ9CrTSbHTnBDYELudotxZ//6DV8GxGu60+LtZ3FTOm8G05t2mjE0C+uWCW4C\nnA0RfBSbKceJghGPodiLeXX0xD0gUV1GRuDUQQIDAQABAoIBAGxxKdF5xgJDdzXt\nniWkjkN4ltaWjMtasPPmz9aUi1VM06YiMrgGkUQ5Or7AjfPqKd4sqPp9zTRMBFt0\nrdWqY8R3k6OfWknvvXbK1vuIGC+xQOA1Vlg1JYjPcbG0P/PK4OPRyqwoVhD3Ako8\nLsECe0pEpjhDUIc4e0S+ycRnyD9yslXfUVgVaiDAZDp72cwQynudGggcsJZGzTWa\npOtEJ6pvEadPy8p9DlIr0/M8UaYRlzlsn9oJTRnxBc69LmNR4zRRdW64HTS9yB6J\nDs48+fH3C2/s1V/bHIT+gbiFrBc0Y/e9pkG5C2Fdolg5m4s7AWe2DERef/eXKM9t\n4fiz7AkCgYEAyA3LM5AoPQBpqacScDcrxOjojhTfCgG+mEx3jzfdRlsQV5V7JW2c\n7fh4fZW94T522Z5jJNPDnQ/kWru0DZrA4GRkJa3eRvgqFOAp2Impf7JvjZzfWqEX\nTHcWBdx7QXjTm3vwEu/FTrWsPA0zeQCFDV4uY0ySzSDAleMhErzXqZsCgYEA33ZW\nEALOO+5Rp3dqoz5FjYDlwGtjEB53YCUO3hN87ncD7LFmfVu8QGDTQh9mMxYi+pZF\nu3XEAZSlJgj7R4F8vzj7ZNS4ArcFrtok4WR233AyvU7z6hoZyr2SuIs94C0p5gVC\nq22Ih97lP0I+no84ar81VbbKJIsSwvni+MjjdVMCgYBMIVOu77EgZcPQGBBgO96g\nNLIrP64RNNC/THpDOlMurwDtE6mleK07sk7IG/ACg67e6fN41E2gu6d/D+dZNgco\nXYvu+teX0mDRSO0jxl+GhPUGwygMaTlglAEBggI1zDFa/jNCQZSoe2JsB+oKpjP7\n/ldQ2pcTEN+5KpIve0Xm+QKBgEGHIAGd8QAeCI/FMt4f2qF+FOFyHCCT7omhFFUG\n/fGnsNztwJIuHmv6eLjBIGUGrscw3c304L9d6XfX1mfHjt88RGvy/Oq+5Mm7amk1\n3q3y5s4gouIZOUr8gFPhcQmV9N1g2YYPnqPJNwxvzpEMioyy+V7jNS+2IJBQWsB9\nmEXFAoGAKiZNgqZjclIyIlBARAH/k4RYdJyZYFhPfxUkCQovNpSDKCk0Ierrfn0z\nS4z6B6mjrBgnxdr+RunAalgodwpylA7uKzJuIFAVUQUe/4Oc6+kzQA8fMrbEVeYc\n4+aTC+MWW1ZHaUi2qsy14xsMBVLaRHL55wRXdLm/pEKhSjryYyo=\n-----END RSA PRIVATE KEY-----', 'user': 'Dev8\jenkinsmaster', 'customization': True, 'datastore': 'UT-DEV03', 'password': 'digitalguardian!', 'pub_key': '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArqB9nrmoyttWUsjiq5bm\n89PU+DivCA+TmQo57eLzfnj0YbYocpdNBcpGYAJ+0Gin01rwW21cMLghwz4rEKuo\nLl4T0mB6pH1l+wuSlwkLKFRX0iVBFqd7cHaGFwJjXF78ogDFP7a+zbj9uxMXPl6B\nokZttRsD5z978Bx5C1HQnfxBh6NAxwaJ+umx1Kd/xq2vvN9DTKhcSue0QoYHE9Q0\nfBI0PTqMi8jtBrGGj6pYANXYjWa/pSKrJ9CrTSbHTnBDYELudotxZ//6DV8GxGu6\n0+LtZ3FTOm8G05t2mjE0C+uWCW4CnA0RfBSbKceJghGPodiLeXX0xD0gUV1GRuDU\nQQIDAQAB\n-----END PUBLIC KEY-----', 'power_on': False, 'name': 'BarryNode3', 'url': '10.81.8.6', 'num_cpus': 8, 'deploy': True, 'devices': {'cd': {'CD/DVD drive 1': {'controller': 'IDE 0', 'device_type': 'datastore_iso_file', 'iso_path': '[build-artifacts] manual-B723/DG8-manual-B-723.iso'}}, 'scsi': {'SCSI controller 0': {'type': 'lsilogic'}}, 'disk': {'Hard disk 1': {'controller': 'SCSI controller 0', 'size': 100}}, 'network': {'Network adapter 2': {'switch_type': 'distributed', 'ip': '172.30.0.3', 'adapter_type': 'e1000', 'name': '3nodeautodeploy', 'subnet_mask': '255.255.0.0'}, 'Network adapter 1': {'switch_type': 'distributed', 'subnet_mask': '255.255.252.0', 'name': 'DEV5', 'ip': '10.81.28.113', 'adapter_type': 'e1000', 'gateway': ['10.81.28.1']}}, 'ide': {'IDE 0': {'type': 'sata'}}}, 'template': False, 'memory': '64GB', 'folder': 'DEV5-Barry', 'os': 'bootstrap-salt', 'inline_script': None}}
[INFO    ] Creating BarryNode3
[INFO    ] [ BarryNode3 ] Waiting for create task to finish [0 s]
[INFO    ] [ BarryNode3 ] Successfully completed create task in 1 seconds
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode3/created; data = {'profile': 'tempprofile', 'event': 'created instance', '_stamp': '2016-10-21T14:16:09.832390', 'name': 'BarryNode3', 'provider': 'vcenter01:vmware'}
[DEBUG   ] LazyLoaded nested.output
Virtual Machine(s) have been powered on successfully
primary_mac = 00:50:56:96:4e:a3
^CTraceback (most recent call last):
  File "./vmAutoDeploy.py", line 140, in <module>
    main()
  File "./vmAutoDeploy.py", line 132, in main
    time.sleep(250)
KeyboardInterrupt
bmccormick@autodeploy-dhcp:~/build/saltscripts/autodeployment$ ^C
bmccormick@autodeploy-dhcp:~/build/saltscripts/autodeployment$ ^C
bmccormick@autodeploy-dhcp:~/build/saltscripts/autodeployment$ ^C
bmccormick@autodeploy-dhcp:~/build/saltscripts/autodeployment$ sudo ./vmAutoDeploy.py jsons/barry3node.json
vcenter01:
    ----------
    vmware:
        ----------
        BarryNode1:
            True
vm BarryNode1 deleted
[DEBUG   ] Reading configuration from /etc/salt/cloud
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: slc-dhcp-dns.digitalguardian.com
[DEBUG   ] Missing configuration file: /etc/salt/cloud.providers
[DEBUG   ] Including configuration from '/etc/salt/cloud.providers.d/vsphere.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.providers.d/vsphere.conf
[DEBUG   ] Missing configuration file: /etc/salt/cloud.profiles
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/old.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/old.conf
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/tempprofile.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/tempprofile.conf
[DEBUG   ] Configuration file path: /etc/salt/cloud
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[INFO    ] salt-cloud starting
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' __virtual__ returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Could not LazyLoad vmware.optimize_providers: 'vmware.optimize_providers' is not available.
[DEBUG   ] The 'vmware' cloud driver is unable to be optimized.
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' **virtual** returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Generating minion keys for 'BarryNode1'
[DEBUG   ] LazyLoaded cloud.fire_event
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode1/creating; data = {'profile': 'tempprofile', 'event': 'starting create', '_stamp': '2016-10-21T14:20:16.851493', 'name': 'BarryNode1', 'provider': 'vcenter01:vmware'}
[DEBUG   ] Setting cpu to: 8
[DEBUG   ] Setting memory to: 65536 MB
[DEBUG   ] Networks adapters to create: ['Network adapter 1', 'Network adapter 2']
[DEBUG   ] SCSI controllers to create: ['SCSI controller 0']
[DEBUG   ] IDE controllers to create: ['IDE 0']
[DEBUG   ] Hard disks to create: ['Hard disk 1']
[DEBUG   ] CD/DVD drives to create: ['CD/DVD drive 1']
[DEBUG   ] config_spec set to:
(vim.vm.ConfigSpec) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   changeVersion = <unset>,
   name = 'BarryNode1',
   version = <unset>,
   uuid = <unset>,
   instanceUuid = <unset>,
   npivNodeWorldWideName = (long) [],
   npivPortWorldWideName = (long) [],
   npivWorldWideNameType = <unset>,
   npivDesiredNodeWwns = <unset>,
   npivDesiredPortWwns = <unset>,
   npivTemporaryDisabled = <unset>,
   npivOnNonRdmDisks = <unset>,
   npivWorldWideNameOp = <unset>,
   locationId = <unset>,
   guestId = 'rhel7_64Guest',
   alternateGuestName = <unset>,
   annotation = <unset>,
   files = (vim.vm.FileInfo) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      vmPathName = '[UT-DEV03] BarryNode1/BarryNode1.vmx',
      snapshotDirectory = <unset>,
      suspendDirectory = <unset>,
      logDirectory = <unset>,
      ftMetadataDirectory = <unset>
   },
   tools = <unset>,
   flags = <unset>,
   consolePreferences = <unset>,
   powerOpInfo = <unset>,
   numCPUs = 8,
   numCoresPerSocket = <unset>,
   memoryMB = 65536,
   memoryHotAddEnabled = <unset>,
   cpuHotAddEnabled = <unset>,
   cpuHotRemoveEnabled = <unset>,
   virtualICH7MPresent = <unset>,
   virtualSMCPresent = <unset>,
   deviceChange = (vim.vm.device.VirtualDeviceSpec) [
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4035,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 1',
               summary = 'DEV5'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-150',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4069,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 2',
               summary = '3nodeautodeploy'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-1020',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualLsiLogicController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -1017,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'SCSI controller 0',
               summary = 'LSI Logic'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 0,
            device = (int) [],
            hotAddRemove = <unset>,
            sharedBus = 'noSharing',
            scsiCtlrUnitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualIDEController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -63,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'IDE 0',
               summary = 'IDE 0'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 1,
            device = (int) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = 'create',
         device = (vim.vm.device.VirtualDisk) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -2062,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Hard disk 1',
               summary = '100.0 GB'
            },
            backing = (vim.vm.device.VirtualDisk.FlatVer2BackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '',
               datastore = <unset>,
               backingObjectId = <unset>,
               diskMode = 'persistent',
               split = <unset>,
               writeThrough = <unset>,
               thinProvisioned = false,
               eagerlyScrub = <unset>,
               uuid = <unset>,
               contentId = <unset>,
               changeId = <unset>,
               parent = <unset>,
               deltaDiskFormat = <unset>,
               digestEnabled = <unset>,
               deltaGrainSize = <unset>,
               deltaDiskFormatVariant = <unset>,
               sharing = <unset>
            },
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = -1017,
            unitNumber = 0,
            capacityInKB = 104857600,
            capacityInBytes = <unset>,
            shares = <unset>,
            storageIOAllocation = <unset>,
            diskObjectId = <unset>,
            vFlashCacheConfigInfo = <unset>,
            iofilter = (str) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualCdrom) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -3007,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'CD/DVD drive 1',
               summary = 'ISO [build-artifacts] manual-B723/DG8-manual-B-723.iso'
            },
            backing = (vim.vm.device.VirtualCdrom.IsoBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '[build-artifacts] manual-B723/DG8-manual-B-723.iso',
               datastore = 'vim.Datastore:datastore-284',
               backingObjectId = <unset>
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = -63,
            unitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      }
   ],
   cpuAllocation = <unset>,
   memoryAllocation = <unset>,
   latencySensitivity = <unset>,
   cpuAffinity = <unset>,
   memoryAffinity = <unset>,
   networkShaper = <unset>,
   cpuFeatureMask = (vim.vm.ConfigSpec.CpuIdInfoSpec) [],
   extraConfig = (vim.option.OptionValue) [],
   swapPlacement = <unset>,
   bootOptions = <unset>,
   vAppConfig = <unset>,
   ftInfo = <unset>,
   repConfig = <unset>,
   vAppConfigRemoved = <unset>,
   vAssertsEnabled = <unset>,
   changeTrackingEnabled = <unset>,
   firmware = <unset>,
   maxMksConnections = <unset>,
   guestAutoLockEnabled = <unset>,
   managedBy = <unset>,
   memoryReservationLockedToMax = <unset>,
   nestedHVEnabled = <unset>,
   vPMCEnabled = <unset>,
   scheduledHardwareUpgradeInfo = <unset>,
   vmProfile = (vim.vm.ProfileSpec) [],
   messageBusTunnelEnabled = <unset>
}
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode1/requesting; data = {'_stamp': '2016-10-21T14:20:17.169359', 'event': 'requesting instance', 'kwargs': {'profile': 'tempprofile', 'resourcepool': 'Resources', 'dns_servers': ['75.75.75.75'], 'datacenter': 'UT-Dev8', 'minion': {'master': '10.81.9.4'}, 'ssh_username': 'sysadmin', 'image': 'rhel7_64Guest', 'driver': 'vcenter01:vmware', 'cluster': 'DEV-UT-DEV8', 'host': 'UT-DEV8-DEV', 'priv_key': '-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEArxLun2IpxhZhkmNtVCoiekOJJdTUWqceHAvA5hqmq2ouGmX1\n4ti2SqzF5rmNoFU5MOcn4e1c6+UOj6v9XEYbe4NnKWVh36FkHaRubeg00hirBbPF\nGsKhd/cRYiRtP+tGUJlhjrHUP2Xllvuol0s0OuVqZhwhw7sFHCE+wnyDCKe5Udzx\n+opet9NTBkb9QZFftwBucps7s8MKendy2wzbXnAb8CsBUv1bKrwrfoKBiY6Pqo3p\ncsokNwWP9nWs7lM00WfMTKMO/JzBe3mxqEnwRyyikls88DUokmabKDedOr4d6b3q\ndapWD92uwwYhsChBrYicoHHnQzilWBX86o9KSQIDAQABAoIBAFRMRWGxHnQm6qxV\n+5p+/0Lnqe3xYJ6VwUW30xX41y/KXJCRb6feuUeTkWbbCXqeDn+hje6XIBrlm/FJ\n2yDHEQyT5ORl0I6hY1dyiUmaeXSANDj2qn2MIbtl15Tt/Ty9yImekP7oWU59feMJ\nIdBXgbqqJGUuPoPEVV2KFHIJCf7sFnhEO8cZL41b35NLixEtAArLzl48SoOQzLGH\nc7LYwemTEewzASXmwVmS3SptSZUG93Ix3cNMreck5Laucj2MrR7ca+El/vdzNRUJ\noW9UCjFFKyVMtwtljbJjw01u0tUkdMs579RUOsb1tguVmYyIMsoR6V769diFPVtT\nNqJk8BECgYEAvOaBR88C2S43RfiKFU57V3DioJq6jvpM3AWAzTFGEtEo6WmI9h5O\nEkDeSftPs4mDkb7UurMT8xMtaJTPvCsC5tZDKqq7cuiRGwjdBSswhCrUhw0GfEgw\nSw/QywQWvbFwcZHKgfjoURzQ8AKGQz/GhkJsAJDmQNtuhFpo4dtze5sCgYEA7UMh\nWe0OCfJEKwtgTmvuJB4r4McUTAYdXPBve1yjeKxCl/BZLpoHEZ2bXj2jPqYNz6t2\nE2qTKxsPYqOYC1b4mjXdk1dy2k5fmDuFnTJjCiH+5f2HJR8S+OYIixwYkFNYK+An\noNXEuE76NTegkc6BeVTQEGM7ZNPjha3w+cjTKesCgYBteXUBBcLT1MnpvjFgSbyH\nn39nrmRiCkNS28maoWzH6Pm51BSw9j0urPNmksPM++wJIjws+y2bmMifLGb72T10\nREZmys2ZuZimv0s//JjAcAX9Qpo4mqmKRt8tWPBI/TV6TBC9pGAW6glYn03qWWKX\nWpU2+sLGYaU6BR91jXXu8wKBgQCOPo/xNPEUv31k/RYJDiYg20HdKh2eEpBqFvAP\nWpPbFhN6uisNiGSyh/YNAxEqzy06kwZgT6XZ0whfT8spCURUV/T2kBgYj6I6R30s\nqHe+LHGAe4YZmE6skGUQ2ZBUftM+ws2fXGnrQdY6L5aBs/flwRZYrNV/9pTSoVz2\ntBL9bwKBgGtDbTxeJJDEUoG0Oz0hgJehdV69nqQtlBLch88bvUPjKf2+O4fWt1i2\n4hJZ5xGaFqb9zNEmoKFzXgx6VZqBBUQlAuFv1RUk1pbMhDEEKsLJXLHE1RgwolWI\nUAEykTCvs0nz9YK+VJjNjbXnmnvprJRwzJSF1qYYy+VVlwVIbRaY\n-----END RSA PRIVATE KEY-----', 'user': 'Dev8\jenkinsmaster', 'customization': True, 'datastore': 'UT-DEV03', 'password': 'digitalguardian!', 'pub_key': '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArxLun2IpxhZhkmNtVCoi\nekOJJdTUWqceHAvA5hqmq2ouGmX14ti2SqzF5rmNoFU5MOcn4e1c6+UOj6v9XEYb\ne4NnKWVh36FkHaRubeg00hirBbPFGsKhd/cRYiRtP+tGUJlhjrHUP2Xllvuol0s0\nOuVqZhwhw7sFHCE+wnyDCKe5Udzx+opet9NTBkb9QZFftwBucps7s8MKendy2wzb\nXnAb8CsBUv1bKrwrfoKBiY6Pqo3pcsokNwWP9nWs7lM00WfMTKMO/JzBe3mxqEnw\nRyyikls88DUokmabKDedOr4d6b3qdapWD92uwwYhsChBrYicoHHnQzilWBX86o9K\nSQIDAQAB\n-----END PUBLIC KEY-----', 'power_on': False, 'name': 'BarryNode1', 'url': '10.81.8.6', 'num_cpus': 8, 'deploy': True, 'devices': {'cd': {'CD/DVD drive 1': {'controller': 'IDE 0', 'device_type': 'datastore_iso_file', 'iso_path': '[build-artifacts] manual-B723/DG8-manual-B-723.iso'}}, 'scsi': {'SCSI controller 0': {'type': 'lsilogic'}}, 'disk': {'Hard disk 1': {'controller': 'SCSI controller 0', 'size': 100}}, 'network': {'Network adapter 2': {'switch_type': 'distributed', 'ip': '172.30.0.1', 'adapter_type': 'e1000', 'name': '3nodeautodeploy', 'subnet_mask': '255.255.0.0'}, 'Network adapter 1': {'switch_type': 'distributed', 'subnet_mask': '255.255.252.0', 'name': 'DEV5', 'ip': '10.81.28.111', 'adapter_type': 'e1000', 'gateway': ['10.81.28.1']}}, 'ide': {'IDE 0': {'type': 'sata'}}}, 'template': False, 'memory': '64GB', 'folder': 'DEV5-Barry', 'os': 'bootstrap-salt', 'inline_script': None}}
[INFO    ] Creating BarryNode1
[INFO    ] [ BarryNode1 ] Waiting for create task to finish [0 s]
[INFO    ] [ BarryNode1 ] Successfully completed create task in 1 seconds
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode1/created; data = {'profile': 'tempprofile', 'event': 'created instance', '_stamp': '2016-10-21T14:20:19.124917', 'name': 'BarryNode1', 'provider': 'vcenter01:vmware'}
[DEBUG   ] LazyLoaded nested.output
Virtual Machine(s) have been powered on successfully
primary_mac = 00:50:56:96:5a:14
vcenter01:
    ----------
    vmware:
        ----------
        BarryNode2:
            True
vm BarryNode2 deleted
[DEBUG   ] Reading configuration from /etc/salt/cloud
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: slc-dhcp-dns.digitalguardian.com
[DEBUG   ] Missing configuration file: /etc/salt/cloud.providers
[DEBUG   ] Including configuration from '/etc/salt/cloud.providers.d/vsphere.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.providers.d/vsphere.conf
[DEBUG   ] Missing configuration file: /etc/salt/cloud.profiles
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/old.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/old.conf
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/tempprofile.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/tempprofile.conf
[DEBUG   ] Configuration file path: /etc/salt/cloud
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[INFO    ] salt-cloud starting
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' __virtual__ returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Could not LazyLoad vmware.optimize_providers: 'vmware.optimize_providers' is not available.
[DEBUG   ] The 'vmware' cloud driver is unable to be optimized.
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' **virtual** returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Generating minion keys for 'BarryNode2'
[DEBUG   ] LazyLoaded cloud.fire_event
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode2/creating; data = {'profile': 'tempprofile', 'event': 'starting create', '_stamp': '2016-10-21T14:20:41.684103', 'name': 'BarryNode2', 'provider': 'vcenter01:vmware'}
[DEBUG   ] Setting cpu to: 8
[DEBUG   ] Setting memory to: 65536 MB
[DEBUG   ] Networks adapters to create: ['Network adapter 1', 'Network adapter 2']
[DEBUG   ] SCSI controllers to create: ['SCSI controller 0']
[DEBUG   ] IDE controllers to create: ['IDE 0']
[DEBUG   ] Hard disks to create: ['Hard disk 1']
[DEBUG   ] CD/DVD drives to create: ['CD/DVD drive 1']
[DEBUG   ] config_spec set to:
(vim.vm.ConfigSpec) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   changeVersion = <unset>,
   name = 'BarryNode2',
   version = <unset>,
   uuid = <unset>,
   instanceUuid = <unset>,
   npivNodeWorldWideName = (long) [],
   npivPortWorldWideName = (long) [],
   npivWorldWideNameType = <unset>,
   npivDesiredNodeWwns = <unset>,
   npivDesiredPortWwns = <unset>,
   npivTemporaryDisabled = <unset>,
   npivOnNonRdmDisks = <unset>,
   npivWorldWideNameOp = <unset>,
   locationId = <unset>,
   guestId = 'rhel7_64Guest',
   alternateGuestName = <unset>,
   annotation = <unset>,
   files = (vim.vm.FileInfo) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      vmPathName = '[UT-DEV03] BarryNode2/BarryNode2.vmx',
      snapshotDirectory = <unset>,
      suspendDirectory = <unset>,
      logDirectory = <unset>,
      ftMetadataDirectory = <unset>
   },
   tools = <unset>,
   flags = <unset>,
   consolePreferences = <unset>,
   powerOpInfo = <unset>,
   numCPUs = 8,
   numCoresPerSocket = <unset>,
   memoryMB = 65536,
   memoryHotAddEnabled = <unset>,
   cpuHotAddEnabled = <unset>,
   cpuHotRemoveEnabled = <unset>,
   virtualICH7MPresent = <unset>,
   virtualSMCPresent = <unset>,
   deviceChange = (vim.vm.device.VirtualDeviceSpec) [
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4031,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 1',
               summary = 'DEV5'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-150',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4017,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 2',
               summary = '3nodeautodeploy'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-1020',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualLsiLogicController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -1032,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'SCSI controller 0',
               summary = 'LSI Logic'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 0,
            device = (int) [],
            hotAddRemove = <unset>,
            sharedBus = 'noSharing',
            scsiCtlrUnitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualIDEController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -59,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'IDE 0',
               summary = 'IDE 0'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 1,
            device = (int) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = 'create',
         device = (vim.vm.device.VirtualDisk) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -2088,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Hard disk 1',
               summary = '100.0 GB'
            },
            backing = (vim.vm.device.VirtualDisk.FlatVer2BackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '',
               datastore = <unset>,
               backingObjectId = <unset>,
               diskMode = 'persistent',
               split = <unset>,
               writeThrough = <unset>,
               thinProvisioned = false,
               eagerlyScrub = <unset>,
               uuid = <unset>,
               contentId = <unset>,
               changeId = <unset>,
               parent = <unset>,
               deltaDiskFormat = <unset>,
               digestEnabled = <unset>,
               deltaGrainSize = <unset>,
               deltaDiskFormatVariant = <unset>,
               sharing = <unset>
            },
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = -1032,
            unitNumber = 0,
            capacityInKB = 104857600,
            capacityInBytes = <unset>,
            shares = <unset>,
            storageIOAllocation = <unset>,
            diskObjectId = <unset>,
            vFlashCacheConfigInfo = <unset>,
            iofilter = (str) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualCdrom) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -3003,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'CD/DVD drive 1',
               summary = 'ISO [build-artifacts] manual-B723/DG8-manual-B-723.iso'
            },
            backing = (vim.vm.device.VirtualCdrom.IsoBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '[build-artifacts] manual-B723/DG8-manual-B-723.iso',
               datastore = 'vim.Datastore:datastore-284',
               backingObjectId = <unset>
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = -59,
            unitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      }
   ],
   cpuAllocation = <unset>,
   memoryAllocation = <unset>,
   latencySensitivity = <unset>,
   cpuAffinity = <unset>,
   memoryAffinity = <unset>,
   networkShaper = <unset>,
   cpuFeatureMask = (vim.vm.ConfigSpec.CpuIdInfoSpec) [],
   extraConfig = (vim.option.OptionValue) [],
   swapPlacement = <unset>,
   bootOptions = <unset>,
   vAppConfig = <unset>,
   ftInfo = <unset>,
   repConfig = <unset>,
   vAppConfigRemoved = <unset>,
   vAssertsEnabled = <unset>,
   changeTrackingEnabled = <unset>,
   firmware = <unset>,
   maxMksConnections = <unset>,
   guestAutoLockEnabled = <unset>,
   managedBy = <unset>,
   memoryReservationLockedToMax = <unset>,
   nestedHVEnabled = <unset>,
   vPMCEnabled = <unset>,
   scheduledHardwareUpgradeInfo = <unset>,
   vmProfile = (vim.vm.ProfileSpec) [],
   messageBusTunnelEnabled = <unset>
}
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode2/requesting; data = {'_stamp': '2016-10-21T14:20:42.004589', 'event': 'requesting instance', 'kwargs': {'profile': 'tempprofile', 'resourcepool': 'Resources', 'dns_servers': ['75.75.75.75'], 'datacenter': 'UT-Dev8', 'minion': {'master': '10.81.9.4'}, 'ssh_username': 'sysadmin', 'image': 'rhel7_64Guest', 'driver': 'vcenter01:vmware', 'cluster': 'DEV-UT-DEV8', 'host': 'UT-DEV8-DEV', 'priv_key': '-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAnP4PYMT9EE+90ZVGCaIg+S9qeBBX8PGYJs+WTGE15s7MXNJh\nPHxwzezxo9Sk8cplKw5FoWgBwRmwZXGXiMcAyHchgECtoJRd2hgSWTIVhzD4RIan\nbgNFobczPlko70894PzU+/FkMrEYysMaD4eDcHMmeAhb9B5+PztklqHbcrR09xxz\njQeOFK0WWXvpaIfd2sedXcSMZSoyad5uhLRbnhAoR6m85afquPQThmwrV6kYHZpc\nrqTE6ZJOD6SDJPoAzakVNutPh+G/iTph+IAX14CtgvONFKtBcp7hdanj19cmV/wO\nNSzX6oGS00AoN2Xbpw83hour7ZDtP20uQVTGbQIDAQABAoIBAQCXE1oDGq4Y81PM\niyTSAmZOxdVkYv3tzOBJgPy21dmEGj/Jl16hUXNQh5LlwK1WTRncPCi/sZH2nF0G\n0jAsHK1hPFtNy3AKlpxWU1Hc6fiTl4likF4w3Q82F1FFz5E38f6vMz9WkC6HJaug\n++1pQlQ3c2hynEC5BFsjSGl9F5dRollKUa/6zgcQ6iWeJjzJH+Z/1ga8NCuG7xHf\nrm23OvcVXLJ6J9lgzCMEq9B7wfJhmETboTEy8v/mcP6FmpO6o8jJLVMSZiDnPRD5\nLG00SVZkKaTn+1oHLgkuG7a2q0Tyjmx9jsriAhIQeIO3c5Sz9Irgw9TBSzckEGbU\nYhz5Jm71AoGBALYlci/Ii7byUzTlImZVfOSDnYeYBpeMW7apMdI5lAcSroPpsmQt\nIIqaVIEVFjP1O/HNA17en1JCvBTAp3ORkk3OY8Lw3SR9oDvAtFFuLeurl2SJFCgb\n9eiX+GlVY8SWlFN4xzkIGOnaxcH1NjOkaUTg4/S0x3cgCtXCzBJNKBRjAoGBANyl\nrQgoEk96DoxghWudbOxkjbDaLzVhFj8QnlUxv+c812EL1eiyd2QknpGcwUtf7m/G\nK/bAy2TmyAuZjRVFGwYSh/fMwRM2Eh52FIk7obWWvIc/1/llrDEzDjPCiAlaMe3i\nwtVDG3BpW57sYwmS/FV7I++njiDPbOOFq1plIKrvAoGBAKo9Y3T/pn3ODTDB/B3T\nRtC5ptFlqLuaJtoZVwRaZl0Z+9w031O7zc9doR+oWsEjMuyzpbPUtOoIj4uB6MAe\nTbTE8v7vanFBrTJL0PzO0sKS9QO1Dw7R20uSRk4EziOebXF60BEg3VAs9mpqykcI\nIo+K9ePv1wIjA5143I06afxrAoGAbELuL35Z3Z0p3j7NuAu6EhMUYp3rY+mLHM5u\noaaTXkY/92HzRwWqBvzgwNmFDhK3zygREjVulseVh/uDedg6djRJepCAe4igQ0n0\nsZEMuyiGwGXW9ouofUtrwIHGdbBHp00IA9O1duZ7CfM6dMwl+1s8Oq6f0gF0j/5a\nITRVXwkCgYB7HjhE/AM6CSk8gGH4eLRMAKBUl292IH2cY3VKS+u5o0B56/HxsTSq\nqUZwcpW0Znysy3Ru9T1Sy6qSDUlcv/+kxw980PdICrp+rQFwu66f5v0pazNdp7RK\nSl9WiaRQyEqXLYpW2+dPuh6qxBGy7/GXlgO2x54sxV/mdbl/WHgXcw==\n-----END RSA PRIVATE KEY-----', 'user': 'Dev8\jenkinsmaster', 'customization': True, 'datastore': 'UT-DEV03', 'password': 'digitalguardian!', 'pub_key': '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnP4PYMT9EE+90ZVGCaIg\n+S9qeBBX8PGYJs+WTGE15s7MXNJhPHxwzezxo9Sk8cplKw5FoWgBwRmwZXGXiMcA\nyHchgECtoJRd2hgSWTIVhzD4RIanbgNFobczPlko70894PzU+/FkMrEYysMaD4eD\ncHMmeAhb9B5+PztklqHbcrR09xxzjQeOFK0WWXvpaIfd2sedXcSMZSoyad5uhLRb\nnhAoR6m85afquPQThmwrV6kYHZpcrqTE6ZJOD6SDJPoAzakVNutPh+G/iTph+IAX\n14CtgvONFKtBcp7hdanj19cmV/wONSzX6oGS00AoN2Xbpw83hour7ZDtP20uQVTG\nbQIDAQAB\n-----END PUBLIC KEY-----', 'power_on': False, 'name': 'BarryNode2', 'url': '10.81.8.6', 'num_cpus': 8, 'deploy': True, 'devices': {'cd': {'CD/DVD drive 1': {'controller': 'IDE 0', 'device_type': 'datastore_iso_file', 'iso_path': '[build-artifacts] manual-B723/DG8-manual-B-723.iso'}}, 'scsi': {'SCSI controller 0': {'type': 'lsilogic'}}, 'disk': {'Hard disk 1': {'controller': 'SCSI controller 0', 'size': 100}}, 'network': {'Network adapter 2': {'switch_type': 'distributed', 'ip': '172.30.0.2', 'adapter_type': 'e1000', 'name': '3nodeautodeploy', 'subnet_mask': '255.255.0.0'}, 'Network adapter 1': {'switch_type': 'distributed', 'subnet_mask': '255.255.252.0', 'name': 'DEV5', 'ip': '10.81.28.112', 'adapter_type': 'e1000', 'gateway': ['10.81.28.1']}}, 'ide': {'IDE 0': {'type': 'sata'}}}, 'template': False, 'memory': '64GB', 'folder': 'DEV5-Barry', 'os': 'bootstrap-salt', 'inline_script': None}}
[INFO    ] Creating BarryNode2
[INFO    ] [ BarryNode2 ] Waiting for create task to finish [0 s]
[INFO    ] [ BarryNode2 ] Successfully completed create task in 1 seconds
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode2/created; data = {'profile': 'tempprofile', 'event': 'created instance', '_stamp': '2016-10-21T14:20:43.978015', 'name': 'BarryNode2', 'provider': 'vcenter01:vmware'}
[DEBUG   ] LazyLoaded nested.output
Virtual Machine(s) have been powered on successfully
primary_mac = 00:50:56:96:27:0e
vcenter01:
    ----------
    vmware:
        ----------
        BarryNode3:
            True
vm BarryNode3 deleted
[DEBUG   ] Reading configuration from /etc/salt/cloud
[DEBUG   ] Reading configuration from /etc/salt/master
[DEBUG   ] Using cached minion ID from /etc/salt/minion_id: slc-dhcp-dns.digitalguardian.com
[DEBUG   ] Missing configuration file: /etc/salt/cloud.providers
[DEBUG   ] Including configuration from '/etc/salt/cloud.providers.d/vsphere.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.providers.d/vsphere.conf
[DEBUG   ] Missing configuration file: /etc/salt/cloud.profiles
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/old.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/old.conf
[DEBUG   ] Including configuration from '/etc/salt/cloud.profiles.d/tempprofile.conf'
[DEBUG   ] Reading configuration from /etc/salt/cloud.profiles.d/tempprofile.conf
[DEBUG   ] Configuration file path: /etc/salt/cloud
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[INFO    ] salt-cloud starting
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' __virtual__ returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Could not LazyLoad vmware.optimize_providers: 'vmware.optimize_providers' is not available.
[DEBUG   ] The 'vmware' cloud driver is unable to be optimized.
[DEBUG   ] Could not LazyLoad parallels.avail_sizes: 'parallels' **virtual** returned False
[DEBUG   ] LazyLoaded parallels.avail_locations
[DEBUG   ] LazyLoaded proxmox.avail_sizes
[DEBUG   ] Could not LazyLoad saltify.destroy: 'saltify.destroy' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_sizes: 'saltify.avail_sizes' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_images: 'saltify.avail_images' is not available.
[DEBUG   ] Could not LazyLoad saltify.avail_locations: 'saltify.avail_locations' is not available.
[DEBUG   ] LazyLoaded rackspace.reboot
[DEBUG   ] LazyLoaded openstack.list_locations
[DEBUG   ] LazyLoaded rackspace.list_locations
[DEBUG   ] Generating minion keys for 'BarryNode3'
[DEBUG   ] LazyLoaded cloud.fire_event
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode3/creating; data = {'profile': 'tempprofile', 'event': 'starting create', '_stamp': '2016-10-21T14:21:05.770849', 'name': 'BarryNode3', 'provider': 'vcenter01:vmware'}
[DEBUG   ] Setting cpu to: 8
[DEBUG   ] Setting memory to: 65536 MB
[DEBUG   ] Networks adapters to create: ['Network adapter 1', 'Network adapter 2']
[DEBUG   ] SCSI controllers to create: ['SCSI controller 0']
[DEBUG   ] IDE controllers to create: ['IDE 0']
[DEBUG   ] Hard disks to create: ['Hard disk 1']
[DEBUG   ] CD/DVD drives to create: ['CD/DVD drive 1']
[DEBUG   ] config_spec set to:
(vim.vm.ConfigSpec) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   changeVersion = <unset>,
   name = 'BarryNode3',
   version = <unset>,
   uuid = <unset>,
   instanceUuid = <unset>,
   npivNodeWorldWideName = (long) [],
   npivPortWorldWideName = (long) [],
   npivWorldWideNameType = <unset>,
   npivDesiredNodeWwns = <unset>,
   npivDesiredPortWwns = <unset>,
   npivTemporaryDisabled = <unset>,
   npivOnNonRdmDisks = <unset>,
   npivWorldWideNameOp = <unset>,
   locationId = <unset>,
   guestId = 'rhel7_64Guest',
   alternateGuestName = <unset>,
   annotation = <unset>,
   files = (vim.vm.FileInfo) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      vmPathName = '[UT-DEV03] BarryNode3/BarryNode3.vmx',
      snapshotDirectory = <unset>,
      suspendDirectory = <unset>,
      logDirectory = <unset>,
      ftMetadataDirectory = <unset>
   },
   tools = <unset>,
   flags = <unset>,
   consolePreferences = <unset>,
   powerOpInfo = <unset>,
   numCPUs = 8,
   numCoresPerSocket = <unset>,
   memoryMB = 65536,
   memoryHotAddEnabled = <unset>,
   cpuHotAddEnabled = <unset>,
   cpuHotRemoveEnabled = <unset>,
   virtualICH7MPresent = <unset>,
   virtualSMCPresent = <unset>,
   deviceChange = (vim.vm.device.VirtualDeviceSpec) [
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4042,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 1',
               summary = 'DEV5'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-150',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualE1000) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -4048,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Network adapter 2',
               summary = '3nodeautodeploy'
            },
            backing = (vim.vm.device.VirtualEthernetCard.DistributedVirtualPortBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               port = (vim.dvs.PortConnection) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  switchUuid = 'd6 83 16 50 e9 8a d1 60-cc 12 71 37 1e d1 20 06',
                  portgroupKey = 'dvportgroup-1020',
                  portKey = <unset>,
                  connectionCookie = <unset>
               }
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            addressType = <unset>,
            macAddress = <unset>,
            wakeOnLanEnabled = true,
            resourceAllocation = <unset>,
            externalId = <unset>,
            uptCompatibilityEnabled = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualLsiLogicController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -1009,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'SCSI controller 0',
               summary = 'LSI Logic'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 0,
            device = (int) [],
            hotAddRemove = <unset>,
            sharedBus = 'noSharing',
            scsiCtlrUnitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualIDEController) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -92,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'IDE 0',
               summary = 'IDE 0'
            },
            backing = <unset>,
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = <unset>,
            unitNumber = <unset>,
            busNumber = 1,
            device = (int) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = 'create',
         device = (vim.vm.device.VirtualDisk) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -2016,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'Hard disk 1',
               summary = '100.0 GB'
            },
            backing = (vim.vm.device.VirtualDisk.FlatVer2BackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '',
               datastore = <unset>,
               backingObjectId = <unset>,
               diskMode = 'persistent',
               split = <unset>,
               writeThrough = <unset>,
               thinProvisioned = false,
               eagerlyScrub = <unset>,
               uuid = <unset>,
               contentId = <unset>,
               changeId = <unset>,
               parent = <unset>,
               deltaDiskFormat = <unset>,
               digestEnabled = <unset>,
               deltaGrainSize = <unset>,
               deltaDiskFormatVariant = <unset>,
               sharing = <unset>
            },
            connectable = <unset>,
            slotInfo = <unset>,
            controllerKey = -1009,
            unitNumber = 0,
            capacityInKB = 104857600,
            capacityInBytes = <unset>,
            shares = <unset>,
            storageIOAllocation = <unset>,
            diskObjectId = <unset>,
            vFlashCacheConfigInfo = <unset>,
            iofilter = (str) []
         },
         profile = (vim.vm.ProfileSpec) []
      },
      (vim.vm.device.VirtualDeviceSpec) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         operation = 'add',
         fileOperation = <unset>,
         device = (vim.vm.device.VirtualCdrom) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            key = -3025,
            deviceInfo = (vim.Description) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'CD/DVD drive 1',
               summary = 'ISO [build-artifacts] manual-B723/DG8-manual-B-723.iso'
            },
            backing = (vim.vm.device.VirtualCdrom.IsoBackingInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               fileName = '[build-artifacts] manual-B723/DG8-manual-B-723.iso',
               datastore = 'vim.Datastore:datastore-284',
               backingObjectId = <unset>
            },
            connectable = (vim.vm.device.VirtualDevice.ConnectInfo) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               startConnected = true,
               allowGuestControl = true,
               connected = false,
               status = <unset>
            },
            slotInfo = <unset>,
            controllerKey = -92,
            unitNumber = <unset>
         },
         profile = (vim.vm.ProfileSpec) []
      }
   ],
   cpuAllocation = <unset>,
   memoryAllocation = <unset>,
   latencySensitivity = <unset>,
   cpuAffinity = <unset>,
   memoryAffinity = <unset>,
   networkShaper = <unset>,
   cpuFeatureMask = (vim.vm.ConfigSpec.CpuIdInfoSpec) [],
   extraConfig = (vim.option.OptionValue) [],
   swapPlacement = <unset>,
   bootOptions = <unset>,
   vAppConfig = <unset>,
   ftInfo = <unset>,
   repConfig = <unset>,
   vAppConfigRemoved = <unset>,
   vAssertsEnabled = <unset>,
   changeTrackingEnabled = <unset>,
   firmware = <unset>,
   maxMksConnections = <unset>,
   guestAutoLockEnabled = <unset>,
   managedBy = <unset>,
   memoryReservationLockedToMax = <unset>,
   nestedHVEnabled = <unset>,
   vPMCEnabled = <unset>,
   scheduledHardwareUpgradeInfo = <unset>,
   vmProfile = (vim.vm.ProfileSpec) [],
   messageBusTunnelEnabled = <unset>
}
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode3/requesting; data = {'_stamp': '2016-10-21T14:21:06.090996', 'event': 'requesting instance', 'kwargs': {'profile': 'tempprofile', 'resourcepool': 'Resources', 'dns_servers': ['75.75.75.75'], 'datacenter': 'UT-Dev8', 'minion': {'master': '10.81.9.4'}, 'ssh_username': 'sysadmin', 'image': 'rhel7_64Guest', 'driver': 'vcenter01:vmware', 'cluster': 'DEV-UT-DEV8', 'host': 'UT-DEV8-DEV', 'priv_key': '-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAwdWrM3CRUDhB1uEyMSX4HZe/ZUaSezE5tnTpKW398qgZuKCk\nwTlrP43eyL/FsWEIKSO787DZ4+zJhaaqbpa2VRwfy6nQvaTW120Vvl5hsvyqJA2v\nVAmhCLuO0OIPV4uCxWdo/qNV4s/N/P36YfLXCJ30nl0uvgPmdVViSe5wCfLvPC/3\ngFEp/einwd01iWwpQmufc9l4qrc68Cj7RL6V47eBIIFyEsh6xP4mVvvlaTUa9Ekr\nR4MHkfaoBlPSzFVy7mv1tE6/EIxuw5N1pg9vL+ZS8SxNT7GgaTJuJynZbTau4zTF\nUlqQVcPbtGrhyFBdxGC4chdsCVAF85UDBO2xQQIDAQABAoIBAQCovfctb9jBKkh+\n5UsJqFFIidtwMjDBGEhyw3Jbw8po3diOdyMWp4LrL/l7cB+NXLh7AAXWjuYQ2wlQ\n1ZfXcFLI4xP2/B2hiwgRQIDGWmnZJMaFXnh8w2kyLf2VcMcEYop0iaLI0q6pJljf\n3saDUKHMeZ4D44EWoFSXXr6TOATHUvQwLpprX9ZYhWE9DPC++c9j2rhA+T8J1AZp\ndbti4oft4gTb2t+3V7T3xOnFqgZ72RxBw/JPQ96oRn47JfuqAt+rnd/nSU69icVK\nyGlm8nROsrKeZRuZb2H0/29Eaf1GV/52/s/1hTM9hwhsOREN0JBik1vHcU7xWfnL\n8vvozYP1AoGBAMV35p550Hmb7gHxrG2sgeJSnYjeKQ0PKa5yvKtkaoDmsWAazjXk\nqrKPWL7gkp4b/p8ZbdcJ8gsNCtciCajmf7kA8G+2j6b33EcFZxl63PfXRkzn31Eb\nAnsj9Yj9bAF6d1EQK+IPUufb4+Z1JBAysIN9xvJKvbDXeFI/6M2vco6/AoGBAPtK\nCaD9KNRHDthTm0zCzW7CyAsuFK3XOdrqwQmMQmPuiRSUiaxkNwHEcnuMaqs5dCKv\nKAoYbkCgqfh8taSYqyZotUT8iwD3YyrHMrVY7OSsMSbITpP++D4RlxDb0pxtCoDL\n6HScCx09TYcTSa9G570mUUVF3LKbpdGWAn6777//AoGAa6eHeiRtDK9+3V51I8Gl\nec6ShfigJrd6gNmalFIFYkrirsNOYsFMclaGCmICbOJUOUayxEZux6mPnGO5InSv\ncxvY+P5taJi+ZZXDdHewGgoqEGllLSFtg9bB2LJYfKHYhMAtPGwgRblykMSSKaaI\n5tbebF9k9REzTpv6/o/FA58CgYEAvN7XAeOFjpeh9sJQVY+NLJTGGnEWJdtApuQP\nFwgO1mFxMsC6AZKJLZDjoyzU98EFIxSXeY8HPxgC6LuDIyWEbigBJsrSB3XpWTvD\nRz6BPxaVEts3BFF9b9l0u70dPWlPnaKlIxAt4lozLTU4Cr+2ahqktvZdfPkz1qVz\nVqIW/y0CgYBfg1MoiGpTwwKJ++57th1grfWWbL20aczCNzn8G2+FWE2GD/hfKp53\nejO02dskIn7TLkRU/+J/ITJoIP6XOuWAqWp5zv37Q8h/Ocd8fvxmTQBalQ4BxUyn\n4KDFVpz/AeMUVHmFCTgL1ME04OfdCiMpSs8dqbwxm3lL/TQS8yXS5Q==\n-----END RSA PRIVATE KEY-----', 'user': 'Dev8\jenkinsmaster', 'customization': True, 'datastore': 'UT-DEV03', 'password': 'digitalguardian!', 'pub_key': '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwdWrM3CRUDhB1uEyMSX4\nHZe/ZUaSezE5tnTpKW398qgZuKCkwTlrP43eyL/FsWEIKSO787DZ4+zJhaaqbpa2\nVRwfy6nQvaTW120Vvl5hsvyqJA2vVAmhCLuO0OIPV4uCxWdo/qNV4s/N/P36YfLX\nCJ30nl0uvgPmdVViSe5wCfLvPC/3gFEp/einwd01iWwpQmufc9l4qrc68Cj7RL6V\n47eBIIFyEsh6xP4mVvvlaTUa9EkrR4MHkfaoBlPSzFVy7mv1tE6/EIxuw5N1pg9v\nL+ZS8SxNT7GgaTJuJynZbTau4zTFUlqQVcPbtGrhyFBdxGC4chdsCVAF85UDBO2x\nQQIDAQAB\n-----END PUBLIC KEY-----', 'power_on': False, 'name': 'BarryNode3', 'url': '10.81.8.6', 'num_cpus': 8, 'deploy': True, 'devices': {'cd': {'CD/DVD drive 1': {'controller': 'IDE 0', 'device_type': 'datastore_iso_file', 'iso_path': '[build-artifacts] manual-B723/DG8-manual-B-723.iso'}}, 'scsi': {'SCSI controller 0': {'type': 'lsilogic'}}, 'disk': {'Hard disk 1': {'controller': 'SCSI controller 0', 'size': 100}}, 'network': {'Network adapter 2': {'switch_type': 'distributed', 'ip': '172.30.0.3', 'adapter_type': 'e1000', 'name': '3nodeautodeploy', 'subnet_mask': '255.255.0.0'}, 'Network adapter 1': {'switch_type': 'distributed', 'subnet_mask': '255.255.252.0', 'name': 'DEV5', 'ip': '10.81.28.113', 'adapter_type': 'e1000', 'gateway': ['10.81.28.1']}}, 'ide': {'IDE 0': {'type': 'sata'}}}, 'template': False, 'memory': '64GB', 'folder': 'DEV5-Barry', 'os': 'bootstrap-salt', 'inline_script': None}}
[INFO    ] Creating BarryNode3
[INFO    ] [ BarryNode3 ] Waiting for create task to finish [0 s]
[INFO    ] [ BarryNode3 ] Successfully completed create task in 1 seconds
[DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
[DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc
[DEBUG   ] Sending event: tag = salt/cloud/BarryNode3/created; data = {'profile': 'tempprofile', 'event': 'created instance', '_stamp': '2016-10-21T14:21:08.073988', 'name': 'BarryNode3', 'provider': 'vcenter01:vmware'}
[DEBUG   ] LazyLoaded nested.output
Virtual Machine(s) have been powered on successfully
primary_mac = 00:50:56:96:7f:30
### Versions Report

(Provided by running `salt --versions-report`. Please also mention any differences in master/minion versions.)
