I use restart_on_error in the title to indicate the behavior it used to represent, as it seems this is now the standard behavior (I don't see the flag referenced in the code anymore at least.)

The problem is that the SaltSystemExit exceptions are caught in salt/cli/daemons.py:Minion.start instead of being percolated to salt/scripts.py:minion_process where the restart logic resides.

To solve this for me I just removed the except clause from salt/cli/daemons.py:Minion.start, which allows the restart to work as before.

Additionally I came across a problem where the minion would stop working when it encounters an invalid master key. (I think his occurred when switching from single master to multimaster, but it could also just be happening somewhere during the setup of the minion, I didn't investigate further since I just needed the minion to restart itself when this occurs.)
To solve this I changed the sys.exit(42) in salt/crypt.py:AsyncAuth.sign_in (line 553) to raise SaltSystemExit('Invalid master key'), which along with the above fix causes the minion to restart when this happens.
