I am running the bellow comand from master to minion:

```

    root@salt-master$ salt 'myminion' gpg.import_key filename='/root/mygpg.key
```

The result of the command is the following error:

```
Module function gpg.import_key threw an exception. Exception: list indices must be integers, not str
```

This is strange since indeed the gpg key is added to the minion's gpg chain. I deleted the key and made sure that the gpg key chains was empty on the salt minion node. I executed again the command  and i still get the same error while the key was succesfully imported on the minion. This is the stack trace:

```

****MINION LOG*****

2015-06-22 14:03:26,758 [salt.minion                              ][INFO    ][25171] User root Executing command gpg.import_key with jid 20150622140245741453
2015-06-22 14:03:26,758 [salt.minion                              ][DEBUG   ][25171] Command details {'tgt_type': 'glob', 'jid': '20150622140245741453', 'tgt': 'myminion', 'ret': '', 'user': 'root', 'arg': [{'filename': '/root/mygpg.key', '__kwarg__': True}], 'fun': 'gpg.import_key'}
2015-06-22 14:03:26,770 [salt.minion                              ][INFO    ][25881] Starting a new job with PID 25881
2015-06-22 14:03:26,778 [salt.utils.lazy                          ][DEBUG   ][25881] LazyLoaded gpg.import_key
2015-06-22 14:03:26,782 [salt.utils.lazy                          ][DEBUG   ][25881] LazyLoaded user.info
2015-06-22 14:03:26,784 [gnupg                                    ][DEBUG   ][25881] ['gpg', '--status-fd', '2', '--no-tty', '--homedir', '/root/.gnupg', '--version']
2015-06-22 14:03:26,790 [gnupg                                    ][DEBUG   ][25881] stderr reader: <Thread(Thread-2, initial daemon)>
2015-06-22 14:03:26,792 [gnupg                                    ][DEBUG   ][25881] stdout reader: <Thread(Thread-3, initial daemon)>
2015-06-22 14:03:26,793 [gnupg                                    ][DEBUG   ][25881] chunk: 'gpg (GnuPG) 1.4.18\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permit'
2015-06-22 14:03:26,794 [gnupg                                    ][DEBUG   ][25881] import_keys: '-----BEGIN PGP PRIVATE KEY BLOCK-----\nVersion: GnuPG v1\n\rCAGR0tS0mN+dSX9aPDl0r\nzNgH'
2015-06-22 14:03:26,794 [gnupg                                    ][DEBUG   ][25881] ['gpg', '--status-fd', '2', '--no-tty', '--homedir', '/root/.gnupg', '--import']
2015-06-22 14:03:26,799 [gnupg                                    ][DEBUG   ][25881] data copier: <Thread(Thread-4, initial daemon)>, <_io.BytesIO object at 0x7f216078d230>, <open file '<fdopen>', mode 'wb' at 0x7f216076d8a0>
2015-06-22 14:03:26,800 [gnupg                                    ][DEBUG   ][25881] sending chunk (1024): '-----BEGIN PGP PRIVATE KEY BLOCK-----\nVersion: GnuPG v1\n\nlQOYBFWCkyQBCADD6eLIW/h0fCCNRP
2015-06-22 14:03:26,801 [gnupg                                    ][DEBUG   ][25881] stderr reader: <Thread(Thread-5, initial daemon)>
2015-06-22 14:03:26,802 [gnupg                                    ][DEBUG   ][25881] sending chunk (2048): 'whiPioy\nRAlWozMs+Vrqrnhl3Q/jzSgiq5aEwoOXL+4ELvJAR7'
2015-06-22 14:03:26,802 [gnupg                                    ][DEBUG   ][25881] stdout reader: <Thread(Thread-6, initial daemon)>
2015-06-22 14:03:26,803 [gnupg                                    ][DEBUG   ][25881] sending chunk (3072): 'zi0TpTbb55cCr4miYKD6635\npnShpK56Te/'
2015-06-22 14:03:26,804 [gnupg                                    ][DEBUG   ][25881] sending chunk (3492): 'YKTJAIbDAAKCRAildVlMZyWOYpzCACooHKa'
2015-06-22 14:03:26,804 [gnupg                                    ][DEBUG   ][25881] closed output, 3492 bytes sent
2015-06-22 14:03:26,809 [gnupg                                    ][DEBUG   ][25881] gpg: key 319C9639: secret key imported
2015-06-22 14:03:26,812 [gnupg                                    ][DEBUG   ][25881] [GNUPG:] IMPORT_OK 17 B12270B5319C9639
2015-06-22 14:03:26,813 [gnupg                                    ][DEBUG   ][25881] gpg: key 319C9639: public key "Test (Local Repo) <sa@test.com>" imported
2015-06-22 14:03:26,813 [gnupg                                    ][DEBUG   ][25881] [GNUPG:] IMPORTED 2295D565319C9639 test (  Local Repo) <sa@test.com>
2015-06-22 14:03:26,813 [gnupg                                    ][DEBUG   ][25881] [GNUPG:] IMPORT_OK 1 B12270B682751ADC02AEACD22295D565319C9639
2015-06-22 14:03:26,814 [gnupg                                    ][DEBUG   ][25881] gpg: Total number processed: 1
2015-06-22 14:03:26,814 [gnupg                                    ][DEBUG   ][25881] gpg:               imported: 1  (RSA: 1)
2015-06-22 14:03:26,815 [gnupg                                    ][DEBUG   ][25881] gpg:       secret keys read: 1
2015-06-22 14:03:26,815 [gnupg                                    ][DEBUG   ][25881] gpg:   secret keys imported: 1
2015-06-22 14:03:26,815 [gnupg                                    ][DEBUG   ][25881] [GNUPG:] IMPORT_RES 1 0 1 1 0 0 0 0 0 1 1 0 0 0
2015-06-22 14:03:26,816 [gnupg                                    ][DEBUG   ][25881] import_keys result: {'count': 1, 'fingerprints': [u'B12270B6827565319C9639', u'B12270B6827565319C9639'], 'imported': 1, 'stderr': u'gpg: key 319C9639: secret key imported\n[GNUPG:] IMPORT_OK 17 B12270B682751A9C9639\ngpg: key 319C9639: public key "test (  Local Repo) <sa@test.com>" imported\n[GNUPG:] IMPORTED 2295D565319C9639 test (  Local Repo) <sa@test.com>\n[GNUPG:] IMPORT_OK 1 B12270B6319C9639\ngpg: Total number processed: 1\ngpg:               imported: 1  (RSA: 1)\ngpg:       secret keys read: 1\ngpg:   secret keys imported: 1\n[GNUPG:] IMPORT_RES 1 0 1 1 0 0 0 0 0 1 1 0 0 0\n', 'sec_dups': 0, 'unchanged': 0, 'gpg': <gnupg.GPG object at 0x7f2160790110>, 'results': [{'text': 'Contains private key\nEntirely new key\nNot actually changed\n', 'ok': u'17', 'fingerprint': u'B12270B682765319C9639'}, {'text': 'Entirely new key\nNot actually changed\n', 'ok': u'1', 'fingerprint': u'B12270B682751565319C9639'}], 'not_imported': 0, 'imported_rsa': 1, 'n_sigs': 0, 'n_uids': 0, 'n_revoc': 0, 'no_user_id': 0, 'sec_read': 1, 'data': '', 'sec_imported': 1, 'n_subk': 0}
2015-06-22 14:03:26,817 [salt.loaded.int.module.gpg               ][DEBUG   ][25881] imported_data ['count', 'fingerprints', 'imported', 'stderr', 'sec_dups', 'unchanged', 'gpg', 'results', 'not_imported', 'imported_rsa', 'n_sigs', 'n_uids', 'n_revoc', 'no_user_id', 'sec_read', 'data', 'sec_imported', 'n_subk']
2015-06-22 14:03:26,817 [salt.loaded.int.module.gpg               ][DEBUG   ][25881] imported_data ['count', 'no_user_id', 'imported', 'imported_rsa', 'unchanged', 'n_uids', 'n_subk', 'n_sigs', 'n_revoc', 'sec_read', 'sec_imported', 'sec_dups', 'not_imported']
2015-06-22 14:03:26,817 [salt.minion                              ][WARNING ][25881] TypeError encountered executing gpg.import_key: list indices must be integers, not str. See debug log for more info.
Traceback (most recent call last):
  File "/usr/lib/python2.7/dist-packages/salt/minion.py", line 1142, in _thread_return
    return_data = func(*args, **kwargs)
  File "/usr/lib/python2.7/dist-packages/salt/modules/gpg.py", line 621, in import_key
    if imported_data.counts['imported'] or imported_data.counts['imported_rsa']:
TypeError: list indices must be integers, not str
2015-06-22 14:03:26,819 [salt.minion                              ][INFO    ][25881] Returning information for job: 20150622140245741453
2015-06-22 14:03:26,820 [salt.crypt                               ][DEBUG   ][25881] Re-using SAuth for ('/etc/salt/pki/minion', 'myminion', 'tcp://10.10.10.10:4506')
```
