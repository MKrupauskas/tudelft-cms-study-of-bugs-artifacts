**Description**
When there is a (configuration) error in one beacon, other beacons are not reported.

**Setup**
Master plus a minion.

**Steps to Reproduce the behavior**
Activate a set of beacons on the minion, e.g. `load`, `status` and `swapusage`.
But configure `swapusage` as `{"percent":0}` instead of `{"percent":"0%"}`.
This causes an error in the `swapusage` beacon, but the results for the other 2 beacons are also not reported.

After inspecting the code in `beacons/__init__.py` line 128, it is clear that first all beacon values are collected and then reported.
any exception in that process is not caught and no futher beacon values are collected and none are reported.

Th following error message is visible for the original error:
```
2021-07-20 22:50:09,296 [salt.minion      :2947][CRITICAL][814] The beacon errored: 
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/salt/minion.py", line 2945, in handle_beacons
    beacons = self.process_beacons(self.functions)
  File "/usr/lib/python3/dist-packages/salt/minion.py", line 513, in process_beacons
    b_conf, self.opts["grains"]
  File "/usr/lib/python3/dist-packages/salt/beacons/__init__.py", line 128, in process
    raw = self.beacons[fun_str](b_config[mod])
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 1241, in __call__
    return self.loader.run(run_func, *args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 2274, in run
    return self._last_context.run(self._run_as, _func_or_method, *args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/loader.py", line 2289, in _run_as
    return _func_or_method(*args, **kwargs)
  File "/usr/lib/python3/dist-packages/salt/beacons/swapusage.py", line 69, in beacon
    if "%" in monitor_usage:
TypeError: argument of type 'int' is not iterable
```

**Expected behavior**
An exception on one beacon should only affect that beacon, and not others from the same minion

And preferably (but that may be considered a feature request):
An exception in a beacon should emit a beacon event with the error message instead, so that the error does not go unnoticed.

**Versions Report**
<details><summary>salt --versions-report</summary>
(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.) 

```
Salt Version:
          Salt: 3003.1
 
Dependency Versions:
          cffi: Not Installed
      cherrypy: unknown
      dateutil: 2.7.3
     docker-py: 3.4.1
         gitdb: 2.0.5
     gitpython: 2.1.11
        Jinja2: 2.10
       libgit2: Not Installed
      M2Crypto: Not Installed
          Mako: 1.0.7
       msgpack: 0.5.6
  msgpack-pure: Not Installed
  mysql-python: Not Installed
     pycparser: Not Installed
      pycrypto: 2.6.1
  pycryptodome: 3.6.1
        pygit2: Not Installed
        Python: 3.7.3 (default, Jan 22 2021, 20:04:44)
  python-gnupg: Not Installed
        PyYAML: 3.13
         PyZMQ: 17.1.2
         smmap: 2.0.5
       timelib: Not Installed
       Tornado: 4.5.3
           ZMQ: 4.3.1
 
System Versions:
          dist: debian 10 buster
        locale: utf-8
       machine: x86_64
       release: 4.19.0-17-amd64
        system: Linux
       version: Debian GNU/Linux 10 buster
```
</details>