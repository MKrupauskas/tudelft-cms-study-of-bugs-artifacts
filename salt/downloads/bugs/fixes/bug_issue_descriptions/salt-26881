When running something like:

```
 salt '*' mine.get 'node_type:rabbitmq' network.ip_addrs grain
```

It returns data from nodes that are not available any more (provably cached), therefore when using mine.get on a config template for example, haproxy, rabbitmq etc, the config is populated with wrong info:

```
{%- for server, addrs in salt['mine.get']('node_type:rabbitmq', 'network.ip_addrs', expr_form='grain').items() -%}
'rabbit@{{ server }}'
{%- if loop.last %}{%else%},{% endif %}
{%- endfor -%} ], disc}} 
```

Is there a way to check if the minion is up and running while getting the data ? or any idea of how to do a  **test.ping** within the template so that I can only use data from 'live' minions ?

This is the version I am using, both server/minion:

```
> salt --versions
           Salt: 2015.5.5
         Python: 2.7.10 (default, Sep  1 2015, 20:26:14)
         Jinja2: 2.8
       M2Crypto: 0.22
 msgpack-python: 0.4.2
   msgpack-pure: Not Installed
       pycrypto: 2.6.1
        libnacl: Not Installed
         PyYAML: 3.11
          ioflo: Not Installed
          PyZMQ: 14.7.0
           RAET: Not Installed
            ZMQ: 4.1.3
           Mako: Not Installed
        Tornado: Not Installed
        timelib: Not Installed
       dateutil: 2.3
```
