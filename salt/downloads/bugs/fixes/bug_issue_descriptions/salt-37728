### Description of Issue
salt-ssh from FreeBSD host system doesn't work with password-based authentication: nor with credentials provided by roster file, nor by cli parameters (--askpass or --passwd). When using authentication by keys all working as expected.
salt-ssh from Linux to FreeBSD with password-based authentication works well.
Seems it's problem with tty - verbose output of ssh-client says:
```
debug1: read_passphrase: can't open /dev/tty: Device not configured
```
Setting of `tty` in roster or adding `-T` to ssh client doesn't do any changes.
### Setup
roster file:
```
b-host:
    host: 172.16.0.253
    user: Salt
    passwd: Salt
    priv:
```
For debugging purposes in client/ssh/shell.py onto ssh command added extra flag `-v`.
### Steps to Reproduce Issue
Running test.ping on target system:
```
salt-ssh 'b-host' -ltrace test.ping
```
Debug output:
```
[DEBUG   ] Missing configuration file: /usr/local/etc/salt/master
[DEBUG   ] Using cached minion ID from /usr/local/etc/salt/minion_id: a-host
[DEBUG   ] Key 'file_ignore_glob' with value None has an invalid type of NoneType, a list is required for this value
[TRACE   ] None of the required configuration sections, 'logstash_udp_handler' and 'logstash_zmq_handler', were found the in the configuration. Not loading the Logstash logging handlers module.
[TRACE   ] The required configuration section, 'fluent_handler', was not found the in the configuration. Not loading the fluent logging handlers module.
[DEBUG   ] Configuration file path: /usr/local/etc/salt/master
[WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
[DEBUG   ] LazyLoaded flat.targets
[DEBUG   ] LazyLoaded jinja.render
[DEBUG   ] LazyLoaded yaml.render
[DEBUG   ] compile template: roster
[DEBUG   ] Jinja search path: ['/var/cache/salt/master/files/base']
[PROFILE ] Time (in seconds) to render 'roster' using 'jinja' renderer: 0.00371289253235
[DEBUG   ] Rendered data from file: roster:
b-host:
    host: 172.16.0.253
    user: Salt
    passwd: Salt
    priv:

[DEBUG   ] Results of YAML rendering:
OrderedDict([('b-host', OrderedDict([('host', '172.16.0.253'), ('user', 'Salt'), ('passwd', 'Salt'), ('priv', None)]))])
[PROFILE ] Time (in seconds) to render 'roster' using 'yaml' renderer: 0.00160503387451
[DEBUG   ] Matched minions: {'b-host': OrderedDict([('host', '172.16.0.253'), ('user', 'Salt'), ('passwd', 'Salt'), ('priv', None)])}
[DEBUG   ] LazyLoaded roots.envs
[DEBUG   ] Could not LazyLoad roots.init
[DEBUG   ] Updating roots fileserver cache
[TRACE   ] Lockfile /var/cache/salt/master/file_lists/roots/.base.w created
[TRACE   ] Lockfile /var/cache/salt/master/file_lists/roots/.base.w removed
[DEBUG   ] LazyLoaded local_cache.prep_jid
[DEBUG   ] Adding minions for job 20161116180800832813: ['b-host']
[DEBUG   ] Could not LazyLoad test.ping
[DEBUG   ] Performing shimmed, blocking command as follows:
test.ping
[DEBUG   ] Executed SHIM command. Command logged to TRACE
[TRACE   ] Executing command: ssh -v 172.16.0.253  -o ControlMaster=auto -o StrictHostKeyChecking=no -o GSSAPIAuthentication=no -o ConnectTimeout=65 -o PasswordAuthentication=yes -o PubkeyAuthentication=yes -o Port=22 -o User=******  /bin/sh << 'EOF'
set -e
set -u
DEBUG="1"
if [ -n "$DEBUG" ]
then set -x
fi
SUDO=""
if [ -n "" ]
then SUDO="sudo "
fi
EX_PYTHON_INVALID=10
PYTHON_CMDS="python27 python2.7 python26 python2.6 python2 python"
for py_cmd in $PYTHON_CMDS
do if "$py_cmd" -c "import sys; sys.exit(not (sys.hexversion >= 0x02060000 and sys.version_info[0] == 2));" >/dev/null 2>&1
then py_cmd_path=`"$py_cmd" -c 'from __future__ import print_function; import sys; print(sys.executable);'`
exec $SUDO "$py_cmd_path" -c 'import base64; exec(base64.b64decode("""IyBweWxpbnQ6IGRpc2FibGU9Vzk5MDMKJycnClRoaXMgaXMgYSBzaGltIHRoYXQgaGFuZGxlcyBj
aGVja2luZyBhbmQgdXBkYXRpbmcgc2FsdCB0aGluIGFuZAp0aGVuIGludm9raW5nIHRoaW4uCgpU
aGlzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYXMgYSBtb2R1bGUsIHJhdGhl
ciBpdCBpcyBhCmhlbHBlciBzY3JpcHQgdXNlZCBieSBzYWx0LmNsaWVudC5zc2guU2luZ2xlLiAg
SXQgaXMgaGVyZSwgaW4gYQpzZXBhcmF0ZSBmaWxlLCBmb3IgY29udmVuaWVuY2Ugb2YgZGV2ZWxv
cG1lbnQuCicnJwoKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhYnNvbHV0ZV9pbXBvcnQKCmltcG9y
dCBoYXNobGliCmltcG9ydCB0YXJmaWxlCmltcG9ydCBzaHV0aWwKaW1wb3J0IHN5cwppbXBvcnQg
b3MKaW1wb3J0IHN0YXQKaW1wb3J0IHN1YnByb2Nlc3MKClRISU5fQVJDSElWRSA9ICdzYWx0LXRo
aW4udGd6JwpFWFRfQVJDSElWRSA9ICdzYWx0LWV4dF9tb2RzLnRneicKCiMgS2VlcCB0aGVzZSBp
biBzeW5jIHdpdGggc2FsdC9kZWZhdWx0cy9leGl0Y29kZXMucHkKRVhfVEhJTl9ERVBMT1kgPSAx
MQpFWF9USElOX0NIRUNLU1VNID0gMTIKRVhfTU9EX0RFUExPWSA9IDEzCkVYX1NDUF9OT1RfRk9V
TkQgPSAxNApFWF9DQU5UQ1JFQVQgPSA3MwoKCmNsYXNzIE9CSihvYmplY3QpOgogICAgIiIiQW4g
ZW1wdHkgY2xhc3MgZm9yIGhvbGRpbmcgaW5zdGFuY2UgYXR0cmlidXRlIHZhbHVlcy4iIiIKICAg
IHBhc3MKCgpPUFRJT05TID0gTm9uZQpBUkdTID0gTm9uZQojIFRoZSBiZWxvdyBsaW5lIGlzIHdo
ZXJlIE9QVElPTlMgY2FuIGJlIHJlZGVmaW5lZCB3aXRoIGludGVybmFsIG9wdGlvbnMKIyAocmF0
aGVyIHRoYW4gY2xpIGFyZ3VtZW50cykgd2hlbiB0aGUgc2hpbSBpcyBidW5kbGVkIGJ5CiMgY2xp
ZW50LnNzaC5TaW5nbGUuX2NtZF9zdHIoKQojIHB5bGludDogZGlzYWJsZT1ibG9jay1jb21tZW50
LXNob3VsZC1zdGFydC13aXRoLWNhcmRpbmFsLXNwYWNlCgpPUFRJT05TID0gT0JKKCkKT1BUSU9O
Uy5jb25maWcgPSAiIiIKe2lkOiBiLWhvc3QsIGxvZ19maWxlOiBzYWx0LWNhbGwubG9nLCByb290
X2RpcjogL3RtcC8uU2FsdF80NzM4Mjdfc2FsdC9ydW5uaW5nX2RhdGEsCiAgc29ja19kaXI6IC99
CiIiIgpPUFRJT05TLmRlbGltaXRlciA9ICdfZWRiYzc4ODVlNGY5YWFjOWI4M2IzNTk5OWI2OGQw
MTUxNDhjYWY0NjdiNzhmYTM5YzA1ZjY2OWMwZmY4OTg3OCcKT1BUSU9OUy5zYWx0ZGlyID0gJy90
bXAvLlNhbHRfNDczODI3X3NhbHQnCk9QVElPTlMuY2hlY2tzdW0gPSAnYTg1YjcxNTNmNWRiY2Y5
NGM1ODEzMDg1MDIyNzhhMTVmYTE5ODE5OScKT1BUSU9OUy5oYXNoZnVuYyA9ICdzaGExJwpPUFRJ
T05TLnZlcnNpb24gPSAnMjAxNS44LjgnCk9QVElPTlMuZXh0X21vZHMgPSAnJwpPUFRJT05TLndp
cGUgPSBGYWxzZQpPUFRJT05TLnR0eSA9IEZhbHNlCk9QVElPTlMuY21kX3VtYXNrID0gTm9uZQpB
UkdTID0gWyd0ZXN0LnBpbmcnXQoKCgpkZWYgbmVlZF9kZXBsb3ltZW50KCk6CiAgICAiIiIKICAg
IFNhbHQgdGhpbiBuZWVkcyB0byBiZSBkZXBsb3llZCAtIHByZXAgdGhlIHRhcmdldCBkaXJlY3Rv
cnkgYW5kIGVtaXQgdGhlCiAgICBkZWxpbWV0ZXIgYW5kIGV4aXQgY29kZSB0aGF0IHNpZ25hbHMg
YSByZXF1aXJlZCBkZXBsb3ltZW50LgogICAgIiIiCiAgICBpZiBvcy5wYXRoLmV4aXN0cyhPUFRJ
T05TLnNhbHRkaXIpOgogICAgICAgIHNodXRpbC5ybXRyZWUoT1BUSU9OUy5zYWx0ZGlyKQogICAg
b2xkX3VtYXNrID0gb3MudW1hc2soMG8wNzcpCiAgICBvcy5tYWtlZGlycyhPUFRJT05TLnNhbHRk
aXIpCiAgICBvcy51bWFzayhvbGRfdW1hc2spCiAgICAjIFZlcmlmeSBwZXJtcyBvbiBzYWx0ZGly
CiAgICBldWlkID0gb3MuZ2V0ZXVpZCgpCiAgICBkc3RhdCA9IG9zLnN0YXQoT1BUSU9OUy5zYWx0
ZGlyKQogICAgaWYgZHN0YXQuc3RfdWlkICE9IGV1aWQ6CiAgICAgICAgIyBBdHRhY2sgZGV0ZWN0
ZWQsIHRyeSBhZ2FpbgogICAgICAgIG5lZWRfZGVwbG95bWVudCgpCiAgICBpZiBkc3RhdC5zdF9t
b2RlICE9IDE2ODMyOgogICAgICAgICMgQXR0YWNrIGRldGVjdGVkCiAgICAgICAgbmVlZF9kZXBs
b3ltZW50KCkKICAgICMgSWYgU1VET2luZyB0aGVuIGFsc28gZ2l2ZSB0aGUgc3VwZXIgdXNlciBn
cm91cCB3cml0ZSBwZXJtaXNzaW9ucwogICAgc3Vkb19naWQgPSBvcy5lbnZpcm9uLmdldCgnU1VE
T19HSUQnKQogICAgaWYgc3Vkb19naWQ6CiAgICAgICAgb3MuY2hvd24oT1BUSU9OUy5zYWx0ZGly
LCAtMSwgaW50KHN1ZG9fZ2lkKSkKICAgICAgICBzdHQgPSBvcy5zdGF0KE9QVElPTlMuc2FsdGRp
cikKICAgICAgICBvcy5jaG1vZChPUFRJT05TLnNhbHRkaXIsIHN0dC5zdF9tb2RlIHwgc3RhdC5T
X0lXR1JQIHwgc3RhdC5TX0lSR1JQIHwgc3RhdC5TX0lYR1JQKQoKICAgICMgRGVsaW1pdGVyIGVt
aXR0ZWQgb24gc3Rkb3V0ICpvbmx5KiB0byBpbmRpY2F0ZSBzaGltIG1lc3NhZ2UgdG8gbWFzdGVy
LgogICAgc3lzLnN0ZG91dC53cml0ZSgiezB9XG5kZXBsb3lcbiIuZm9ybWF0KE9QVElPTlMuZGVs
aW1pdGVyKSkKICAgIHN5cy5leGl0KEVYX1RISU5fREVQTE9ZKQoKCiMgQWRhcHRlZCBmcm9tIHNh
bHQudXRpbHMuZ2V0X2hhc2goKQpkZWYgZ2V0X2hhc2gocGF0aCwgZm9ybT0nc2hhMScsIGNodW5r
X3NpemU9NDA5Nik6CiAgICAiIiJHZW5lcmF0ZSBhIGhhc2ggZGlnZXN0IHN0cmluZyBmb3IgYSBm
aWxlLiIiIgogICAgdHJ5OgogICAgICAgIGhhc2hfdHlwZSA9IGdldGF0dHIoaGFzaGxpYiwgZm9y
bSkKICAgIGV4Y2VwdCBBdHRyaWJ1dGVFcnJvcjoKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCdJ
bnZhbGlkIGhhc2ggdHlwZTogezB9Jy5mb3JtYXQoZm9ybSkpCiAgICB3aXRoIG9wZW4ocGF0aCwg
J3JiJykgYXMgaWZpbGU6CiAgICAgICAgaGFzaF9vYmogPSBoYXNoX3R5cGUoKQogICAgICAgICMg
cmVhZCB0aGUgZmlsZSBpbiBpbiBjaHVua3MsIG5vdCB0aGUgZW50aXJlIGZpbGUKICAgICAgICBm
b3IgY2h1bmsgaW4gaXRlcihsYW1iZGE6IGlmaWxlLnJlYWQoY2h1bmtfc2l6ZSksIGInJyk6CiAg
ICAgICAgICAgIGhhc2hfb2JqLnVwZGF0ZShjaHVuaykKICAgICAgICByZXR1cm4gaGFzaF9vYmou
aGV4ZGlnZXN0KCkKCgpkZWYgdW5wYWNrX3RoaW4odGhpbl9wYXRoKToKICAgICIiIlVucGFjayB0
aGUgU2FsdCB0aGluIGFyY2hpdmUuIiIiCiAgICB0ZmlsZSA9IHRhcmZpbGUuVGFyRmlsZS5nem9w
ZW4odGhpbl9wYXRoKQogICAgb2xkX3VtYXNrID0gb3MudW1hc2soMG8wNzcpCiAgICB0ZmlsZS5l
eHRyYWN0YWxsKHBhdGg9T1BUSU9OUy5zYWx0ZGlyKQogICAgdGZpbGUuY2xvc2UoKQogICAgb3Mu
dW1hc2sob2xkX3VtYXNrKQogICAgb3MudW5saW5rKHRoaW5fcGF0aCkKCgpkZWYgbmVlZF9leHQo
KToKICAgICIiIlNpZ25hbCB0aGF0IGV4dGVybmFsIG1vZHVsZXMgbmVlZCB0byBiZSBkZXBsb3ll
ZC4iIiIKICAgIHN5cy5zdGRvdXQud3JpdGUoInswfVxuZXh0X21vZHNcbiIuZm9ybWF0KE9QVElP
TlMuZGVsaW1pdGVyKSkKICAgIHN5cy5leGl0KEVYX01PRF9ERVBMT1kpCgoKZGVmIHVucGFja19l
eHQoZXh0X3BhdGgpOgogICAgIiIiVW5wYWNrIHRoZSBleHRlcm5hbCBtb2R1bGVzLiIiIgogICAg
bW9kY2FjaGUgPSBvcy5wYXRoLmpvaW4oCiAgICAgICAgICAgIE9QVElPTlMuc2FsdGRpciwKICAg
ICAgICAgICAgJ3J1bm5pbmdfZGF0YScsCiAgICAgICAgICAgICd2YXInLAogICAgICAgICAgICAn
Y2FjaGUnLAogICAgICAgICAgICAnc2FsdCcsCiAgICAgICAgICAgICdtaW5pb24nLAogICAgICAg
ICAgICAnZXh0bW9kcycpCiAgICB0ZmlsZSA9IHRhcmZpbGUuVGFyRmlsZS5nem9wZW4oZXh0X3Bh
dGgpCiAgICBvbGRfdW1hc2sgPSBvcy51bWFzaygwbzA3NykKICAgIHRmaWxlLmV4dHJhY3RhbGwo
cGF0aD1tb2RjYWNoZSkKICAgIHRmaWxlLmNsb3NlKCkKICAgIG9zLnVtYXNrKG9sZF91bWFzaykK
ICAgIG9zLnVubGluayhleHRfcGF0aCkKICAgIHZlcl9wYXRoID0gb3MucGF0aC5qb2luKG1vZGNh
Y2hlLCAnZXh0X3ZlcnNpb24nKQogICAgdmVyX2RzdCA9IG9zLnBhdGguam9pbihPUFRJT05TLnNh
bHRkaXIsICdleHRfdmVyc2lvbicpCiAgICBzaHV0aWwubW92ZSh2ZXJfcGF0aCwgdmVyX2RzdCkK
CgpkZWYgbWFpbihhcmd2KTogICMgcHlsaW50OiBkaXNhYmxlPVcwNjEzCiAgICAiIiJNYWluIHBy
b2dyYW0gYm9keSIiIgogICAgdGhpbl9wYXRoID0gb3MucGF0aC5qb2luKE9QVElPTlMuc2FsdGRp
ciwgVEhJTl9BUkNISVZFKQogICAgaWYgb3MucGF0aC5pc2ZpbGUodGhpbl9wYXRoKToKICAgICAg
ICBpZiBPUFRJT05TLmNoZWNrc3VtICE9IGdldF9oYXNoKHRoaW5fcGF0aCwgT1BUSU9OUy5oYXNo
ZnVuYyk6CiAgICAgICAgICAgIHN5cy5zdGRlcnIud3JpdGUoJ3swfVxuJy5mb3JtYXQoT1BUSU9O
Uy5jaGVja3N1bSkpCiAgICAgICAgICAgIHN5cy5zdGRlcnIud3JpdGUoJ3swfVxuJy5mb3JtYXQo
Z2V0X2hhc2godGhpbl9wYXRoLCBPUFRJT05TLmhhc2hmdW5jKSkpCiAgICAgICAgICAgIG9zLnVu
bGluayh0aGluX3BhdGgpCiAgICAgICAgICAgIHN5cy5zdGRlcnIud3JpdGUoJ1dBUk5JTkc6IGNo
ZWNrc3VtIG1pc21hdGNoIGZvciAiezB9IlxuJy5mb3JtYXQodGhpbl9wYXRoKSkKICAgICAgICAg
ICAgc3lzLmV4aXQoRVhfVEhJTl9DSEVDS1NVTSkKICAgICAgICB1bnBhY2tfdGhpbih0aGluX3Bh
dGgpCiAgICAgICAgIyBTYWx0IHRoaW4gbm93IGlzIGF2YWlsYWJsZSB0byB1c2UKICAgIGVsc2U6
CiAgICAgICAgc2Nwc3RhdCA9IHN1YnByb2Nlc3MuUG9wZW4oWycvYmluL3NoJywgJy1jJywgJ2Nv
bW1hbmQgLXYgc2NwJ10pLndhaXQoKQogICAgICAgIGlmIHNjcHN0YXQgIT0gMDoKICAgICAgICAg
ICAgc3lzLmV4aXQoRVhfU0NQX05PVF9GT1VORCkKCiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhp
c3RzKE9QVElPTlMuc2FsdGRpcik6CiAgICAgICAgICAgIG5lZWRfZGVwbG95bWVudCgpCgogICAg
ICAgIGlmIG5vdCBvcy5wYXRoLmlzZGlyKE9QVElPTlMuc2FsdGRpcik6CiAgICAgICAgICAgIHN5
cy5zdGRlcnIud3JpdGUoCiAgICAgICAgICAgICAgICAnRVJST1I6IHNhbHQgcGF0aCAiezB9IiBl
eGlzdHMgYnV0IGlzJwogICAgICAgICAgICAgICAgJyBub3QgYSBkaXJlY3RvcnlcbicuZm9ybWF0
KE9QVElPTlMuc2FsdGRpcikKICAgICAgICAgICAgKQogICAgICAgICAgICBzeXMuZXhpdChFWF9D
QU5UQ1JFQVQpCgogICAgICAgIHZlcnNpb25fcGF0aCA9IG9zLnBhdGguam9pbihPUFRJT05TLnNh
bHRkaXIsICd2ZXJzaW9uJykKICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHModmVyc2lvbl9w
YXRoKSBvciBub3Qgb3MucGF0aC5pc2ZpbGUodmVyc2lvbl9wYXRoKToKICAgICAgICAgICAgc3lz
LnN0ZGVyci53cml0ZSgKICAgICAgICAgICAgICAgICdXQVJOSU5HOiBVbmFibGUgdG8gbG9jYXRl
IGN1cnJlbnQgdGhpbiAnCiAgICAgICAgICAgICAgICAnIHZlcnNpb246IHswfS5cbicuZm9ybWF0
KHZlcnNpb25fcGF0aCkKICAgICAgICAgICAgKQogICAgICAgICAgICBuZWVkX2RlcGxveW1lbnQo
KQogICAgICAgIHdpdGggb3Blbih2ZXJzaW9uX3BhdGgsICdyJykgYXMgdnBvOgogICAgICAgICAg
ICBjdXJfdmVyc2lvbiA9IHZwby5yZWFkbGluZSgpLnN0cmlwKCkKICAgICAgICBpZiBjdXJfdmVy
c2lvbiAhPSBPUFRJT05TLnZlcnNpb246CiAgICAgICAgICAgIHN5cy5zdGRlcnIud3JpdGUoCiAg
ICAgICAgICAgICAgICAnV0FSTklORzogY3VycmVudCB0aGluIHZlcnNpb24gezB9JwogICAgICAg
ICAgICAgICAgJyBpcyBub3QgdXAtdG8tZGF0ZSB3aXRoIHsxfS5cbicuZm9ybWF0KAogICAgICAg
ICAgICAgICAgICAgIGN1cl92ZXJzaW9uLCBPUFRJT05TLnZlcnNpb24KICAgICAgICAgICAgICAg
ICkKICAgICAgICAgICAgKQogICAgICAgICAgICBuZWVkX2RlcGxveW1lbnQoKQogICAgICAgICMg
U2FsdCB0aGluIGV4aXN0cyBhbmQgaXMgdXAtdG8tZGF0ZSAtIGZhbGwgdGhyb3VnaCBhbmQgdXNl
IGl0CgogICAgc2FsdF9jYWxsX3BhdGggPSBvcy5wYXRoLmpvaW4oT1BUSU9OUy5zYWx0ZGlyLCAn
c2FsdC1jYWxsJykKICAgIGlmIG5vdCBvcy5wYXRoLmlzZmlsZShzYWx0X2NhbGxfcGF0aCk6CiAg
ICAgICAgc3lzLnN0ZGVyci53cml0ZSgnRVJST1I6IHRoaW4gaXMgbWlzc2luZyAiezB9IlxuJy5m
b3JtYXQoc2FsdF9jYWxsX3BhdGgpKQogICAgICAgIG5lZWRfZGVwbG95bWVudCgpCgogICAgd2l0
aCBvcGVuKG9zLnBhdGguam9pbihPUFRJT05TLnNhbHRkaXIsICdtaW5pb24nKSwgJ3cnKSBhcyBj
b25maWc6CiAgICAgICAgY29uZmlnLndyaXRlKE9QVElPTlMuY29uZmlnICsgJ1xuJykKICAgIGlm
IE9QVElPTlMuZXh0X21vZHM6CiAgICAgICAgZXh0X3BhdGggPSBvcy5wYXRoLmpvaW4oT1BUSU9O
Uy5zYWx0ZGlyLCBFWFRfQVJDSElWRSkKICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhleHRfcGF0
aCk6CiAgICAgICAgICAgIHVucGFja19leHQoZXh0X3BhdGgpCiAgICAgICAgZWxzZToKICAgICAg
ICAgICAgdmVyc2lvbl9wYXRoID0gb3MucGF0aC5qb2luKE9QVElPTlMuc2FsdGRpciwgJ2V4dF92
ZXJzaW9uJykKICAgICAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKHZlcnNpb25fcGF0aCkg
b3Igbm90IG9zLnBhdGguaXNmaWxlKHZlcnNpb25fcGF0aCk6CiAgICAgICAgICAgICAgICBuZWVk
X2V4dCgpCiAgICAgICAgICAgIHdpdGggb3Blbih2ZXJzaW9uX3BhdGgsICdyJykgYXMgdnBvOgog
ICAgICAgICAgICAgICAgY3VyX3ZlcnNpb24gPSB2cG8ucmVhZGxpbmUoKS5zdHJpcCgpCiAgICAg
ICAgICAgIGlmIGN1cl92ZXJzaW9uICE9IE9QVElPTlMuZXh0X21vZHM6CiAgICAgICAgICAgICAg
ICBuZWVkX2V4dCgpCiAgICAjIEZpeCBwYXJhbWV0ZXIgcGFzc2luZyBpc3N1ZQogICAgaWYgbGVu
KEFSR1MpID09IDE6CiAgICAgICAgYXJndl9wcmVwYXJlZCA9IEFSR1NbMF0uc3BsaXQoKQogICAg
ZWxzZToKICAgICAgICBhcmd2X3ByZXBhcmVkID0gQVJHUwoKICAgIHNhbHRfYXJndiA9IFsKICAg
ICAgICBzeXMuZXhlY3V0YWJsZSwKICAgICAgICBzYWx0X2NhbGxfcGF0aCwKICAgICAgICAnLS1s
b2NhbCcsCiAgICAgICAgJy0tbWV0YWRhdGEnLAogICAgICAgICctLW91dCcsICdqc29uJywKICAg
ICAgICAnLWwnLCAncXVpZXQnLAogICAgICAgICctYycsIE9QVElPTlMuc2FsdGRpciwKICAgICAg
ICAnLS0nLAogICAgXSArIGFyZ3ZfcHJlcGFyZWQKCiAgICBzeXMuc3RkZXJyLndyaXRlKCdTQUxU
X0FSR1Y6IHswfVxuJy5mb3JtYXQoc2FsdF9hcmd2KSkKCiAgICAjIE9ubHkgZW1pdCB0aGUgZGVs
aW1pdGVyIG9uICpib3RoKiBzdGRvdXQgYW5kIHN0ZGVyciB3aGVuIGNvbXBsZXRlbHkgc3VjY2Vz
c2Z1bC4KICAgICMgWWVzLCB0aGUgZmx1c2goKSBpcyBuZWNlc3NhcnkuCiAgICBzeXMuc3Rkb3V0
LndyaXRlKE9QVElPTlMuZGVsaW1pdGVyICsgJ1xuJykKICAgIHN5cy5zdGRvdXQuZmx1c2goKQog
ICAgc3lzLnN0ZGVyci53cml0ZShPUFRJT05TLmRlbGltaXRlciArICdcbicpCiAgICBzeXMuc3Rk
ZXJyLmZsdXNoKCkKICAgIGlmIE9QVElPTlMuY21kX3VtYXNrIGlzIG5vdCBOb25lOgogICAgICAg
IG9sZF91bWFzayA9IG9zLnVtYXNrKE9QVElPTlMuY21kX3VtYXNrKQogICAgaWYgT1BUSU9OUy50
dHk6CiAgICAgICAgc3Rkb3V0LCBfID0gc3VicHJvY2Vzcy5Qb3BlbihzYWx0X2FyZ3YsIHN0ZG91
dD1zdWJwcm9jZXNzLlBJUEUsIHN0ZGVycj1zdWJwcm9jZXNzLlBJUEUpLmNvbW11bmljYXRlKCkK
ICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKHN0ZG91dCkKICAgICAgICBzeXMuc3Rkb3V0LmZsdXNo
KCkKICAgICAgICBpZiBPUFRJT05TLndpcGU6CiAgICAgICAgICAgIHNodXRpbC5ybXRyZWUoT1BU
SU9OUy5zYWx0ZGlyKQogICAgZWxpZiBPUFRJT05TLndpcGU6CiAgICAgICAgc3VicHJvY2Vzcy5j
YWxsKHNhbHRfYXJndikKICAgICAgICBzaHV0aWwucm10cmVlKE9QVElPTlMuc2FsdGRpcikKICAg
IGVsc2U6CiAgICAgICAgb3MuZXhlY3Yoc3lzLmV4ZWN1dGFibGUsIHNhbHRfYXJndikKICAgIGlm
IE9QVElPTlMuY21kX3VtYXNrIGlzIG5vdCBOb25lOgogICAgICAgIG9zLnVtYXNrKG9sZF91bWFz
aykKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBzeXMuZXhpdChtYWluKHN5cy5hcmd2
KSkK
""").decode("utf-8"))'
exit 0
else continue
fi
done
echo "ERROR: Unable to locate appropriate python command" >&2
exit $EX_PYTHON_INVALID
EOF
[DEBUG   ] Child Forked! PID: 86895  STDOUT_FD: 7  STDERR_FD: 9
[DEBUG   ] VT: Salt-SSH SHIM Terminal Command executed. Logged to TRACE
[TRACE   ] Terminal Command: /bin/sh -c ssh -v 172.16.0.253  -o ControlMaster=auto -o StrictHostKeyChecking=no -o GSSAPIAuthentication=no -o ConnectTimeout=65 -o PasswordAuthentication=yes -o PubkeyAuthentication=yes -o Port=22 -o User=Salt  /bin/sh << 'EOF'
set -e
set -u
DEBUG="1"
if [ -n "$DEBUG" ]
then set -x
fi
SUDO=""
if [ -n "" ]
then SUDO="sudo "
fi
EX_PYTHON_INVALID=10
PYTHON_CMDS="python27 python2.7 python26 python2.6 python2 python"
for py_cmd in $PYTHON_CMDS
do if "$py_cmd" -c "import sys; sys.exit(not (sys.hexversion >= 0x02060000 and sys.version_info[0] == 2));" >/dev/null 2>&1
then py_cmd_path=`"$py_cmd" -c 'from __future__ import print_function; import sys; print(sys.executable);'`
exec $SUDO "$py_cmd_path" -c 'import base64; exec(base64.b64decode("""IyBweWxpbnQ6IGRpc2FibGU9Vzk5MDMKJycnClRoaXMgaXMgYSBzaGltIHRoYXQgaGFuZGxlcyBj
aGVja2luZyBhbmQgdXBkYXRpbmcgc2FsdCB0aGluIGFuZAp0aGVuIGludm9raW5nIHRoaW4uCgpU
aGlzIGlzIG5vdCBpbnRlbmRlZCB0byBiZSBpbnN0YW50aWF0ZWQgYXMgYSBtb2R1bGUsIHJhdGhl
ciBpdCBpcyBhCmhlbHBlciBzY3JpcHQgdXNlZCBieSBzYWx0LmNsaWVudC5zc2guU2luZ2xlLiAg
SXQgaXMgaGVyZSwgaW4gYQpzZXBhcmF0ZSBmaWxlLCBmb3IgY29udmVuaWVuY2Ugb2YgZGV2ZWxv
cG1lbnQuCicnJwoKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhYnNvbHV0ZV9pbXBvcnQKCmltcG9y
dCBoYXNobGliCmltcG9ydCB0YXJmaWxlCmltcG9ydCBzaHV0aWwKaW1wb3J0IHN5cwppbXBvcnQg
b3MKaW1wb3J0IHN0YXQKaW1wb3J0IHN1YnByb2Nlc3MKClRISU5fQVJDSElWRSA9ICdzYWx0LXRo
aW4udGd6JwpFWFRfQVJDSElWRSA9ICdzYWx0LWV4dF9tb2RzLnRneicKCiMgS2VlcCB0aGVzZSBp
biBzeW5jIHdpdGggc2FsdC9kZWZhdWx0cy9leGl0Y29kZXMucHkKRVhfVEhJTl9ERVBMT1kgPSAx
MQpFWF9USElOX0NIRUNLU1VNID0gMTIKRVhfTU9EX0RFUExPWSA9IDEzCkVYX1NDUF9OT1RfRk9V
TkQgPSAxNApFWF9DQU5UQ1JFQVQgPSA3MwoKCmNsYXNzIE9CSihvYmplY3QpOgogICAgIiIiQW4g
ZW1wdHkgY2xhc3MgZm9yIGhvbGRpbmcgaW5zdGFuY2UgYXR0cmlidXRlIHZhbHVlcy4iIiIKICAg
IHBhc3MKCgpPUFRJT05TID0gTm9uZQpBUkdTID0gTm9uZQojIFRoZSBiZWxvdyBsaW5lIGlzIHdo
ZXJlIE9QVElPTlMgY2FuIGJlIHJlZGVmaW5lZCB3aXRoIGludGVybmFsIG9wdGlvbnMKIyAocmF0
aGVyIHRoYW4gY2xpIGFyZ3VtZW50cykgd2hlbiB0aGUgc2hpbSBpcyBidW5kbGVkIGJ5CiMgY2xp
ZW50LnNzaC5TaW5nbGUuX2NtZF9zdHIoKQojIHB5bGludDogZGlzYWJsZT1ibG9jay1jb21tZW50
LXNob3VsZC1zdGFydC13aXRoLWNhcmRpbmFsLXNwYWNlCgpPUFRJT05TID0gT0JKKCkKT1BUSU9O
Uy5jb25maWcgPSAiIiIKe2lkOiBiLWhvc3QsIGxvZ19maWxlOiBzYWx0LWNhbGwubG9nLCByb290
X2RpcjogL3RtcC8uU2FsdF80NzM4Mjdfc2FsdC9ydW5uaW5nX2RhdGEsCiAgc29ja19kaXI6IC99
CiIiIgpPUFRJT05TLmRlbGltaXRlciA9ICdfZWRiYzc4ODVlNGY5YWFjOWI4M2IzNTk5OWI2OGQw
MTUxNDhjYWY0NjdiNzhmYTM5YzA1ZjY2OWMwZmY4OTg3OCcKT1BUSU9OUy5zYWx0ZGlyID0gJy90
bXAvLlNhbHRfNDczODI3X3NhbHQnCk9QVElPTlMuY2hlY2tzdW0gPSAnYTg1YjcxNTNmNWRiY2Y5
NGM1ODEzMDg1MDIyNzhhMTVmYTE5ODE5OScKT1BUSU9OUy5oYXNoZnVuYyA9ICdzaGExJwpPUFRJ
T05TLnZlcnNpb24gPSAnMjAxNS44LjgnCk9QVElPTlMuZXh0X21vZHMgPSAnJwpPUFRJT05TLndp
cGUgPSBGYWxzZQpPUFRJT05TLnR0eSA9IEZhbHNlCk9QVElPTlMuY21kX3VtYXNrID0gTm9uZQpB
UkdTID0gWyd0ZXN0LnBpbmcnXQoKCgpkZWYgbmVlZF9kZXBsb3ltZW50KCk6CiAgICAiIiIKICAg
IFNhbHQgdGhpbiBuZWVkcyB0byBiZSBkZXBsb3llZCAtIHByZXAgdGhlIHRhcmdldCBkaXJlY3Rv
cnkgYW5kIGVtaXQgdGhlCiAgICBkZWxpbWV0ZXIgYW5kIGV4aXQgY29kZSB0aGF0IHNpZ25hbHMg
YSByZXF1aXJlZCBkZXBsb3ltZW50LgogICAgIiIiCiAgICBpZiBvcy5wYXRoLmV4aXN0cyhPUFRJ
T05TLnNhbHRkaXIpOgogICAgICAgIHNodXRpbC5ybXRyZWUoT1BUSU9OUy5zYWx0ZGlyKQogICAg
b2xkX3VtYXNrID0gb3MudW1hc2soMG8wNzcpCiAgICBvcy5tYWtlZGlycyhPUFRJT05TLnNhbHRk
aXIpCiAgICBvcy51bWFzayhvbGRfdW1hc2spCiAgICAjIFZlcmlmeSBwZXJtcyBvbiBzYWx0ZGly
CiAgICBldWlkID0gb3MuZ2V0ZXVpZCgpCiAgICBkc3RhdCA9IG9zLnN0YXQoT1BUSU9OUy5zYWx0
ZGlyKQogICAgaWYgZHN0YXQuc3RfdWlkICE9IGV1aWQ6CiAgICAgICAgIyBBdHRhY2sgZGV0ZWN0
ZWQsIHRyeSBhZ2FpbgogICAgICAgIG5lZWRfZGVwbG95bWVudCgpCiAgICBpZiBkc3RhdC5zdF9t
b2RlICE9IDE2ODMyOgogICAgICAgICMgQXR0YWNrIGRldGVjdGVkCiAgICAgICAgbmVlZF9kZXBs
b3ltZW50KCkKICAgICMgSWYgU1VET2luZyB0aGVuIGFsc28gZ2l2ZSB0aGUgc3VwZXIgdXNlciBn
cm91cCB3cml0ZSBwZXJtaXNzaW9ucwogICAgc3Vkb19naWQgPSBvcy5lbnZpcm9uLmdldCgnU1VE
T19HSUQnKQogICAgaWYgc3Vkb19naWQ6CiAgICAgICAgb3MuY2hvd24oT1BUSU9OUy5zYWx0ZGly
LCAtMSwgaW50KHN1ZG9fZ2lkKSkKICAgICAgICBzdHQgPSBvcy5zdGF0KE9QVElPTlMuc2FsdGRp
cikKICAgICAgICBvcy5jaG1vZChPUFRJT05TLnNhbHRkaXIsIHN0dC5zdF9tb2RlIHwgc3RhdC5T
X0lXR1JQIHwgc3RhdC5TX0lSR1JQIHwgc3RhdC5TX0lYR1JQKQoKICAgICMgRGVsaW1pdGVyIGVt
aXR0ZWQgb24gc3Rkb3V0ICpvbmx5KiB0byBpbmRpY2F0ZSBzaGltIG1lc3NhZ2UgdG8gbWFzdGVy
LgogICAgc3lzLnN0ZG91dC53cml0ZSgiezB9XG5kZXBsb3lcbiIuZm9ybWF0KE9QVElPTlMuZGVs
aW1pdGVyKSkKICAgIHN5cy5leGl0KEVYX1RISU5fREVQTE9ZKQoKCiMgQWRhcHRlZCBmcm9tIHNh
bHQudXRpbHMuZ2V0X2hhc2goKQpkZWYgZ2V0X2hhc2gocGF0aCwgZm9ybT0nc2hhMScsIGNodW5r
X3NpemU9NDA5Nik6CiAgICAiIiJHZW5lcmF0ZSBhIGhhc2ggZGlnZXN0IHN0cmluZyBmb3IgYSBm
aWxlLiIiIgogICAgdHJ5OgogICAgICAgIGhhc2hfdHlwZSA9IGdldGF0dHIoaGFzaGxpYiwgZm9y
bSkKICAgIGV4Y2VwdCBBdHRyaWJ1dGVFcnJvcjoKICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCdJ
bnZhbGlkIGhhc2ggdHlwZTogezB9Jy5mb3JtYXQoZm9ybSkpCiAgICB3aXRoIG9wZW4ocGF0aCwg
J3JiJykgYXMgaWZpbGU6CiAgICAgICAgaGFzaF9vYmogPSBoYXNoX3R5cGUoKQogICAgICAgICMg
cmVhZCB0aGUgZmlsZSBpbiBpbiBjaHVua3MsIG5vdCB0aGUgZW50aXJlIGZpbGUKICAgICAgICBm
b3IgY2h1bmsgaW4gaXRlcihsYW1iZGE6IGlmaWxlLnJlYWQoY2h1bmtfc2l6ZSksIGInJyk6CiAg
ICAgICAgICAgIGhhc2hfb2JqLnVwZGF0ZShjaHVuaykKICAgICAgICByZXR1cm4gaGFzaF9vYmou
aGV4ZGlnZXN0KCkKCgpkZWYgdW5wYWNrX3RoaW4odGhpbl9wYXRoKToKICAgICIiIlVucGFjayB0
aGUgU2FsdCB0aGluIGFyY2hpdmUuIiIiCiAgICB0ZmlsZSA9IHRhcmZpbGUuVGFyRmlsZS5nem9w
ZW4odGhpbl9wYXRoKQogICAgb2xkX3VtYXNrID0gb3MudW1hc2soMG8wNzcpCiAgICB0ZmlsZS5l
eHRyYWN0YWxsKHBhdGg9T1BUSU9OUy5zYWx0ZGlyKQogICAgdGZpbGUuY2xvc2UoKQogICAgb3Mu
dW1hc2sob2xkX3VtYXNrKQogICAgb3MudW5saW5rKHRoaW5fcGF0aCkKCgpkZWYgbmVlZF9leHQo
KToKICAgICIiIlNpZ25hbCB0aGF0IGV4dGVybmFsIG1vZHVsZXMgbmVlZCB0byBiZSBkZXBsb3ll
ZC4iIiIKICAgIHN5cy5zdGRvdXQud3JpdGUoInswfVxuZXh0X21vZHNcbiIuZm9ybWF0KE9QVElP
TlMuZGVsaW1pdGVyKSkKICAgIHN5cy5leGl0KEVYX01PRF9ERVBMT1kpCgoKZGVmIHVucGFja19l
eHQoZXh0X3BhdGgpOgogICAgIiIiVW5wYWNrIHRoZSBleHRlcm5hbCBtb2R1bGVzLiIiIgogICAg
bW9kY2FjaGUgPSBvcy5wYXRoLmpvaW4oCiAgICAgICAgICAgIE9QVElPTlMuc2FsdGRpciwKICAg
ICAgICAgICAgJ3J1bm5pbmdfZGF0YScsCiAgICAgICAgICAgICd2YXInLAogICAgICAgICAgICAn
Y2FjaGUnLAogICAgICAgICAgICAnc2FsdCcsCiAgICAgICAgICAgICdtaW5pb24nLAogICAgICAg
ICAgICAnZXh0bW9kcycpCiAgICB0ZmlsZSA9IHRhcmZpbGUuVGFyRmlsZS5nem9wZW4oZXh0X3Bh
dGgpCiAgICBvbGRfdW1hc2sgPSBvcy51bWFzaygwbzA3NykKICAgIHRmaWxlLmV4dHJhY3RhbGwo
cGF0aD1tb2RjYWNoZSkKICAgIHRmaWxlLmNsb3NlKCkKICAgIG9zLnVtYXNrKG9sZF91bWFzaykK
ICAgIG9zLnVubGluayhleHRfcGF0aCkKICAgIHZlcl9wYXRoID0gb3MucGF0aC5qb2luKG1vZGNh
Y2hlLCAnZXh0X3ZlcnNpb24nKQogICAgdmVyX2RzdCA9IG9zLnBhdGguam9pbihPUFRJT05TLnNh
bHRkaXIsICdleHRfdmVyc2lvbicpCiAgICBzaHV0aWwubW92ZSh2ZXJfcGF0aCwgdmVyX2RzdCkK
CgpkZWYgbWFpbihhcmd2KTogICMgcHlsaW50OiBkaXNhYmxlPVcwNjEzCiAgICAiIiJNYWluIHBy
b2dyYW0gYm9keSIiIgogICAgdGhpbl9wYXRoID0gb3MucGF0aC5qb2luKE9QVElPTlMuc2FsdGRp
ciwgVEhJTl9BUkNISVZFKQogICAgaWYgb3MucGF0aC5pc2ZpbGUodGhpbl9wYXRoKToKICAgICAg
ICBpZiBPUFRJT05TLmNoZWNrc3VtICE9IGdldF9oYXNoKHRoaW5fcGF0aCwgT1BUSU9OUy5oYXNo
ZnVuYyk6CiAgICAgICAgICAgIHN5cy5zdGRlcnIud3JpdGUoJ3swfVxuJy5mb3JtYXQoT1BUSU9O
Uy5jaGVja3N1bSkpCiAgICAgICAgICAgIHN5cy5zdGRlcnIud3JpdGUoJ3swfVxuJy5mb3JtYXQo
Z2V0X2hhc2godGhpbl9wYXRoLCBPUFRJT05TLmhhc2hmdW5jKSkpCiAgICAgICAgICAgIG9zLnVu
bGluayh0aGluX3BhdGgpCiAgICAgICAgICAgIHN5cy5zdGRlcnIud3JpdGUoJ1dBUk5JTkc6IGNo
ZWNrc3VtIG1pc21hdGNoIGZvciAiezB9IlxuJy5mb3JtYXQodGhpbl9wYXRoKSkKICAgICAgICAg
ICAgc3lzLmV4aXQoRVhfVEhJTl9DSEVDS1NVTSkKICAgICAgICB1bnBhY2tfdGhpbih0aGluX3Bh
dGgpCiAgICAgICAgIyBTYWx0IHRoaW4gbm93IGlzIGF2YWlsYWJsZSB0byB1c2UKICAgIGVsc2U6
CiAgICAgICAgc2Nwc3RhdCA9IHN1YnByb2Nlc3MuUG9wZW4oWycvYmluL3NoJywgJy1jJywgJ2Nv
bW1hbmQgLXYgc2NwJ10pLndhaXQoKQogICAgICAgIGlmIHNjcHN0YXQgIT0gMDoKICAgICAgICAg
ICAgc3lzLmV4aXQoRVhfU0NQX05PVF9GT1VORCkKCiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhp
c3RzKE9QVElPTlMuc2FsdGRpcik6CiAgICAgICAgICAgIG5lZWRfZGVwbG95bWVudCgpCgogICAg
ICAgIGlmIG5vdCBvcy5wYXRoLmlzZGlyKE9QVElPTlMuc2FsdGRpcik6CiAgICAgICAgICAgIHN5
cy5zdGRlcnIud3JpdGUoCiAgICAgICAgICAgICAgICAnRVJST1I6IHNhbHQgcGF0aCAiezB9IiBl
eGlzdHMgYnV0IGlzJwogICAgICAgICAgICAgICAgJyBub3QgYSBkaXJlY3RvcnlcbicuZm9ybWF0
KE9QVElPTlMuc2FsdGRpcikKICAgICAgICAgICAgKQogICAgICAgICAgICBzeXMuZXhpdChFWF9D
QU5UQ1JFQVQpCgogICAgICAgIHZlcnNpb25fcGF0aCA9IG9zLnBhdGguam9pbihPUFRJT05TLnNh
bHRkaXIsICd2ZXJzaW9uJykKICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHModmVyc2lvbl9w
YXRoKSBvciBub3Qgb3MucGF0aC5pc2ZpbGUodmVyc2lvbl9wYXRoKToKICAgICAgICAgICAgc3lz
LnN0ZGVyci53cml0ZSgKICAgICAgICAgICAgICAgICdXQVJOSU5HOiBVbmFibGUgdG8gbG9jYXRl
IGN1cnJlbnQgdGhpbiAnCiAgICAgICAgICAgICAgICAnIHZlcnNpb246IHswfS5cbicuZm9ybWF0
KHZlcnNpb25fcGF0aCkKICAgICAgICAgICAgKQogICAgICAgICAgICBuZWVkX2RlcGxveW1lbnQo
KQogICAgICAgIHdpdGggb3Blbih2ZXJzaW9uX3BhdGgsICdyJykgYXMgdnBvOgogICAgICAgICAg
ICBjdXJfdmVyc2lvbiA9IHZwby5yZWFkbGluZSgpLnN0cmlwKCkKICAgICAgICBpZiBjdXJfdmVy
c2lvbiAhPSBPUFRJT05TLnZlcnNpb246CiAgICAgICAgICAgIHN5cy5zdGRlcnIud3JpdGUoCiAg
ICAgICAgICAgICAgICAnV0FSTklORzogY3VycmVudCB0aGluIHZlcnNpb24gezB9JwogICAgICAg
ICAgICAgICAgJyBpcyBub3QgdXAtdG8tZGF0ZSB3aXRoIHsxfS5cbicuZm9ybWF0KAogICAgICAg
ICAgICAgICAgICAgIGN1cl92ZXJzaW9uLCBPUFRJT05TLnZlcnNpb24KICAgICAgICAgICAgICAg
ICkKICAgICAgICAgICAgKQogICAgICAgICAgICBuZWVkX2RlcGxveW1lbnQoKQogICAgICAgICMg
U2FsdCB0aGluIGV4aXN0cyBhbmQgaXMgdXAtdG8tZGF0ZSAtIGZhbGwgdGhyb3VnaCBhbmQgdXNl
IGl0CgogICAgc2FsdF9jYWxsX3BhdGggPSBvcy5wYXRoLmpvaW4oT1BUSU9OUy5zYWx0ZGlyLCAn
c2FsdC1jYWxsJykKICAgIGlmIG5vdCBvcy5wYXRoLmlzZmlsZShzYWx0X2NhbGxfcGF0aCk6CiAg
ICAgICAgc3lzLnN0ZGVyci53cml0ZSgnRVJST1I6IHRoaW4gaXMgbWlzc2luZyAiezB9IlxuJy5m
b3JtYXQoc2FsdF9jYWxsX3BhdGgpKQogICAgICAgIG5lZWRfZGVwbG95bWVudCgpCgogICAgd2l0
aCBvcGVuKG9zLnBhdGguam9pbihPUFRJT05TLnNhbHRkaXIsICdtaW5pb24nKSwgJ3cnKSBhcyBj
b25maWc6CiAgICAgICAgY29uZmlnLndyaXRlKE9QVElPTlMuY29uZmlnICsgJ1xuJykKICAgIGlm
IE9QVElPTlMuZXh0X21vZHM6CiAgICAgICAgZXh0X3BhdGggPSBvcy5wYXRoLmpvaW4oT1BUSU9O
Uy5zYWx0ZGlyLCBFWFRfQVJDSElWRSkKICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhleHRfcGF0
aCk6CiAgICAgICAgICAgIHVucGFja19leHQoZXh0X3BhdGgpCiAgICAgICAgZWxzZToKICAgICAg
ICAgICAgdmVyc2lvbl9wYXRoID0gb3MucGF0aC5qb2luKE9QVElPTlMuc2FsdGRpciwgJ2V4dF92
ZXJzaW9uJykKICAgICAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKHZlcnNpb25fcGF0aCkg
b3Igbm90IG9zLnBhdGguaXNmaWxlKHZlcnNpb25fcGF0aCk6CiAgICAgICAgICAgICAgICBuZWVk
X2V4dCgpCiAgICAgICAgICAgIHdpdGggb3Blbih2ZXJzaW9uX3BhdGgsICdyJykgYXMgdnBvOgog
ICAgICAgICAgICAgICAgY3VyX3ZlcnNpb24gPSB2cG8ucmVhZGxpbmUoKS5zdHJpcCgpCiAgICAg
ICAgICAgIGlmIGN1cl92ZXJzaW9uICE9IE9QVElPTlMuZXh0X21vZHM6CiAgICAgICAgICAgICAg
ICBuZWVkX2V4dCgpCiAgICAjIEZpeCBwYXJhbWV0ZXIgcGFzc2luZyBpc3N1ZQogICAgaWYgbGVu
KEFSR1MpID09IDE6CiAgICAgICAgYXJndl9wcmVwYXJlZCA9IEFSR1NbMF0uc3BsaXQoKQogICAg
ZWxzZToKICAgICAgICBhcmd2X3ByZXBhcmVkID0gQVJHUwoKICAgIHNhbHRfYXJndiA9IFsKICAg
ICAgICBzeXMuZXhlY3V0YWJsZSwKICAgICAgICBzYWx0X2NhbGxfcGF0aCwKICAgICAgICAnLS1s
b2NhbCcsCiAgICAgICAgJy0tbWV0YWRhdGEnLAogICAgICAgICctLW91dCcsICdqc29uJywKICAg
ICAgICAnLWwnLCAncXVpZXQnLAogICAgICAgICctYycsIE9QVElPTlMuc2FsdGRpciwKICAgICAg
ICAnLS0nLAogICAgXSArIGFyZ3ZfcHJlcGFyZWQKCiAgICBzeXMuc3RkZXJyLndyaXRlKCdTQUxU
X0FSR1Y6IHswfVxuJy5mb3JtYXQoc2FsdF9hcmd2KSkKCiAgICAjIE9ubHkgZW1pdCB0aGUgZGVs
aW1pdGVyIG9uICpib3RoKiBzdGRvdXQgYW5kIHN0ZGVyciB3aGVuIGNvbXBsZXRlbHkgc3VjY2Vz
c2Z1bC4KICAgICMgWWVzLCB0aGUgZmx1c2goKSBpcyBuZWNlc3NhcnkuCiAgICBzeXMuc3Rkb3V0
LndyaXRlKE9QVElPTlMuZGVsaW1pdGVyICsgJ1xuJykKICAgIHN5cy5zdGRvdXQuZmx1c2goKQog
ICAgc3lzLnN0ZGVyci53cml0ZShPUFRJT05TLmRlbGltaXRlciArICdcbicpCiAgICBzeXMuc3Rk
ZXJyLmZsdXNoKCkKICAgIGlmIE9QVElPTlMuY21kX3VtYXNrIGlzIG5vdCBOb25lOgogICAgICAg
IG9sZF91bWFzayA9IG9zLnVtYXNrKE9QVElPTlMuY21kX3VtYXNrKQogICAgaWYgT1BUSU9OUy50
dHk6CiAgICAgICAgc3Rkb3V0LCBfID0gc3VicHJvY2Vzcy5Qb3BlbihzYWx0X2FyZ3YsIHN0ZG91
dD1zdWJwcm9jZXNzLlBJUEUsIHN0ZGVycj1zdWJwcm9jZXNzLlBJUEUpLmNvbW11bmljYXRlKCkK
ICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKHN0ZG91dCkKICAgICAgICBzeXMuc3Rkb3V0LmZsdXNo
KCkKICAgICAgICBpZiBPUFRJT05TLndpcGU6CiAgICAgICAgICAgIHNodXRpbC5ybXRyZWUoT1BU
SU9OUy5zYWx0ZGlyKQogICAgZWxpZiBPUFRJT05TLndpcGU6CiAgICAgICAgc3VicHJvY2Vzcy5j
YWxsKHNhbHRfYXJndikKICAgICAgICBzaHV0aWwucm10cmVlKE9QVElPTlMuc2FsdGRpcikKICAg
IGVsc2U6CiAgICAgICAgb3MuZXhlY3Yoc3lzLmV4ZWN1dGFibGUsIHNhbHRfYXJndikKICAgIGlm
IE9QVElPTlMuY21kX3VtYXNrIGlzIG5vdCBOb25lOgogICAgICAgIG9zLnVtYXNrKG9sZF91bWFz
aykKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBzeXMuZXhpdChtYWluKHN5cy5hcmd2
KSkK
""").decode("utf-8"))'
exit 0
else continue
fi
done
echo "ERROR: Unable to locate appropriate python command" >&2
exit $EX_PYTHON_INVALID
EOF
[TRACE   ] OpenSSH_6.6.1, OpenSSL 0.9.8zh-freebsd 3 Dec 2015
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Connecting to 172.16.0.253 [172.16.0.253] port 22.
debug1: fd 3 clearing O_NONBLOCK
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: identity file /root/.ssh/id_rsa type -1
debug1: identity file /root/.ssh/id_rsa-cert type -1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: identity file /root/.ssh/id_dsa-cert type -1
debug1: identity file /root/.ssh/id_ecdsa type -1
debug1: identity file /root/.ssh/id_ecdsa-cert type -1
debug1: identity file /root/.ssh/id_ed25519 type -1
debug1: identity file /root/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_6.6.1_hpn13v11 FreeBSD-20140420
[TRACE   ] debug1: Remote protocol version 2.0, remote software version OpenSSH_7.2 FreeBSD-20160310
debug1: match: OpenSSH_7.2 FreeBSD-20160310 pat OpenSSH* compat 0x04000000
debug1: Remote is not HPN-aware
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server->client aes128-ctr hmac-sha1-etm@openssh.com none
debug1: kex: client->server aes128-ctr hmac-sha1-etm@openssh.com none
debug1: sending SSH2_MSG_KEX_ECDH_INIT
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
[TRACE   ] debug1: Server host key: ECDSA bc:df:37:e4:ce:86:6f:c1:84:2f:e8:70:c6:e9:dc:05
debug1: Host '172.16.0.253' is known and matches the ECDSA host key.
debug1: Found key in /root/.ssh/known_hosts:3
[TRACE   ] debug1: ssh_ecdsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
[TRACE   ] debug1: SSH2_MSG_SERVICE_ACCEPT received
[TRACE   ] debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: Next authentication method: publickey
debug1: Offering RSA public key: .ssh/id_gkey
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: Offering ECDSA public key: .ssh/id_servers
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: Trying private key: /root/.ssh/id_rsa
debug1: Trying private key: /root/.ssh/id_dsa
debug1: Trying private key: /root/.ssh/id_ecdsa
debug1: Trying private key: /root/.ssh/id_ed25519
debug1: Next authentication method: keyboard-interactive
[TRACE   ] debug1: read_passphrase: can't open /dev/tty: Device not configured
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: read_passphrase: can't open /dev/tty: Device not configured
[TRACE   ] debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: read_passphrase: can't open /dev/tty: Device not configured
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: No more authentication methods to try.
Permission denied (publickey,keyboard-interactive).
[TRACE   ] STDOUT 172.16.0.253

[TRACE   ] STDERR 172.16.0.253
OpenSSH_6.6.1, OpenSSL 0.9.8zh-freebsd 3 Dec 2015
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: Connecting to 172.16.0.253 [172.16.0.253] port 22.
debug1: fd 3 clearing O_NONBLOCK
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: identity file /root/.ssh/id_rsa type -1
debug1: identity file /root/.ssh/id_rsa-cert type -1
debug1: identity file /root/.ssh/id_dsa type -1
debug1: identity file /root/.ssh/id_dsa-cert type -1
debug1: identity file /root/.ssh/id_ecdsa type -1
debug1: identity file /root/.ssh/id_ecdsa-cert type -1
debug1: identity file /root/.ssh/id_ed25519 type -1
debug1: identity file /root/.ssh/id_ed25519-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_6.6.1_hpn13v11 FreeBSD-20140420
debug1: Remote protocol version 2.0, remote software version OpenSSH_7.2 FreeBSD-20160310
debug1: match: OpenSSH_7.2 FreeBSD-20160310 pat OpenSSH* compat 0x04000000
debug1: Remote is not HPN-aware
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server->client aes128-ctr hmac-sha1-etm@openssh.com none
debug1: kex: client->server aes128-ctr hmac-sha1-etm@openssh.com none
debug1: sending SSH2_MSG_KEX_ECDH_INIT
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ECDSA bc:df:37:e4:ce:86:6f:c1:84:2f:e8:70:c6:e9:dc:05
debug1: Host '172.16.0.253' is known and matches the ECDSA host key.
debug1: Found key in /root/.ssh/known_hosts:3
debug1: ssh_ecdsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: Next authentication method: publickey
debug1: Offering RSA public key: .ssh/id_gkey
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: Offering ECDSA public key: .ssh/id_servers
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: Trying private key: /root/.ssh/id_rsa
debug1: Trying private key: /root/.ssh/id_dsa
debug1: Trying private key: /root/.ssh/id_ecdsa
debug1: Trying private key: /root/.ssh/id_ed25519
debug1: Next authentication method: keyboard-interactive
debug1: read_passphrase: can't open /dev/tty: Device not configured
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: read_passphrase: can't open /dev/tty: Device not configured
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: read_passphrase: can't open /dev/tty: Device not configured
debug1: Authentications that can continue: publickey,keyboard-interactive
debug1: No more authentication methods to try.
Permission denied (publickey,keyboard-interactive).

[DEBUG   ] RETCODE 172.16.0.253: 255
[DEBUG   ] SHIM retcode(255) and command:
Permission denied for host b-host, do you want to deploy the salt-ssh key? (password required):
[Y/n] n
[DEBUG   ] LazyLoaded nested.output
[TRACE   ] data = {'b-host': {'retcode': 255, 'stderr': "OpenSSH_6.6.1, OpenSSL 0.9.8zh-freebsd 3 Dec 2015\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug1: Connecting to 172.16.0.253 [172.16.0.253] port 22.\r\ndebug1: fd 3 clearing O_NONBLOCK\r\ndebug1: Connection established.\r\ndebug1: permanently_set_uid: 0/0\r\ndebug1: identity file /root/.ssh/id_rsa type -1\r\ndebug1: identity file /root/.ssh/id_rsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_dsa type -1\r\ndebug1: identity file /root/.ssh/id_dsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_ecdsa type -1\r\ndebug1: identity file /root/.ssh/id_ecdsa-cert type -1\r\ndebug1: identity file /root/.ssh/id_ed25519 type -1\r\ndebug1: identity file /root/.ssh/id_ed25519-cert type -1\r\ndebug1: Enabling compatibility mode for protocol 2.0\r\ndebug1: Local version string SSH-2.0-OpenSSH_6.6.1_hpn13v11 FreeBSD-20140420\r\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.2 FreeBSD-20160310\r\ndebug1: match: OpenSSH_7.2 FreeBSD-20160310 pat OpenSSH* compat 0x04000000\r\ndebug1: Remote is not HPN-aware\r\ndebug1: SSH2_MSG_KEXINIT sent\r\ndebug1: SSH2_MSG_KEXINIT received\r\ndebug1: kex: server->client aes128-ctr hmac-sha1-etm@openssh.com none\r\ndebug1: kex: client->server aes128-ctr hmac-sha1-etm@openssh.com none\r\ndebug1: sending SSH2_MSG_KEX_ECDH_INIT\r\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\r\ndebug1: Server host key: ECDSA bc:df:37:e4:ce:86:6f:c1:84:2f:e8:70:c6:e9:dc:05\r\ndebug1: Host '172.16.0.253' is known and matches the ECDSA host key.\r\ndebug1: Found key in /root/.ssh/known_hosts:3\r\ndebug1: ssh_ecdsa_verify: signature correct\r\ndebug1: SSH2_MSG_NEWKEYS sent\r\ndebug1: expecting SSH2_MSG_NEWKEYS\r\ndebug1: SSH2_MSG_NEWKEYS received\r\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\r\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\r\ndebug1: Authentications that can continue: publickey,keyboard-interactive\r\ndebug1: Next authentication method: publickey\r\ndebug1: Offering RSA public key: .ssh/id_gkey\r\ndebug1: Authentications that can continue: publickey,keyboard-interactive\r\ndebug1: Offering ECDSA public key: .ssh/id_servers\r\ndebug1: Authentications that can continue: publickey,keyboard-interactive\r\ndebug1: Trying private key: /root/.ssh/id_rsa\r\ndebug1: Trying private key: /root/.ssh/id_dsa\r\ndebug1: Trying private key: /root/.ssh/id_ecdsa\r\ndebug1: Trying private key: /root/.ssh/id_ed25519\r\ndebug1: Next authentication method: keyboard-interactive\r\ndebug1: read_passphrase: can't open /dev/tty: Device not configured\r\ndebug1: Authentications that can continue: publickey,keyboard-interactive\r\ndebug1: read_passphrase: can't open /dev/tty: Device not configured\r\ndebug1: Authentications that can continue: publickey,keyboard-interactive\r\ndebug1: read_passphrase: can't open /dev/tty: Device not configured\r\ndebug1: Authentications that can continue: publickey,keyboard-interactive\r\ndebug1: No more authentication methods to try.\r\nPermission denied (publickey,keyboard-interactive).\r\n", 'stdout': ''}}
b-host:
    ----------
    retcode:
        255
    stderr:
        OpenSSH_6.6.1, OpenSSL 0.9.8zh-freebsd 3 Dec 2015
        debug1: Reading configuration data /etc/ssh/ssh_config
        debug1: Connecting to 172.16.0.253 [172.16.0.253] port 22.
        debug1: fd 3 clearing O_NONBLOCK
        debug1: Connection established.
        debug1: permanently_set_uid: 0/0
        debug1: identity file /root/.ssh/id_rsa type -1
        debug1: identity file /root/.ssh/id_rsa-cert type -1
        debug1: identity file /root/.ssh/id_dsa type -1
        debug1: identity file /root/.ssh/id_dsa-cert type -1
        debug1: identity file /root/.ssh/id_ecdsa type -1
        debug1: identity file /root/.ssh/id_ecdsa-cert type -1
        debug1: identity file /root/.ssh/id_ed25519 type -1
        debug1: identity file /root/.ssh/id_ed25519-cert type -1
        debug1: Enabling compatibility mode for protocol 2.0
        debug1: Local version string SSH-2.0-OpenSSH_6.6.1_hpn13v11 FreeBSD-20140420
        debug1: Remote protocol version 2.0, remote software version OpenSSH_7.2 FreeBSD-20160310
        debug1: match: OpenSSH_7.2 FreeBSD-20160310 pat OpenSSH* compat 0x04000000
        debug1: Remote is not HPN-aware
        debug1: SSH2_MSG_KEXINIT sent
        debug1: SSH2_MSG_KEXINIT received
        debug1: kex: server->client aes128-ctr hmac-sha1-etm@openssh.com none
        debug1: kex: client->server aes128-ctr hmac-sha1-etm@openssh.com none
        debug1: sending SSH2_MSG_KEX_ECDH_INIT
        debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
        debug1: Server host key: ECDSA bc:df:37:e4:ce:86:6f:c1:84:2f:e8:70:c6:e9:dc:05
        debug1: Host '172.16.0.253' is known and matches the ECDSA host key.
        debug1: Found key in /root/.ssh/known_hosts:3
        debug1: ssh_ecdsa_verify: signature correct
        debug1: SSH2_MSG_NEWKEYS sent
        debug1: expecting SSH2_MSG_NEWKEYS
        debug1: SSH2_MSG_NEWKEYS received
        debug1: SSH2_MSG_SERVICE_REQUEST sent
        debug1: SSH2_MSG_SERVICE_ACCEPT received
        debug1: Authentications that can continue: publickey,keyboard-interactive
        debug1: Next authentication method: publickey
        debug1: Offering RSA public key: .ssh/id_gkey
        debug1: Authentications that can continue: publickey,keyboard-interactive
        debug1: Offering ECDSA public key: .ssh/id_servers
        debug1: Authentications that can continue: publickey,keyboard-interactive
        debug1: Trying private key: /root/.ssh/id_rsa
        debug1: Trying private key: /root/.ssh/id_dsa
        debug1: Trying private key: /root/.ssh/id_ecdsa
        debug1: Trying private key: /root/.ssh/id_ed25519
        debug1: Next authentication method: keyboard-interactive
        debug1: read_passphrase: can't open /dev/tty: Device not configured
        debug1: Authentications that can continue: publickey,keyboard-interactive
        debug1: read_passphrase: can't open /dev/tty: Device not configured
        debug1: Authentications that can continue: publickey,keyboard-interactive
        debug1: read_passphrase: can't open /dev/tty: Device not configured
        debug1: Authentications that can continue: publickey,keyboard-interactive
        debug1: No more authentication methods to try.
        Permission denied (publickey,keyboard-interactive).
    stdout:
```

### Versions Report
Tested on few salt and OS versions - result not changed:
```
# salt-ssh --versions-report
Salt Version:
           Salt: 2015.8.8

Dependency Versions:
         Jinja2: 2.8
       M2Crypto: 0.22
           Mako: Not Installed
         PyYAML: 3.11
          PyZMQ: 15.2.0
         Python: 2.7.11 (default, May 20 2016, 05:26:07)
           RAET: Not Installed
        Tornado: 4.3
            ZMQ: 4.1.2
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.3
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
        libgit2: Not Installed
        libnacl: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.7
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
   python-gnupg: Not Installed
          smmap: Not Installed
        timelib: Not Installed

System Versions:
           dist:
        machine: amd64
        release: 9.3-RELEASE-p43
```
and:
```
# salt-ssh --versions-report
Salt Version:
           Salt: 2016.3.4

Dependency Versions:
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.5.3
          gitdb: Not Installed
      gitpython: Not Installed
          ioflo: Not Installed
         Jinja2: 2.8
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: 0.24.0
           Mako: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.4.7
   mysql-python: Not Installed
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
         Python: 2.7.12 (default, Nov  4 2016, 08:34:56)
   python-gnupg: Not Installed
         PyYAML: 3.11
          PyZMQ: 16.0.1
           RAET: Not Installed
          smmap: Not Installed
        timelib: Not Installed
        Tornado: 4.4.2
            ZMQ: 4.1.5

System Versions:
           dist:
        machine: i386
        release: 10.2-RELEASE-p18
         system: FreeBSD
        version: Not Installed
```
