Steps to reproduce:
1. Create a provider in salt-cloud with the ec2 provider and a space in the keyname (e.g. `keyname: Foo Bar`)
2. Spin up a new machine in EC2: `$ sudo salt-cloud -p my_base myinstance`
3. Note the error:

```
myinstance
    ----------
    Errors:
        ----------
        Error:
            ----------
            Code:
                SignatureDoesNotMatch
            Message:
                The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.
    RequestID:
        293b2b17-af0a-4441-81f1-ea78a20d615a
```

The ec2 request that fails looks something like this:

```
[DEBUG   ] EC2 Request: https://ec2.us-east-1.amazonaws.com/?SignatureVersion=2&AWSAccessKeyId=[snip]&Version=2013-10-01&Timestamp=2014-02-04T20%3A50%3A34Z&Signature=[snip]&ImageId=ami-83e2dcea&SignatureMethod=HmacSHA256&KeyName=Foo+Bar&MaxCount=1&Action=RunInstances&MinCount=1&InstanceType=m3.large
[ERROR   ] EC2 Response Status Code and Error: [403 Forbidden] {'Errors': {'Error': {'Message': 'The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.', 'Code': 'SignatureDoesNotMatch'}}, 'RequestID': '8f64eb9d-b2bf-429a-95d8-a74cacb175e7'}
```

It works if you pick a key pair that doesn't have a space in the name.
