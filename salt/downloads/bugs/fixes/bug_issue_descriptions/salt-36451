### Description of Issue/Question

When gpg.trust_key(keyid=x, user=y) is run, it will return "Key x not found in GPG keychain" because trust_key always looks at the default keychain, not the user's keychain. 
### Setup

In develop, lines 820-823 of gpg.py (https://github.com/saltstack/salt/blob/develop/salt/modules/gpg.py)
 get the key as follows:
```
    if not fingerprint:
        if keyid:
            key = get_key(keyid)
```
which defaults to the keychain the user is running as, even if another user is input in gpg.trust_key. This should be 

key = get_key(keyid, user=user) so trust_key will actually get the key from the keychain of the input user. 

This issue is also present in 2016.3, etc. 
### Steps to Reproduce Issue

Create a user y with a keychain that includes key x. Try to run gpg.trust_key(keyid=x, user=y) as a different user. Should say "Key x not in GPG Keychain." Can check that the key is in the GPG keychain by running gpg.get_key(keyid=x, user=y), which should be successful. 
### Versions Report

This issue is 
Salt Version:
           Salt: 2015.8.10

Dependency Versions:
         Jinja2: 2.6
       M2Crypto: 0.21.1
           Mako: Not Installed
         PyYAML: 3.10
          PyZMQ: 14.0.1
         Python: 2.7.3 (default, Dec 18 2014, 19:10:20)
           RAET: Not Installed
        Tornado: 4.2.1
            ZMQ: 4.0.4
           cffi: Not Installed
       cherrypy: Not Installed
       dateutil: 2.5.3
          gitdb: 0.5.4
      gitpython: 0.3.2 RC1
          ioflo: Not Installed
        libgit2: Not Installed
        libnacl: Not Installed
   msgpack-pure: Not Installed
 msgpack-python: 0.3.0
   mysql-python: 1.2.3
      pycparser: Not Installed
       pycrypto: 2.6.1
         pygit2: Not Installed
   python-gnupg: 0.3.8
          smmap: 0.8.2
        timelib: Not Installed

System Versions:
           dist: Ubuntu 12.04 precise
        machine: x86_64
        release: 3.8.0-44-generic
         system: Ubuntu 12.04 precise
