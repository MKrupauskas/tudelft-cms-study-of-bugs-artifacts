Using the following state definition, the state always fails even though the package gets installed properly

```
icinga2-bin:
   pkg.installed:
     - version: 0.0.10*
     - refresh: True
     - require:
       - pkgrepo: icinga-unstable-snapshots

icinga-unstable-snapshots:
  pkgrepo.managed:
    - humanname: Icinga Snapshots PPA
    - name: deb http://packages.icinga.org/debian icinga-unstable-snapshots main
    - file: /etc/apt/sources.list.d/icinga-snapshots.list
    - key_url: http://packages.icinga.org/icinga.key
    - require:
      - pkgrepo: boost-ppa
      - pkgrepo: icinga-ppa

boost-ppa:
  pkgrepo.managed:
    - ppa: boost-latest/ppa
```

There are warnings in the logs, but the package gets installed successfully (this output comes from a subsequent run, where the package was installed properly already):

```
[INFO    ] Executing command "dpkg --compare-versions '0.0.10*' lt '0.0.10+icingasnap201405061038.19b7f79'" in directory '/root'
[DEBUG   ] output: dpkg: warning: version '0.0.10*' has bad syntax: invalid character in version number
[INFO    ] Executing command ['apt-get', '-q', '-y', '--force-yes', '-o', 'DPkg::Options::=--force-confold', '-o', 'DPkg::Options::=--force-confdef', 'install', 'icinga2-bin=0.0.10*'] in directory '/root'
[DEBUG   ] output: Reading package lists...
Building dependency tree...
Reading state information...
icinga2-bin is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 9 not upgraded.
```

From glancing at the package state code, it seems like you use
`$ dpkg-query --showformat='${Status} ${Package} ${Version} ${Architecture}\n' -W`
and scan the output to find a match for the given version. But the output contains
`install ok installed icinga2-bin 0.0.10+icingasnap201405061038.19b7f79 amd64`
 and not `icinga2-bin=0.0.10*` and an error is generated:

```
[ERROR   ] The following packages failed to install/update: icinga2-bin=0.0.10*.
```

It would probably be better to look at the output/status code of the call to apt-get install, but maybe there is a good reason not to?

My setup:

```
$ salt --versions-report
           Salt: 2014.1.3
         Python: 2.7.3 (default, Feb 27 2014, 19:58:35)
         Jinja2: 2.7.2
       M2Crypto: 0.21.1
 msgpack-python: 0.1.10
   msgpack-pure: Not Installed
       pycrypto: 2.4.1
         PyYAML: 3.10
          PyZMQ: 13.0.0
            ZMQ: 3.2.2
```
