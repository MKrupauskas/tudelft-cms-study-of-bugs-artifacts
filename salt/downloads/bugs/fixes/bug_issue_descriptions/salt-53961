A state definition like this:

foo:
  user:
    - present
    - workphone: 123

fails:
  comment: These values could not be changed: {u'workphone': 123}

I think the problem is that "123" is (internally) of type int instead of string and the final check if the update worked then fails.

I changed ./salt/states/user.py and it works for me.

In version 2018.3.4:

`    if workphone is not None:`
`-        workphone = sdecode(workphone)`
`+        workphone = sdecode(str(workphone))`
`    if homephone is not None:`
`-        homephone = sdecode(homephone)`
`+        homephone = sdecode(str(homephone))`

In version 2019.2.0:

`     if roomnumber is not None:`
`         roomnumber = salt.utils.data.decode(roomnumber)`
`     if workphone is not None:`
`-        workphone = salt.utils.data.decode(workphone)`
`+        workphone = salt.utils.data.decode(str(workphone))`
`     if homephone is not None:`
`-        homephone = salt.utils.data.decode(homephone)`
`+        homephone = salt.utils.data.decode(str(homephone))`
`     if other is not None:`
`         other = salt.utils.data.decode(other)`

roomnumber might also be affected, but didn't try.

Regards,
Alexander