### Versions:
salt-master: 2018.3.2
salt-minion: 2015.5.10 (not sure if this old version of minion is causing this problem)
python salt client: 2018.3.0 (pip install salt==2018.3.0)

### Problem:
Seems like when I call "get_full_returns" when sending out async cmd(cmd_async) I got some return data not from the jid I was given by the cmd_async call.

### Steps:
Let's say I have two Python program running individually, using different Python venv, program A and program B.
They are both sending cmd to three servers, server 1, 2, and 3.
Program A sends out cmd by using async cmd
```
# Program A
client = salt.client.LocalClient()
jid = client.cmd_async(target, 'cmd.run', [cmd, 'shell="/bin/bash"', 'runas="{}"'.format(runas)])
rv = client.get_full_returns(jid, [target], timeout=180)
```
Program B just sends out cmd using list mode
```
# Program B
client = salt.client.LocalClient()
ret = client.cmd(target_list, 'cmd.run', [cmd, 'shell="/bin/bash"', 'runas="root"'], tgt_type='list')
```

Assuming program A is running job on server 1 with jid 100, program B is running job on server 1, 2, 3.
When I call something like `rv = client.get_full_returns(100, ['server 1'], timeout=180)` in program A, I got return from job triggered by program B on server 1.

Any idea is this due to the old version of salt-minion or misuse of the client call or is it a bug?
I have checked the release note  from 2018.3.1 to 2018.3.3 and did't find something that seems related to this problem.
