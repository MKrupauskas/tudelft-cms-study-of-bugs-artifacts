When Python supports IPv6 but the system does not unit.utils.verify_test.TestVerify.test_verify_socket fails.

The included is a possible fix:

```
--- salt-2014.1.rc3+/tests/unit/utils/verify_test.py.orig       2014-02-06 16:32:54.000000000 -0800
+++ salt-2014.1.rc3+/tests/unit/utils/verify_test.py    2014-02-06 16:48:48.000000000 -0800
@@ -98,7 +98,13 @@
         if socket.has_ipv6:
             # Only run if Python is built with IPv6 support; otherwise
             # this will just fail.
-            self.assertTrue(verify_socket('::', 18000, 18001))
+            try:
+                self.assertTrue(verify_socket('::', 18000, 18001))
+            except socket.error as serr:
+                # Python has IPv6 enabled, but the system cannot create
+                # IPv6 sockets (otherwise the test would return a bool)
+                # - skip the test
+                pass

     @skipIf(os.environ.get('TRAVIS_PYTHON_VERSION', None) is not None,
             'Travis environment does not like too many open files')
```
