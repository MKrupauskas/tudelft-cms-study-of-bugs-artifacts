`cmd.run` or `cmd.script` state functions support termination of executed commands or scripts after specified `timeout` is reached. In my opinion, this should also terminate/kill any processes executed from `onlyif/unless` conditions. 

I use `timeout` parameter to kill stuck processes which may not exit properly. If such clumsy process get stuck in `onlyif/unless` condition it may hang the state although it has `timeout` parameter set.

The following state (tested on Linux) will  `echo` a 'sleeping 100s' message and then it should  `sleep` 100s. I would expect the `sleep` command should be killed after 10s but it won't be as the `unless` condition execution will take longer.

```
sleep_100s:
  cmd.run:
  - name: echo 'sleeping 100s' && sleep 100
  - timeout: 10
  - unless: sleep 50
```

Wouldn't it make sense to get  `timeout` parameter of `cmd` state applied on `onlyif/unless` conditions as well? Or what about  introducing a more generic parameter like `timeout_req` which would timeout `onlyif/unless` condition of any states?
