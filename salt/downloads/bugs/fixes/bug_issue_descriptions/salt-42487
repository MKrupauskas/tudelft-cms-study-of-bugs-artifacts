### Description of Issue/Question
When a `file` state uses Unix-style paths, it cannot create directories on Windows minions because of a failure in splitting the drive letter.

This state worked in 2016.11.5:

```yaml
/opt/foo.exe:
  file.managed:
    - source: salt://win/bin/foo.exe
    - makedirs: true
    - skip_verify: true
```

But now produces this error, if `/opt` does not already exist:

```
2017-07-22 14:32:20,628 [salt.state       ][INFO    ][3976] Running state [/opt/foo.exe] at time 14:32:20.629000
2017-07-22 14:32:20,628 [salt.state       ][INFO    ][3976] Executing state file.managed for [/opt/foo.exe]
2017-07-22 14:32:20,668 [salt.utils.lazy  ][DEBUG   ][3976] LazyLoaded file.source_list
2017-07-22 14:32:20,668 [salt.utils.lazy  ][DEBUG   ][3976] LazyLoaded cp.hash_file
2017-07-22 14:32:20,709 [salt.fileclient  ][DEBUG   ][3976] In saltenv 'base', looking at rel_path 'win/bin/foo.exe' to resolve 'salt://win/bin/foo.exe'
2017-07-22 14:32:20,709 [salt.fileclient  ][DEBUG   ][3976] In saltenv 'base', ** considering ** path 'c:\salt\var\cache\salt\minion\files\base\win\bin\foo.exe' to resolve 'salt://win/bin/foo.exe'
2017-07-22 14:32:20,709 [salt.fileclient  ][DEBUG   ][3976] Fetching file from saltenv 'base', ** attempting ** 'salt://win/bin/foo.exe'
2017-07-22 14:32:20,709 [salt.fileclient  ][DEBUG   ][3976] No dest file found
2017-07-22 14:32:20,729 [salt.fileclient  ][INFO    ][3976] Fetching file from saltenv 'base', ** done ** 'win/bin/foo.exe'
2017-07-22 14:32:20,729 [salt.loaded.int.module.win_file][DEBUG   ][3976] Creating directory: \opt
2017-07-22 14:32:20,739 [salt.loaded.int.states.file][DEBUG   ][3976] Traceback (most recent call last):
  File "C:\salt\bin\lib\site-packages\salt\states\file.py", line 2474, in managed
    **kwargs)
  File "C:\salt\bin\lib\site-packages\salt\modules\file.py", line 4966, in manage_file
    _set_mode_and_make_dirs(name, dir_mode, mode, user, group)
  File "C:\salt\bin\lib\site-packages\salt\modules\file.py", line 4933, in _set_mode_and_make_dirs
    kwargs.get('win_inheritance'))
  File "C:\salt\bin\lib\site-packages\salt\modules\win_file.py", line 1407, in makedirs_
    mkdir(directory_to_create, owner, grant_perms, deny_perms, inheritance)
  File "C:\salt\bin\lib\site-packages\salt\modules\win_file.py", line 1278, in mkdir
    raise CommandExecutionError('Drive {0} is not mapped'.format(drive))
CommandExecutionError: Drive  is not mapped

2017-07-22 14:32:20,739 [salt.state       ][ERROR   ][3976] Unable to manage file: Drive  is not mapped
2017-07-22 14:32:20,739 [salt.state       ][INFO    ][3976] Completed state [/opt/foo.exe] at time 14:32:20.739000 duration_in_ms=110.0
```

Similarly, this state used to work when the target directory did not already exist:

```yaml
copy_example_dir_files:
  file.recurse:
    - name: /Program Files/Example
    - source: salt://example/config
```

But now experiences the same error (slightly different traceback, but ultimately fails at the same line):

```
2017-07-22 14:50:34,217 [salt.state       ][INFO    ][3976] Running state [/Program Files/Example] at time 14:50:34.217000
2017-07-22 14:50:34,227 [salt.state       ][INFO    ][3976] Executing state file.recurse for [/Program Files/Example]
2017-07-22 14:50:34,375 [salt.utils.lazy  ][DEBUG   ][3976] LazyLoaded cp.list_master
2017-07-22 14:50:39,829 [salt.state       ][ERROR   ][3976] An exception occurred in this state: Traceback (most recent call last):
  File "C:\salt\bin\lib\site-packages\salt\state.py", line 1837, in call
    **cdata['kwargs'])
  File "C:\salt\bin\lib\site-packages\salt\loader.py", line 1794, in wrapper
    return f(*args, **kwargs)
  File "C:\salt\bin\lib\site-packages\salt\states\file.py", line 3382, in recurse
    manage_directory(dirname)
  File "C:\salt\bin\lib\site-packages\salt\states\file.py", line 3358, in manage_directory
    require=None)
  File "C:\salt\bin\lib\site-packages\salt\states\file.py", line 2865, in directory
    win_inheritance)
  File "C:\salt\bin\lib\site-packages\salt\modules\win_file.py", line 1278, in mkdir
    raise CommandExecutionError('Drive {0} is not mapped'.format(drive))
CommandExecutionError: Drive  is not mapped

2017-07-22 14:50:39,829 [salt.state       ][INFO    ][3976] Completed state [/Program Files/Example] at time 14:50:39.830000 duration_in_ms=5613.0
```

I don't know where, but I assume that perhaps a call to `os.path.realpath` was removed:

```python
os.path.normpath("/opt/foo.txt")  # == '\\opt\\foo.txt'
os.path.realpath("/opt/foo.txt")  # == 'C:\\opt\\foo.txt'
os.path.realpath(os.path.normpath("/opt/foo.txt"))  # == 'C:\\opt\\foo.txt'
```

### Setup / Steps to Reproduce Issue
If `/opt` (`C:\opt`) does not exist, this state will reproduce the issue:

```yaml
/opt/foo.txt:
  file.managed:
    - contents: hi
    - makedirs: true
```

### Versions Report
```
Salt Version:
           Salt: 2017.7.0

Dependency Versions:
           cffi: 1.10.0
       cherrypy: 10.2.1
       dateutil: 2.6.0
      docker-py: Not Installed
          gitdb: 2.0.2
      gitpython: 2.1.3
          ioflo: Not Installed
         Jinja2: 2.9.6
        libgit2: Not Installed
        libnacl: Not Installed
       M2Crypto: Not Installed
           Mako: 1.0.6
   msgpack-pure: Not Installed
 msgpack-python: 0.4.8
   mysql-python: Not Installed
      pycparser: 2.17
       pycrypto: 2.6.1
   pycryptodome: Not Installed
         pygit2: Not Installed
         Python: 2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:42:59) [MSC v.150
0 32 bit (Intel)]
   python-gnupg: 0.4.0
         PyYAML: 3.11
          PyZMQ: 16.0.2
           RAET: Not Installed
          smmap: 2.0.3
        timelib: 0.2.4
        Tornado: 4.5.1
            ZMQ: 4.1.6

System Versions:
           dist:
         locale: cp1252
        machine: x86
        release: 7
         system: Windows
        version: 7 6.1.7601 SP1 Multiprocessor Free
```